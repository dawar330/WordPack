{"version":3,"sources":["cardano/market-contract/redeemers.js","../node_modules/@emurgo/cardano-serialization-lib-asmjs sync","utils/converter.js","cardano/transaction/coinSelection.js","cardano/transaction/error.types.js","cardano/transaction/index.js","cardano/transaction/languageViews.js","cardano/wallet/index.js","cardano/market-contract/plutus.js","cardano/market-contract/validator.js","cardano/serialization-lib/index.js","store/wallet/walletTypes.js","store/wallet/walletReducer.js","store/collection/collectionTypes.js","store/collection/collectionReducer.js","store/error/errorTypes.js","store/error/errorReducer.js","store/reducers.js","components/Image/index.js","components/Fades/FadeImg.js","components/AssetImageFigure/index.js","components/AssetCard/index.js","cardano/blockfrost-api/error.types.js","config.js","cardano/blockfrost-api/index.js","firebase.js","database/assets.js","database/collections.js","database/wallets.js","store/wallet/walletActions.js","store/error/errorActions.js","store/collection/collectionActions.js","utils/factory.js","utils/resolver.js","store/wallet/api.js","components/ButtonConnect/index.js","components/CollectionLinks/index.js","components/CollectionAbout/index.js","components/CollectionBanner/index.js","components/ListingDisplayListing/index.js","components/Navbar/Search.js","components/Navbar/index.js","pages/Account/AllAssets.js","store/collection/api.js","pages/Account/Events.js","pages/Account/NotConnected.js","pages/Account/index.js","pages/Asset/index.js","pages/Collection/DisplayListing.js","pages/Collection/NoAssetFound.js","pages/Collection/ListingSection.js","hooks/usePolicyMetadatas.js","pages/Collection/index.js","pages/Explore/index.js","pages/Home/index.js","layouts/MainLayout/index.js","pages/Mint/ImageUploader.js","pages/Mint/Loader.js","pages/Mint/Mint.js","routes.js","App.js","index.js","cardano/market-contract/error.types.js","cardano/market-contract/datums.js","cardano/market-contract/index.js"],"names":["BUYER","index","data","Cardano","Instance","PlutusData","new_constr_plutus_data","ConstrPlutusData","new","Int","new_i32","PlutusList","Redeemer","RedeemerTag","new_spend","BigNum","from_str","ExUnits","SELLER","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","fromBech32","bech32","BaseAddress","from_address","Address","from_bech32","fromHex","hex","Buffer","from","toHex","bytes","toString","fromLovelace","lovelace","toLovelace","ada","String","fromCharCode","apply","get_asset_image_source","image","includes","split","link","base64","root","base64regex","startsWith","slice","length","test","linkToSrc","src","Array","isArray","join","numFormatter","num","toFixed","protocolParameters","select","utxoSelection","outputAmount","limit","randomSelect","selection","cloneUTxOList","remaining","subset","amount","cloneValue","cloneUTxOSelection","message","sort","a","b","Number","searchAmountValue","output","utxo","splice","pop","push","addAmounts","isQtyFulfilled","descSelect","nbFreeUTxO","Math","floor","random","improve","range","compare","ideal","newAmount","Value","checked_add","abs","getAmountValue","maximum","amounts","compiledAmounts","splitAmounts","multiasset","len","mA","i","scriptHash","get","j","_assets","Assets","assetName","insert","AssetName","from_bytes","to_bytes","_multiasset","MultiAsset","ScriptHash","_value","set_multiasset","sortAmountList","coin","amountList","sortOrder","sortInt","BigInt","val","to_str","needle","haystack","createSubSet","undefined","cumulatedAmount","min_ada_required","coinsPerUtxoWord","maxFee","minFeeA","maxTxSize","minFeeB","utxoList","map","TransactionUnspentOutput","value","big","group","candidate","gQty","cQty","cScriptHash","cAssetName","createEmptyValue","CoinSelection","setProtocolParameters","randomImprove","inputs","outputs","mergedOutputsAmounts","compiledAmountList","mergeOutputsAmounts","splitOutputsAmounts","change","checked_sub","minAmount","minAda","input","errorTypes","MAX_SIZE_REACHED","COULD_NOT_CREATE_TRANSACTION_UNSPENT_OUTPUT","COULD_NOT_SERIALIZE_TRANSACTION_UNSPENT_OUTPUT","assetsToValue","assets","multiAsset","find","asset","unit","Set","filter","forEach","policy","policyAssets","assetsValue","quantity","initializeTx10","Parameters","getProtocolParameters","TransactionBuilderConfig","Cardanoo","fee_algo","linearFee","coins_per_utxo_word","pool_deposit","poolDeposit","key_deposit","keyDeposit","max_value_size","maxValSize","max_tx_size","build","metadata","txBuilder","datums","initializeTx","TransactionBuilder","LinearFee","priceMem","priceStep","LanguageViews","TransactionOutputs","finalizeTx","changeAddress","utxos","action","assetUtxo","plutusScripts","mint","NativeScript","policyId","seller","transactionWitnessSet","TransactionWitnessSet","add_input","address","add_output","redeemers","Redeemers","add","set_redeemers","set_native_scripts","redeemerIndex","index_of_input","set_plutus_data","set_plutus_scripts","Wallet","getCollateral","collateral","setCollateral","aux_data","AuxiliaryData","generalMetadata","GeneralTransactionMetadata","encode_json_str_to_metadatum","JSON","stringify","set_metadata","set_auxiliary_data","changeMultiAssets","partialChange","partialMultiAssets","policies","assetNames","k","policyAsset","checkMultiAssets","checkValue","makeSplit","set_coin","TransactionOutput","to_address","add_change_if_needed","txBody","set_mint","createTxOutput","tx","Transaction","ErrorTypes","signTx","txVkeyWitnesses","set_vkeys","vkeys","signedTx","body","auxiliary_data","console","log","submitTx","txHash","datum","hash_plutus_data","set_data_hash","createTxUnspentOutput","TransactionInput","TransactionHash","tx_hash","output_index","error","serializeTxUnspentOutput","hexEncodedBytes","serializeTxUnspentOutput10","valueToAssets","multiAssets","name","minUtxo","TransactionInputs","set_collateral","window","cardano","ccvault","enable","instance","this","_provider","gerowallet","availableWallets","getBalance","getNetworkId","getUsedAddresses","usedAddresses","to_bech32","getUtxos","partialSign","contracts","v1","parseInt","process","type","cborHex","v2","contractAddress","version","Contracts","contractScripts","scripts","PlutusScripts","PlutusScript","_wasm","WALLET_CONNECTED","SET_WALLET_LOADING","SET_WALLET_DATA","ADD_WALLET_ASSET","WALLET_STATE","MARKET_TYPE","walletobj","connected","loading","nami","loaded_assets","COLLECTIONS_LOADED","COLLECTIONS_LISTING_LOADED","COLLECTIONS_ADD_TOKENS","COLLECTIONS_LOADING","COLLECTIONS_ADD_ASSETS","collectionobj","loaded","collections","policies_collections","policies_assets","update_tokens","token","policy_id","state_policies_collections","collection","listing","add_assets","state","payload","tmp_policies_assets","asset_id","this_asset","details","tmp_policies_assets_policy","SET_ERROR","CLEAR_ERROR","errorObj","show","detail","combineReducers","wallet","types","provider","tmp_collections","new_tokens","tmp","tmp_policies_collections","collection_id","policy_ids","walletTypes","Image","alt","effect","FadeImg","props","useState","setShow","style","opacity","animation","onLoad","AssetImageFigure","show_trigger","width","no_figure","className","onchainMetadata","height","onClick","cursor","compose","connect","state_collection","dispatch","column_className","show_offer","to","is_martify_verified","is_cnft_verified","meta","color","status","locked","price","offers","Object","top","max","key","o","p","COULD_NOT_FETCH_ASSET_DETAILS","COULD_NOT_FETCH_ASSET_TRANSACTIONS","COULD_NOT_FETCH_ADDRESS_UTXOS","COULD_NOT_FETCH_ASSET_UTXOS","COULD_NOT_FETCH_MINTED_ASSETS","COULD_NOT_FETCH_TRANSACTION_METADATA","COULD_NOT_FETCH_TRANSACTION_UTXOS","COULD_NOT_FETCH_PROTOCOL_PARAMETERS","urls","cardanoscan","REACT_APP_CARDANOSCAN_URL","ipfs","getAssetDetails","response","onchain_metadata","assetDetails","asset_name","readableAssetName","fingerprint","initialMintTxHash","initial_mint_tx_hash","mintOrBurnCount","mint_or_burn_count","renameObjectKey","deleteObjectKey","getLockedUtxosByAsset","getMintedAssets","page","count","order","endpoint","headers","request","base","fetch","project_id","method","then","ok","json","object","oldKey","newKey","newObject","objectKey","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getFirestore","addAssetEvent","getFunctions","newEvent","assetUpdated","events","saveAsset","getAsset","assetId","reference","doc","getDoc","snapshot","exists","getAssets","assetIds","Promise","all","getCollectionAssets","lastVisible","query","where","orderBy","startAfter","getDocs","empty","docs","lockAsset","datumHash","artistAddress","contractVersion","submittedBy","submittedOn","Date","getTime","unlockAsset","getLockedAssets","setDoc","merge","getCollection","verified","walletExists","getWallet","market","saveWallet","addWalletEvent","updatedWallet","listWalletAsset","walletAsset","updatedAssets","delistWalletAsset","listedAsset","updatedMarket","relistWalletAsset","setWalletLoading","setWalletData","set_error","collections_add_tokens","collections_loading","createDatum","tokenName","currencySymbol","sellerAddress","royaltiesAddress","royaltiesPercentage","tn","cs","sa","getAddressKeyHash","ra","rp","createEvent","byWallet","payment_cred","to_keyhash","resolveError","errorType","eventName","loadAssets","callback","GETTING_ASSETS","getWalletAssets","walletAssets","reduce","success","getWalletAddress","nativeAssets","txOut","flatMap","resolveContractVersion","wallets","title","state_wallet","load","getAvailableWallets","msg","connectWallet","is_silent","CONNECTING","usedNetworkId","walletNetworkId","walletAddress","network","connectedWallet","showNotification","setShowNotification","showNotificationMessage","setShowNotificationMessage","showWallets","setShowWallets","connect_wallet","wallet_name","res","useEffect","disabled","href","target","rel","CollectionLinks","links","discord","icon","tooltip","twitter","website","CollectionAbout","thisCollection","description","TitleText","size","text","assetColors","font_color_title","CollectionBanner","is_collection_page","is_asset_page","currentId","setCurrentId","assetImgSrc","setAssetImgSrc","setAssetColors","bannerHeroStyle","setBannerHeroStyle","imgsrc","opencnft","thumbnail","this_style","banner_path","backgroundImage","darkMuted","darkVibrant","banner_collection_height","banner_asset_height","usePalette","logo_path","result","total_volume","min","floor_price","asset_minted","asset_holders","total_tx","ListingDisplayListing","listings","searchText","setSearchText","sortby","setSortby","matchedtokens","x","return_this","toLowerCase","searchingFor","filtered_listing","a_price","b_price","this_nft","placeholder","onChange","event","label","option","item","history","useHistory","setValue","suggestions","setSuggestions","fuse","Fuse","includeScore","shouldSort","minMatchCharLength","threshold","weight","getSuggestions","inputValue","trim","selected_rows","search","filtered","inputProps","newValue","theme","container","containerOpen","inputOpen","inputFocused","suggestionsContainer","suggestionsContainerOpen","suggestionsList","suggestion","suggestionFirst","suggestionHighlighted","sectionContainer","sectionContainerFirst","sectionTitle","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","renderSuggestion","highlightFirstSuggestion","fontSize","Navbar","NoAssetFound","marginBottom","AllAssets","useDispatch","useSelector","setListings","default_list_projects","listProjectsFilter","setListProjectsFilter","filterProject","setFilterProject","filterAsset","setFilterAsset","add_asset","list_nfts","dict_projects","list_projects","list_nfts_id","opencnft_get_policy","catch","err","add_token","get_assets","setEvents","list_events","this_event","format","replace","NotConnected","Connected","TABS","ALL_ASSETS","EVENTS","displayTab","setDisplayTab","Account","AssetHeader","SocialLinks","Listing","list_token","relist_token","delist_token","purchase_token","asset_add_offer","is_owner","PurchaseAsset","showTab","setShowTab","userInputAmount","setUserInputAmount","showModal","setShowModal","successful_transaction","AWAITING_SIGNATURE","purchase_this_token","v","input_price_changed","confirmBtnText","onConfirm","confirmBtnCssClass","ButtonBuy","begin_buy_process","OwnerListAsset","operation","setOperation","list_this_token","AboutAsset","a1","a2","asset_attributes","n","indexOf","attr","marginLeft","ListAttributes","att","at","entries","ListAllAttributes","Fragment","AssetRawMetaData","display","AssetImage","contentType","setContentType","contentSource","setContentSource","ipfs_root","files","thisContentType","mediaType","s","Transactions","opencnft_get_asset_tx","firstLoad","setFirstLoad","fetching","setFetching","transactions","setTransactions","get_txn_martify","list_transactions","asset_purchase_events","sold_at","marketplace","items","opencnft_transactions","feteh_update","ShowNoAssetFound","Asset","useParams","setAsset","setThisCollection","query_asset","collectionDetails","walletUtxos","royalties","percentage","listAsset","listObj","updatedAsset","listToken","currentVersion","latestVersion","data_hash","datumNew","updateListing","updateObj","relistToken","cancelListing","delistToken","purchaseAsset","artist","unlockedAsset","sellerWalletObj","soldEvent","purchaseToken","offer","t","assetAddOffer","opencnftGetAssetTx","DisplayListing","policyIds","some","r","ListingSection","isFetching","setIsFetching","setLastVisible","paginationObject","setPaginationObject","policyMetadatas","setPolicyMetadatas","loadingData","setLoadingData","errorMessage","setErrorMessage","fetchMetadatas","metadatas","statusCode","validMetadatas","usePolicyMetadatas","resetComponentState","useCallback","tmpPaginationObject","hasMore","itemsMinted","loadNext","collectionMetadata","get_listings","loadedAssets","updateComponentState","dataLength","next","loader","endMessage","textAlign","scrollableTarget","Collection","default_meta","setPolicyIds","currentCollectionIterator","hasOwnProperty","policyIdx","Filter","setFilteredListings","collectionsMultiSelect","setCollectionsMultiSelect","collectionsIndexSelected","setCollectionsIndexSelected","collectionsSelected","setCollectionsSelected","click_item","tmp_collectionsSelected","tmp_collectionsIndexSelected","list_policy","tmp_listings","this_listing","matchCollections","rank","this_collection","checked","htmlFor","Explore","filteredListings","setCollections","sethasMore","listed_assets","listed_assets_by_policy","get_listed_assets","counter","list_collections","Splash","listProjects","project","TopProjects","opencnft_get_top_projects","setListProjects","col_size","pending","setPending","setWindow","showLimit","setShowLimit","topProjectData","setTopProjectData","CNFTLoaded","setCNFTLoaded","columns","selector","row","cell","overflow","volume","sortable","conditionalCellStyles","when","classNames","parseFloat","decimal","total_owners","total_minted","prepare_data","project_list","list","onchange_window","win","accumulator","defaultSortFieldId","defaultSortAsc","progressPending","progressComponent","Home","time","ranking","opencnftGetTopProjects","MainLayout","children","create","require","ImageUpload","file","imagePreviewUrl","preventDefault","reader","FileReader","onloadend","setState","readAsDataURL","client","created","ipfs_url","path","setIPFS","onSubmit","_handleSubmit","_handleImageChange","readOnly","React","Component","Spinner","classes","makeStyles","modal","alignItems","justifyContent","border","backgroundColor","useStyles","Modal","closeAfterTransition","open","BackdropComponent","Backdrop","BackdropProps","timeout","hideBackdrop","Fade","in","bgColor","waitForTransaction","setisMinting","checkBool","Mint","setAssetName","Quantity","setQuantity","Author","setAuthor","IPFS","isMinting","MintToken","MintAsset","location","RenderRoutes","exact","ErrorHandler","componentStack","resetErrorBoundary","App","state_error","all_collections","data_collections","banner","logo","data_collections_cnft","FallbackComponent","onReset","middleware","reduxThunk","store","createStore","reducers","composeWithDevTools","applyMiddleware","WebFont","google","families","ReactDOM","render","document","getElementById","TRANSACTION_FAILED_SO_MANY_UTXOS","TRANSACTION_FAILED_NOT_ENOUGH_FUNDS","TRANSACTION_FAILED_CHANGE_TOO_SMALL","TRANSACTION_FAILED_MAX_TX_SIZE_REACHED","TRANSACTION_FAILED_DATUMS_NOT_MATCHING","TRANSACTION_FAILED_WRONG_SCRIPT_CONTRACT","TRANSACTION_FAILED_ASSET_NOT_SPENDABLE","serializeSale","fields","new_bytes","new_integer","deserializeSale","as_constr_plutus_data","as_bytes","as_integer","nativeScripts","scriptPubkey","new_script_pubkey","hash","MintAssets","assetNumber","add_mint_asset_and_output","with_address","add_inputs_from","build_tx","lockAssetDatum","handleError","currentDatum","newDatum","currentListingDatum","newListingDatum","requiredSigners","Ed25519KeyHashes","set_required_signers","cancelListingDatum","buyer","beneficiaries","purchaseAssetDatum","splitAmount","source","minimumAmount","royaltyFeePercentage","royaltyFees","marketFees","netPrice"],"mappings":"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","file":"static/js/main.85658a67.chunk.js","sourcesContent":["import Cardano from \"../serialization-lib\";\r\n\r\nexport const BUYER = (index) => {\r\n  const data = Cardano.Instance.PlutusData.new_constr_plutus_data(\r\n    Cardano.Instance.ConstrPlutusData.new(\r\n      Cardano.Instance.Int.new_i32(0),\r\n      Cardano.Instance.PlutusList.new()\r\n    )\r\n  );\r\n\r\n  const redeemer = Cardano.Instance.Redeemer.new(\r\n    Cardano.Instance.RedeemerTag.new_spend(),\r\n    Cardano.Instance.BigNum.from_str(index),\r\n    data,\r\n    Cardano.Instance.ExUnits.new(\r\n      Cardano.Instance.BigNum.from_str(\"7000000\"),\r\n      Cardano.Instance.BigNum.from_str(\"3000000000\")\r\n    )\r\n  );\r\n\r\n  return redeemer;\r\n};\r\n\r\nexport const SELLER = (index) => {\r\n  const data = Cardano.Instance.PlutusData.new_constr_plutus_data(\r\n    Cardano.Instance.ConstrPlutusData.new(\r\n      Cardano.Instance.Int.new_i32(1),\r\n      Cardano.Instance.PlutusList.new()\r\n    )\r\n  );\r\n\r\n  const redeemer = Cardano.Instance.Redeemer.new(\r\n    Cardano.Instance.RedeemerTag.new_spend(),\r\n    Cardano.Instance.BigNum.from_str(index),\r\n    data,\r\n    Cardano.Instance.ExUnits.new(\r\n      Cardano.Instance.BigNum.from_str(\"7000000\"),\r\n      Cardano.Instance.BigNum.from_str(\"3000000000\")\r\n    )\r\n  );\r\n\r\n  return redeemer;\r\n};\r\nexport const MINT = (index) => {\r\n  const data = Cardano.Instance.PlutusData.new_constr_plutus_data(\r\n    Cardano.Instance.ConstrPlutusData.new(\r\n      Cardano.Instance.Int.new_i32(1),\r\n      Cardano.Instance.PlutusList.new()\r\n    )\r\n  );\r\n\r\n  const redeemer = Cardano.Instance.Redeemer.new(\r\n    Cardano.Instance.RedeemerTag.new_mint(),\r\n    Cardano.Instance.BigNum.from_str(index),\r\n    data,\r\n    Cardano.Instance.ExUnits.new(\r\n      Cardano.Instance.BigNum.from_str(\"7000000\"),\r\n      Cardano.Instance.BigNum.from_str(\"3000000000\")\r\n    )\r\n  );\r\n\r\n  return redeemer;\r\n};\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 171;","import Cardano from \"../cardano/serialization-lib\";\r\n\r\nexport const fromAscii = (hex) => Buffer.from(hex).toString(\"hex\");\r\n\r\nexport const fromBech32 = (bech32) =>\r\n  Cardano.Instance.BaseAddress.from_address(\r\n    Cardano.Instance.Address.from_bech32(bech32)\r\n  );\r\n\r\nexport const fromHex = (hex) => Buffer.from(hex, \"hex\");\r\n\r\nexport const toHex = (bytes) => Buffer.from(bytes).toString(\"hex\");\r\n\r\nexport const fromLovelace = (lovelace) => lovelace / 1000000;\r\n\r\nexport const toLovelace = (ada) => ada * 1000000;\r\n\r\nexport const toString = (bytes) => String.fromCharCode.apply(String, bytes);\r\n\r\n// handle images\r\n\r\nexport const convertMetadataPropToString = (src) => {\r\n  if (typeof src === \"string\") return src;\r\n  else if (Array.isArray(src)) return src.join(\"\");\r\n  return null;\r\n};\r\n\r\nexport const linkToSrc = (link, base64 = false) => {\r\n  let root = \"https://infura-ipfs.io/ipfs\";\r\n\r\n  const base64regex =\r\n    /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\r\n  if (link.startsWith(\"https://\")) return link;\r\n  else if (link.startsWith(\"ipfs://\"))\r\n    return root + \"/\" + link.split(\"ipfs://\")[1].split(\"ipfs/\").slice(-1)[0];\r\n  else if (\r\n    (link.startsWith(\"Qm\") && link.length === 46) ||\r\n    (link.startsWith(\"baf\") && link.length === 59)\r\n  ) {\r\n    return root + \"/\" + link;\r\n  } else if (base64 && base64regex.test(link))\r\n    return \"data:image/png;base64,\" + link;\r\n  else if (link.startsWith(\"data:image\")) return link;\r\n  return null;\r\n};\r\n\r\nexport const get_asset_image_source = (image) => {\r\n  // let root = \"https://ipfs.io/ipfs/\";\r\n  // let root = \"https://infura-ipfs.io/ipfs/\";\r\n\r\n  // if(image){\r\n  //   if(Array.isArray(image)){\r\n  //     image = image.join(\"\");\r\n  //   }\r\n  //   console.log(image)\r\n  //   if(image.includes(\"ipfs://ipfs/\")){\r\n  //     return root + image.split(\"ipfs://ipfs/\")[1];\r\n  //   }\r\n  //   else if(image.includes(\"ipfs://\")){\r\n  //     return root + image.split(\"ipfs://\")[1];\r\n  //   }\r\n  //   else if(image.length==46){\r\n  //     return root + image;\r\n  //   }\r\n  //   else{\r\n  //     return image;\r\n  //   }\r\n  // }\r\n  // return \"\";\r\n\r\n  if (image) {\r\n    if (image.includes(\"ipfs/\")) {\r\n      image = \"ipfs://\" + image.split(\"ipfs/\")[1];\r\n    }\r\n    return linkToSrc(convertMetadataPropToString(image));\r\n  }\r\n};\r\n\r\nexport const numFormatter = (num) => {\r\n  if (num > 999 && num < 1000000) {\r\n    return (num / 1000).toFixed(1) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n  } else if (num > 1000000) {\r\n    return (num / 1000000).toFixed(1) + \"M\"; // convert to M for number from > 1 million\r\n  } else if (num < 900) {\r\n    return num; // if value < 1000, nothing to do\r\n  }\r\n};\r\n","import Cardano from \"../serialization-lib\";\r\n\r\n/**\r\n * BerryPool implementation of the __Random-Improve__ coin selection algorithm.\r\n *\r\n * = Overview\r\n *\r\n * The __Random-Improve__ coin selection algorithm works in __two phases__, by\r\n * /first/ selecting UTxO entries /at random/ to pay for each of the given\r\n * outputs, and /then/ attempting to /improve/ upon each of the selections.\r\n *\r\n * === Phase 1: Random Selection\r\n *\r\n * __In this phase, the algorithm randomly selects a minimal set of UTxO__\r\n * __entries to pay for each of the given outputs.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /descending order of coin value/.\r\n *\r\n *   *  maintains a /remaining UTxO set/, initially equal to the given\r\n *      /UTxO set/ parameter.\r\n *\r\n *   *  based on every output nature, generate a /native token UTxO subset/\r\n *      to narrow down to useful UTxO\r\n *\r\n *   *  maintains an /accumulated coin selection/, which is initially /empty/.\r\n *\r\n * For each output of value __/v/__, the algorithm /randomly/ selects entries\r\n * from the /remaining UTxO set/, until the total value of selected entries is\r\n * greater than or equal to __/v/__. The selected entries are then associated\r\n * with that output, and removed from the /remaining UTxO set/.\r\n *\r\n * This phase ends when every output has been associated with a selection of\r\n * UTxO entries.\r\n *\r\n * However, if the remaining UTxO set is completely exhausted before all\r\n * outputs can be processed, the algorithm terminates with an error.\r\n *\r\n * === Phase 2: Improvement\r\n *\r\n * __In this phase, the algorithm attempts to improve upon each of the UTxO__\r\n * __selections made in the previous phase, by conservatively expanding the__\r\n * __selection made for each output.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /ascending order of coin value/.\r\n *\r\n *   *  continues to maintain the /remaining UTxO set/ produced by the previous\r\n *      phase.\r\n *\r\n *   *  maintains an /accumulated coin selection/, initiated from previous phase.\r\n *\r\n * For each output of value __/v/__, the algorithm:\r\n *\r\n *  1.  __Calculates a /target range/__ for the total value of inputs used to\r\n *      pay for that output, defined by the triplet:\r\n *\r\n *      (/minimum/, /ideal/, /maximum/) = (/v/, /2v/, /3v/)\r\n *\r\n *  2.  __Attempts to /improve/ upon the /existing UTxO selection/__ for that\r\n *      output, by repeatedly selecting additional entries at random from the\r\n *      /remaining UTxO set/, stopping when the selection can be improved upon\r\n *      no further.\r\n *\r\n *      A selection with value /v1/ is considered to be an /improvement/ over a\r\n *      selection with value /v0/ if __all__ of the following conditions are\r\n *      satisfied:\r\n *\r\n *       * __Condition 1__: we have moved closer to the /ideal/ value:\r\n *\r\n *             abs (/ideal/ − /v1/) < abs (/ideal/ − /v0/)\r\n *\r\n *       * __Condition 2__: we have not exceeded the /maximum/ value:\r\n *\r\n *             /v1/ ≤ /maximum/\r\n *\r\n *       * __Condition 3__: when counting cumulatively across all outputs\r\n *       considered so far, we have not selected more than the /maximum/ number\r\n *       of UTxO entries specified by 'limit'.\r\n *\r\n *  3.  __Creates a /change value/__ for the output, equal to the total value\r\n *      of the /final UTxO selection/ for that output minus the value /v/ of\r\n *      that output.\r\n *\r\n *  4.  __Updates the /accumulated coin selection/__:\r\n *\r\n *       * Adds the /output/ to 'outputs'.\r\n *       * Adds the /improved UTxO selection/ to 'inputs'.\r\n *       * Adds the /change value/ to 'change'.\r\n *\r\n * This phase ends when every output has been processed, __or__ when the\r\n * /remaining UTxO set/ has been exhausted, whichever occurs sooner.\r\n *\r\n * = Termination\r\n *\r\n * When both phases are complete, the algorithm terminates.\r\n *\r\n * The /accumulated coin selection/ and /remaining UTxO set/ are returned to\r\n * the caller.\r\n *\r\n * === Failure Modes\r\n *\r\n * The algorithm terminates with an __error__ if:\r\n *\r\n *  1.  The /total value/ of the initial UTxO set (the amount of money\r\n *      /available/) is /less than/ the total value of the output list (the\r\n *      amount of money /required/).\r\n *\r\n *      See: __'InputsExhaustedError'__.\r\n *\r\n *  2.  The /number/ of UTxO entries needed to pay for the requested outputs\r\n *      would /exceed/ the upper limit specified by 'limit'.\r\n *\r\n *      See: __'InputLimitExceededError'__.\r\n *\r\n * == Motivating Principles\r\n *\r\n * There are several motivating principles behind the design of the algorithm.\r\n *\r\n * === Principle 1: Dust Management\r\n *\r\n * The probability that random selection will choose dust entries from a UTxO\r\n * set increases with the proportion of dust in the set.\r\n *\r\n * Therefore, for a UTxO set with a large amount of dust, there's a high\r\n * probability that a random subset will include a large amount of dust.\r\n *\r\n * === Principle 2: Change Management\r\n *\r\n * Ideally, coin selection algorithms should, over time, create a UTxO set that\r\n * has /useful/ outputs: outputs that will allow us to process future payments\r\n * with a minimum number of inputs.\r\n *\r\n * If for each payment request of value __/v/__ we create a change output of\r\n * /roughly/ the same value __/v/__, then we will end up with a distribution of\r\n * change values that matches the typical value distribution of payment\r\n * requests.\r\n *\r\n * === Principle 3: Performance Management\r\n *\r\n * Searching the UTxO set for additional entries to improve our change outputs\r\n * is /only/ useful if the UTxO set contains entries that are sufficiently\r\n * small enough. But it is precisely when the UTxO set contains many small\r\n * entries that it is less likely for a randomly-chosen UTxO entry to push the\r\n * total above the upper bound.\r\n */\r\n\r\n/**\r\n * @typedef {Value[]} AmountList - List of 'Value' object\r\n */\r\n\r\n/**\r\n * @typedef {TransactionUnspentOutput[]} UTxOList - List of UTxO\r\n */\r\n\r\n/**\r\n * @typedef {Object} UTxOSelection - Coin Selection algorithm core object\r\n * @property {UTxOList} selection - Accumulated UTxO set.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {UTxOList} subset - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n */\r\n\r\n/**\r\n * @typedef {Object} ImproveRange - ImproveRange\r\n * @property {Value} ideal - Requested amount * 2\r\n * @property {Value} maximum - Requested amount * 3\r\n */\r\n\r\n/**\r\n * @typedef {Object} SelectionResult - Coin Selection algorithm return\r\n * @property {UTxOList} input - Accumulated UTxO set.\r\n * @property {OutputList} output - Requested outputs.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n * @property {Value} change - Accumulated change amount.\r\n */\r\n\r\n/**\r\n * @typedef {Object} ProtocolParameters\r\n * @property {int} coinsPerUtxoWord\r\n * @property {int} minFeeA\r\n * @property {int} minFeeB\r\n * @property {int} maxTxSize\r\n */\r\n\r\n/**\r\n * @type {ProtocolParameters}\r\n */\r\nlet protocolParameters = null;\r\n\r\n/**\r\n * CoinSelection Module.\r\n * @module src/lib/CoinSelection\r\n */\r\nconst CoinSelection = {\r\n  /**\r\n   * Set protocol parameters required by the algorithm\r\n   * @param {string} coinsPerUtxoWord\r\n   * @param {string} minFeeA\r\n   * @param {string} minFeeB\r\n   * @param {string} maxTxSize\r\n   */\r\n  setProtocolParameters: (coinsPerUtxoWord, minFeeA, minFeeB, maxTxSize) => {\r\n    protocolParameters = {\r\n      coinsPerUtxoWord: coinsPerUtxoWord,\r\n      minFeeA: minFeeA,\r\n      minFeeB: minFeeB,\r\n      maxTxSize: maxTxSize,\r\n    };\r\n  },\r\n  /**\r\n   * Random-Improve coin selection algorithm\r\n   * @param {UTxOList} inputs - The set of inputs available for selection.\r\n   * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n   * @param {int} limit - A limit on the number of inputs that can be selected.\r\n   * @return {SelectionResult} - Coin Selection algorithm return\r\n   */\r\n  randomImprove: (inputs, outputs, limit) => {\r\n    if (!protocolParameters)\r\n      throw new Error(\r\n        \"Protocol parameters not set. Use setProtocolParameters().\"\r\n      );\r\n\r\n    /** @type {UTxOSelection} */\r\n    let utxoSelection = {\r\n      selection: [],\r\n      remaining: [...inputs], // Shallow copy\r\n      subset: [],\r\n      amount: createEmptyValue(),\r\n    };\r\n\r\n    let mergedOutputsAmounts = mergeOutputsAmounts(outputs);\r\n\r\n    // Explode amount in an array of unique asset amount for comparison's sake\r\n    let splitOutputsAmounts = splitAmounts(mergedOutputsAmounts);\r\n\r\n    // Phase 1: Select enough input\r\n    for (let i = 0; i < splitOutputsAmounts.length; i++) {\r\n      createSubSet(utxoSelection, splitOutputsAmounts[i]); // Narrow down for NatToken UTxO\r\n\r\n      utxoSelection = select(utxoSelection, splitOutputsAmounts[i], limit);\r\n    }\r\n\r\n    // Phase 2: Improve\r\n    splitOutputsAmounts = sortAmountList(splitOutputsAmounts);\r\n\r\n    for (let i = 0; i < splitOutputsAmounts.length; i++) {\r\n      createSubSet(utxoSelection, splitOutputsAmounts[i]); // Narrow down for NatToken UTxO\r\n\r\n      let range = {};\r\n      range.ideal = Cardano.Instance.Value.new(\r\n        Cardano.Instance.BigNum.from_str(\"0\")\r\n      )\r\n        .checked_add(splitOutputsAmounts[i])\r\n        .checked_add(splitOutputsAmounts[i]);\r\n      range.maximum = Cardano.Instance.Value.new(\r\n        Cardano.Instance.BigNum.from_str(\"0\")\r\n      )\r\n        .checked_add(range.ideal)\r\n        .checked_add(splitOutputsAmounts[i]);\r\n\r\n      improve(\r\n        utxoSelection,\r\n        splitOutputsAmounts[i],\r\n        limit - utxoSelection.selection.length,\r\n        range\r\n      );\r\n    }\r\n\r\n    // Insure change hold enough Ada to cover included native assets and fees\r\n    if (utxoSelection.remaining.length > 0) {\r\n      const change = utxoSelection.amount.checked_sub(mergedOutputsAmounts);\r\n\r\n      let minAmount = Cardano.Instance.Value.new(\r\n        Cardano.Instance.min_ada_required(\r\n          change,\r\n          Cardano.Instance.BigNum.from_str(protocolParameters.coinsPerUtxoWord)\r\n        )\r\n      );\r\n\r\n      if (compare(change, minAmount) < 0) {\r\n        // Not enough, add missing amount and run select one last time\r\n        const minAda = minAmount\r\n          .checked_sub(Cardano.Instance.Value.new(change.coin()))\r\n          .checked_add(Cardano.Instance.Value.new(utxoSelection.amount.coin()));\r\n\r\n        createSubSet(utxoSelection, minAda);\r\n        utxoSelection = select(utxoSelection, minAda, limit);\r\n      }\r\n    }\r\n\r\n    return {\r\n      input: utxoSelection.selection,\r\n      output: outputs,\r\n      remaining: utxoSelection.remaining,\r\n      amount: utxoSelection.amount,\r\n      change: utxoSelection.amount.checked_sub(mergedOutputsAmounts),\r\n    };\r\n  },\r\n  splitAmounts: splitAmounts,\r\n  compare: compare,\r\n};\r\n\r\n/**\r\n * Use randomSelect & descSelect algorithm to select enough UTxO to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction select(utxoSelection, outputAmount, limit) {\r\n  try {\r\n    utxoSelection = randomSelect(\r\n      cloneUTxOSelection(utxoSelection), // Deep copy in case of fallback needed\r\n      outputAmount,\r\n      limit - utxoSelection.selection.length\r\n    );\r\n  } catch (e) {\r\n    if (e.message === \"INPUT_LIMIT_EXCEEDED\") {\r\n      // Limit reached : Fallback on DescOrdAlgo\r\n      utxoSelection = descSelect(utxoSelection, outputAmount);\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  return utxoSelection;\r\n}\r\n\r\n/**\r\n * Randomly select enough UTxO to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction randomSelect(utxoSelection, outputAmount, limit) {\r\n  let nbFreeUTxO = utxoSelection.subset.length;\r\n  // If quantity is met, return subset into remaining list and exit\r\n  if (isQtyFulfilled(outputAmount, utxoSelection.amount, nbFreeUTxO)) {\r\n    utxoSelection.remaining = [\r\n      ...utxoSelection.remaining,\r\n      ...utxoSelection.subset,\r\n    ];\r\n    utxoSelection.subset = [];\r\n    return utxoSelection;\r\n  }\r\n\r\n  if (limit <= 0) {\r\n    throw new Error(\"INPUT_LIMIT_EXCEEDED\");\r\n  }\r\n\r\n  if (nbFreeUTxO <= 0) {\r\n    throw new Error(\"INPUTS_EXHAUSTED\");\r\n  }\r\n\r\n  /** @type {TransactionUnspentOutput} utxo */\r\n  let utxo = utxoSelection.subset\r\n    .splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n    .pop();\r\n\r\n  utxoSelection.selection.push(utxo);\r\n  utxoSelection.amount = addAmounts(\r\n    utxo.output().amount(),\r\n    utxoSelection.amount\r\n  );\r\n\r\n  return randomSelect(utxoSelection, outputAmount, limit - 1);\r\n}\r\n\r\n/**\r\n * Select enough UTxO in DESC order to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction descSelect(utxoSelection, outputAmount) {\r\n  // Sort UTxO subset in DESC order for required Output unit type\r\n  utxoSelection.subset = utxoSelection.subset.sort((a, b) => {\r\n    return Number(\r\n      searchAmountValue(outputAmount, b.output().amount()) -\r\n        searchAmountValue(outputAmount, a.output().amount())\r\n    );\r\n  });\r\n\r\n  do {\r\n    if (utxoSelection.subset.length <= 0) {\r\n      throw new Error(\"INPUTS_EXHAUSTED\");\r\n    }\r\n\r\n    /** @type {TransactionUnspentOutput} utxo */\r\n    let utxo = utxoSelection.subset.splice(0, 1).pop();\r\n\r\n    utxoSelection.selection.push(utxo);\r\n    utxoSelection.amount = addAmounts(\r\n      utxo.output().amount(),\r\n      utxoSelection.amount\r\n    );\r\n  } while (\r\n    !isQtyFulfilled(\r\n      outputAmount,\r\n      utxoSelection.amount,\r\n      utxoSelection.subset.length - 1\r\n    )\r\n  );\r\n\r\n  // Quantity is met, return subset into remaining list and return selection\r\n  utxoSelection.remaining = [\r\n    ...utxoSelection.remaining,\r\n    ...utxoSelection.subset,\r\n  ];\r\n  utxoSelection.subset = [];\r\n\r\n  return utxoSelection;\r\n}\r\n\r\n/**\r\n * Try to improve selection by increasing input amount in [2x,3x] range.\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {ImproveRange} range - Improvement range target values\r\n */\r\nfunction improve(utxoSelection, outputAmount, limit, range) {\r\n  let nbFreeUTxO = utxoSelection.subset.length;\r\n\r\n  if (\r\n    compare(utxoSelection.amount, range.ideal) >= 0 ||\r\n    nbFreeUTxO <= 0 ||\r\n    limit <= 0\r\n  ) {\r\n    // Return subset in remaining\r\n    utxoSelection.remaining = [\r\n      ...utxoSelection.remaining,\r\n      ...utxoSelection.subset,\r\n    ];\r\n    utxoSelection.subset = [];\r\n\r\n    return;\r\n  }\r\n\r\n  /** @type {TransactionUnspentOutput} utxo */\r\n  const utxo = utxoSelection.subset\r\n    .splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n    .pop();\r\n\r\n  const newAmount = Cardano.Instance.Value.new(\r\n    Cardano.Instance.BigNum.from_str(\"0\")\r\n  )\r\n    .checked_add(utxo.output().amount())\r\n    .checked_add(outputAmount);\r\n\r\n  if (\r\n    abs(getAmountValue(range.ideal) - getAmountValue(newAmount)) <\r\n      abs(getAmountValue(range.ideal) - getAmountValue(outputAmount)) &&\r\n    compare(newAmount, range.maximum) <= 0\r\n  ) {\r\n    utxoSelection.selection.push(utxo);\r\n    utxoSelection.amount = addAmounts(\r\n      utxo.output().amount(),\r\n      utxoSelection.amount\r\n    );\r\n    limit--;\r\n  } else {\r\n    utxoSelection.remaining.push(utxo);\r\n  }\r\n\r\n  return improve(utxoSelection, outputAmount, limit, range);\r\n}\r\n\r\n/**\r\n * Compile all required outputs to a flat amounts list\r\n * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n * @return {Value} - The compiled set of amounts requested for payment.\r\n */\r\nfunction mergeOutputsAmounts(outputs) {\r\n  let compiledAmountList = Cardano.Instance.Value.new(\r\n    Cardano.Instance.BigNum.from_str(\"0\")\r\n  );\r\n\r\n  for (let i = 0; i < outputs.len(); i++) {\r\n    compiledAmountList = addAmounts(\r\n      outputs.get(i).amount(),\r\n      compiledAmountList\r\n    );\r\n  }\r\n\r\n  return compiledAmountList;\r\n}\r\n\r\n/**\r\n * Add up an Amounts List values to another Amounts List\r\n * @param {Value} amounts - Set of amounts to be added.\r\n * @param {Value} compiledAmounts - The compiled set of amounts.\r\n * @return {Value}\r\n */\r\nfunction addAmounts(amounts, compiledAmounts) {\r\n  return compiledAmounts.checked_add(amounts);\r\n}\r\n\r\n/**\r\n * Split amounts contained in a single {Value} object in separate {Value} objects\r\n * @param {Value} amounts - Set of amounts to be split.\r\n * @return {AmountList}\r\n */\r\nfunction splitAmounts(amounts) {\r\n  let splitAmounts = [];\r\n\r\n  if (amounts.multiasset() && amounts.multiasset().len() > 0) {\r\n    let mA = amounts.multiasset();\r\n\r\n    for (let i = 0; i < mA.keys().len(); i++) {\r\n      let scriptHash = mA.keys().get(i);\r\n\r\n      for (let j = 0; j < mA.get(scriptHash).keys().len(); j++) {\r\n        let _assets = Cardano.Instance.Assets.new();\r\n        let assetName = mA.get(scriptHash).keys().get(j);\r\n\r\n        _assets.insert(\r\n          Cardano.Instance.AssetName.from_bytes(assetName.to_bytes()),\r\n          Cardano.Instance.BigNum.from_bytes(\r\n            mA.get(scriptHash).get(assetName).to_bytes()\r\n          )\r\n        );\r\n\r\n        let _multiasset = Cardano.Instance.MultiAsset.new();\r\n        _multiasset.insert(\r\n          Cardano.Instance.ScriptHash.from_bytes(scriptHash.to_bytes()),\r\n          _assets\r\n        );\r\n        let _value = Cardano.Instance.Value.new(\r\n          Cardano.Instance.BigNum.from_str(\"0\")\r\n        );\r\n        _value.set_multiasset(_multiasset);\r\n\r\n        splitAmounts.push(_value);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Order assets by qty DESC\r\n  splitAmounts = sortAmountList(splitAmounts, \"DESC\");\r\n\r\n  // Insure lovelace is last to account for min ada requirement\r\n  splitAmounts.push(\r\n    Cardano.Instance.Value.new(\r\n      Cardano.Instance.BigNum.from_bytes(amounts.coin().to_bytes())\r\n    )\r\n  );\r\n\r\n  return splitAmounts;\r\n}\r\n\r\n/**\r\n * Sort a mismatched AmountList ASC/DESC\r\n * @param {AmountList} amountList - Set of mismatched amounts to be sorted.\r\n * @param {string} [sortOrder=ASC] - Order\r\n * @return {AmountList} - The sorted AmountList\r\n */\r\nfunction sortAmountList(amountList, sortOrder = \"ASC\") {\r\n  return amountList.sort((a, b) => {\r\n    let sortInt = sortOrder === \"DESC\" ? BigInt(-1) : BigInt(1);\r\n    return Number((getAmountValue(a) - getAmountValue(b)) * sortInt);\r\n  });\r\n}\r\n\r\n/**\r\n * Return BigInt amount value\r\n * @param {Value} amount\r\n * @return {bigint}\r\n */\r\nfunction getAmountValue(amount) {\r\n  let val = BigInt(0);\r\n  let lovelace = BigInt(amount.coin().to_str());\r\n\r\n  if (lovelace > 0) {\r\n    val = lovelace;\r\n  } else if (amount.multiasset() && amount.multiasset().len() > 0) {\r\n    let scriptHash = amount.multiasset().keys().get(0);\r\n    let assetName = amount.multiasset().get(scriptHash).keys().get(0);\r\n    val = BigInt(amount.multiasset().get(scriptHash).get(assetName).to_str());\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\n/**\r\n * Search & Return BigInt amount value\r\n * @param {Value} needle\r\n * @param {Value} haystack\r\n * @return {bigint}\r\n */\r\nfunction searchAmountValue(needle, haystack) {\r\n  let val = BigInt(0);\r\n  let lovelace = BigInt(needle.coin().to_str());\r\n\r\n  if (lovelace > 0) {\r\n    val = BigInt(haystack.coin().to_str());\r\n  } else if (\r\n    needle.multiasset() &&\r\n    haystack.multiasset() &&\r\n    needle.multiasset().len() > 0 &&\r\n    haystack.multiasset().len() > 0\r\n  ) {\r\n    let scriptHash = needle.multiasset().keys().get(0);\r\n    let assetName = needle.multiasset().get(scriptHash).keys().get(0);\r\n    val = BigInt(haystack.multiasset().get(scriptHash).get(assetName).to_str());\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\n/**\r\n * Narrow down remaining UTxO set in case of native token, use full set for lovelace\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} output - Single compiled output qty requested for payment.\r\n */\r\nfunction createSubSet(utxoSelection, output) {\r\n  if (BigInt(output.coin().to_str()) < BigInt(1)) {\r\n    let subset = [];\r\n    let remaining = [];\r\n    for (let i = 0; i < utxoSelection.remaining.length; i++) {\r\n      if (\r\n        compare(utxoSelection.remaining[i].output().amount(), output) !==\r\n        undefined\r\n      ) {\r\n        subset.push(utxoSelection.remaining[i]);\r\n      } else {\r\n        remaining.push(utxoSelection.remaining[i]);\r\n      }\r\n    }\r\n    utxoSelection.subset = subset;\r\n    utxoSelection.remaining = remaining;\r\n  } else {\r\n    utxoSelection.subset = utxoSelection.remaining.splice(\r\n      0,\r\n      utxoSelection.remaining.length\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Is Quantity Fulfilled Condition.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {Value} cumulatedAmount - Single compiled accumulated UTxO qty.\r\n * @param {int} nbFreeUTxO - Number of free UTxO available.\r\n * @return {boolean}\r\n */\r\nfunction isQtyFulfilled(outputAmount, cumulatedAmount, nbFreeUTxO) {\r\n  let amount = outputAmount;\r\n\r\n  if (!outputAmount.multiasset() || outputAmount.multiasset().len() <= 0) {\r\n    let minAmount = Cardano.Instance.Value.new(\r\n      Cardano.Instance.min_ada_required(\r\n        cumulatedAmount,\r\n        Cardano.Instance.BigNum.from_str(protocolParameters.coinsPerUtxoWord)\r\n      )\r\n    );\r\n\r\n    // Lovelace min amount to cover assets and number of output need to be met\r\n    if (compare(cumulatedAmount, minAmount) < 0) return false;\r\n\r\n    // Try covering the max fees\r\n    if (nbFreeUTxO > 0) {\r\n      let maxFee =\r\n        BigInt(protocolParameters.minFeeA) *\r\n          BigInt(protocolParameters.maxTxSize) +\r\n        BigInt(protocolParameters.minFeeB);\r\n\r\n      maxFee = Cardano.Instance.Value.new(\r\n        Cardano.Instance.BigNum.from_str(maxFee.toString())\r\n      );\r\n\r\n      amount = amount.checked_add(maxFee);\r\n    }\r\n  }\r\n\r\n  return compare(cumulatedAmount, amount) >= 0;\r\n}\r\n\r\n/**\r\n * Return a deep copy of UTxOSelection\r\n * @param {UTxOSelection} utxoSelection\r\n * @return {UTxOSelection} Clone - Deep copy\r\n */\r\nfunction cloneUTxOSelection(utxoSelection) {\r\n  return {\r\n    selection: cloneUTxOList(utxoSelection.selection),\r\n    remaining: cloneUTxOList(utxoSelection.remaining),\r\n    subset: cloneUTxOList(utxoSelection.subset),\r\n    amount: cloneValue(utxoSelection.amount),\r\n  };\r\n}\r\n\r\n/**\r\n * Return a deep copy of an UTxO List\r\n * @param {UTxOList} utxoList\r\n * @return {UTxOList} Cone - Deep copy\r\n */\r\nconst cloneUTxOList = (utxoList) =>\r\n  utxoList.map((utxo) =>\r\n    Cardano.Instance.TransactionUnspentOutput.from_bytes(utxo.to_bytes())\r\n  );\r\n\r\n/**\r\n * Return a deep copy of a Value object\r\n * @param {Value} value\r\n * @return {Value} Cone - Deep copy\r\n */\r\nconst cloneValue = (value) =>\r\n  Cardano.Instance.Value.from_bytes(value.to_bytes());\r\n\r\n// Helper\r\nfunction abs(big) {\r\n  return big < 0 ? big * BigInt(-1) : big;\r\n}\r\n\r\n/**\r\n * Compare a candidate value to the one in a group if present\r\n * @param {Value} group\r\n * @param {Value} candidate\r\n * @return {int} - -1 group lower, 0 equal, 1 group higher, undefined if no match\r\n */\r\nfunction compare(group, candidate) {\r\n  let gQty = BigInt(group.coin().to_str());\r\n  let cQty = BigInt(candidate.coin().to_str());\r\n\r\n  if (candidate.multiasset() && candidate.multiasset().len() > 0) {\r\n    let cScriptHash = candidate.multiasset().keys().get(0);\r\n    let cAssetName = candidate.multiasset().get(cScriptHash).keys().get(0);\r\n\r\n    if (group.multiasset() && group.multiasset().len()) {\r\n      if (\r\n        group.multiasset().get(cScriptHash) &&\r\n        group.multiasset().get(cScriptHash).get(cAssetName)\r\n      ) {\r\n        gQty = BigInt(\r\n          group.multiasset().get(cScriptHash).get(cAssetName).to_str()\r\n        );\r\n        cQty = BigInt(\r\n          candidate.multiasset().get(cScriptHash).get(cAssetName).to_str()\r\n        );\r\n      } else {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  return gQty >= cQty ? (gQty === cQty ? 0 : 1) : -1;\r\n}\r\n\r\n/**\r\n * Initialise an empty Value with empty MultiAsset\r\n * @return {Value} - Initialized empty value\r\n */\r\nfunction createEmptyValue() {\r\n  const value = Cardano.Instance.Value.new(\r\n    Cardano.Instance.BigNum.from_str(\"0\")\r\n  );\r\n  const multiasset = Cardano.Instance.MultiAsset.new();\r\n  value.set_multiasset(multiasset);\r\n  return value;\r\n}\r\n\r\nexport default CoinSelection;\r\n","const errorTypes = {\r\n  MAX_SIZE_REACHED: \"MAX_SIZE_REACHED\",\r\n  COULD_NOT_CREATE_TRANSACTION_UNSPENT_OUTPUT: \"COULD_NOT_CREATE_TRANSACTION_UNSPENT_OUTPUT\",\r\n  COULD_NOT_SERIALIZE_TRANSACTION_UNSPENT_OUTPUT: \"COULD_NOT_SERIALIZE_TRANSACTION_UNSPENT_OUTPUT\",\r\n};\r\n\r\nexport default errorTypes;\r\n","import Cardano from \"../serialization-lib\";\r\nimport CoinSelection from \"./coinSelection\";\r\nimport ErrorTypes from \"./error.types\";\r\nimport Wallet from \"../wallet\";\r\nimport { languageViews } from \"./languageViews\";\r\nimport { fromHex, toHex } from \"../../utils/converter\";\r\nimport * as Cardanoo from \"@emurgo/cardano-serialization-lib-asmjs\";\r\nexport const assetsToValue = (assets) => {\r\n  const multiAsset = Cardano.Instance.MultiAsset.new();\r\n  const lovelace = assets.find((asset) => asset.unit === \"lovelace\");\r\n  const policies = [\r\n    ...new Set(\r\n      assets\r\n        .filter((asset) => asset.unit !== \"lovelace\")\r\n        .map((asset) => asset.unit.slice(0, 56))\r\n    ),\r\n  ];\r\n  policies.forEach((policy) => {\r\n    const policyAssets = assets.filter(\r\n      (asset) => asset.unit.slice(0, 56) === policy\r\n    );\r\n    const assetsValue = Cardano.Instance.Assets.new();\r\n    policyAssets.forEach((asset) => {\r\n      assetsValue.insert(\r\n        Cardano.Instance.AssetName.new(fromHex(asset.unit.slice(56))),\r\n        Cardano.Instance.BigNum.from_str(asset.quantity)\r\n      );\r\n    });\r\n    multiAsset.insert(\r\n      Cardano.Instance.ScriptHash.from_bytes(fromHex(policy)),\r\n      assetsValue\r\n    );\r\n  });\r\n  const value = Cardano.Instance.Value.new(\r\n    Cardano.Instance.BigNum.from_str(lovelace ? lovelace.quantity : \"0\")\r\n  );\r\n  if (assets.length > 1 || !lovelace) value.set_multiasset(multiAsset);\r\n  return value;\r\n};\r\n\r\nexport const initializeTx10 = () => {\r\n  const metadata = {};\r\n  const Parameters = getProtocolParameters();\r\n  var TransactionBuilderConfig = Cardanoo.TransactionBuilderConfigBuilder.new()\r\n    .fee_algo(\r\n      Cardanoo.LinearFee.new(\r\n        Cardanoo.BigNum.from_str(Parameters.linearFee.minFeeA),\r\n        Cardanoo.BigNum.from_str(Parameters.linearFee.minFeeB)\r\n      )\r\n    )\r\n    .coins_per_utxo_word(Cardanoo.BigNum.from_str(Parameters.coinsPerUtxoWord))\r\n    .pool_deposit(Cardanoo.BigNum.from_str(Parameters.poolDeposit))\r\n    .key_deposit(Cardanoo.BigNum.from_str(Parameters.keyDeposit))\r\n    .max_value_size(Parameters.maxValSize)\r\n    .max_tx_size(Parameters.maxTxSize)\r\n    .build();\r\n\r\n  const txBuilder = Cardanoo.TransactionBuilder.new(TransactionBuilderConfig);\r\n  const datums = Cardanoo.PlutusList.new();\r\n\r\n  const outputs = Cardanoo.TransactionOutputs.new();\r\n\r\n  return { metadata, txBuilder, datums, outputs };\r\n};\r\n\r\nexport const initializeTx = () => {\r\n  const metadata = {};\r\n\r\n  const Parameters = getProtocolParameters();\r\n\r\n  const txBuilder = Cardano.Instance.TransactionBuilder.new(\r\n    Cardano.Instance.LinearFee.new(\r\n      Cardano.Instance.BigNum.from_str(Parameters.linearFee.minFeeA),\r\n      Cardano.Instance.BigNum.from_str(Parameters.linearFee.minFeeB)\r\n    ),\r\n    Cardano.Instance.BigNum.from_str(Parameters.coinsPerUtxoWord),\r\n    Cardano.Instance.BigNum.from_str(Parameters.poolDeposit),\r\n    Cardano.Instance.BigNum.from_str(Parameters.keyDeposit),\r\n    Parameters.maxValSize,\r\n    Parameters.maxTxSize,\r\n    Parameters.priceMem,\r\n    Parameters.priceStep,\r\n    Cardano.Instance.LanguageViews.new(fromHex(languageViews))\r\n  );\r\n\r\n  const datums = Cardano.Instance.PlutusList.new();\r\n\r\n  const outputs = Cardano.Instance.TransactionOutputs.new();\r\n\r\n  return { metadata, txBuilder, datums, outputs };\r\n};\r\n\r\nexport const finalizeTx = async ({\r\n  txBuilder,\r\n  changeAddress,\r\n  utxos,\r\n  outputs,\r\n  datums,\r\n  metadata,\r\n  action,\r\n  assetUtxo,\r\n  plutusScripts,\r\n  mint,\r\n  NativeScript,\r\n  policyId,\r\n  seller,\r\n}) => {\r\n  const Parameters = getProtocolParameters();\r\n  const transactionWitnessSet = Cardano.Instance.TransactionWitnessSet.new();\r\n\r\n  CoinSelection.setProtocolParameters(\r\n    Parameters.coinsPerUtxoWord,\r\n    Parameters.linearFee.minFeeA,\r\n    Parameters.linearFee.minFeeB,\r\n    Parameters.maxTxSize.toString()\r\n  );\r\n\r\n  let inputs = [...utxos];\r\n\r\n  if (assetUtxo) {\r\n    inputs.push(assetUtxo);\r\n  }\r\n\r\n  let { input, change } = CoinSelection.randomImprove(inputs, outputs, 16);\r\n\r\n  input.forEach((utxo) => {\r\n    txBuilder.add_input(\r\n      utxo.output().address(),\r\n      utxo.input(),\r\n      utxo.output().amount()\r\n    );\r\n  });\r\n\r\n  for (let i = 0; i < outputs.len(); i++) {\r\n    txBuilder.add_output(outputs.get(i));\r\n  }\r\n  if (mint) {\r\n    var redeemers = Cardano.Instance.Redeemers.new();\r\n    redeemers.add(action(\"0\"));\r\n    txBuilder.set_redeemers(\r\n      Cardano.Instance.Redeemers.from_bytes(redeemers.to_bytes())\r\n    );\r\n    txBuilder.set_redeemers(\r\n      Cardano.Instance.Redeemers.from_bytes(redeemers.to_bytes())\r\n    );\r\n    transactionWitnessSet.set_redeemers(redeemers);\r\n    transactionWitnessSet.set_native_scripts(NativeScript);\r\n  }\r\n\r\n  if (plutusScripts) {\r\n    const redeemerIndex = txBuilder\r\n      .index_of_input(assetUtxo.input())\r\n      .toString();\r\n    redeemers.add(action(redeemerIndex));\r\n    txBuilder.set_redeemers(\r\n      Cardano.Instance.Redeemers.from_bytes(redeemers.to_bytes())\r\n    );\r\n    txBuilder.set_plutus_data(\r\n      Cardano.Instance.PlutusList.from_bytes(datums.to_bytes())\r\n    );\r\n    txBuilder.set_plutus_scripts(plutusScripts);\r\n    const collateral = (await Wallet.getCollateral()).map((utxo) =>\r\n      Cardano.Instance.TransactionUnspentOutput.from_bytes(fromHex(utxo))\r\n    );\r\n\r\n    setCollateral(txBuilder, collateral);\r\n\r\n    transactionWitnessSet.set_plutus_scripts(plutusScripts);\r\n    transactionWitnessSet.set_plutus_data(datums);\r\n    transactionWitnessSet.set_redeemers(redeemers);\r\n  }\r\n\r\n  let aux_data;\r\n\r\n  if (metadata) {\r\n    aux_data = Cardano.Instance.AuxiliaryData.new();\r\n    const generalMetadata = Cardano.Instance.GeneralTransactionMetadata.new();\r\n    generalMetadata.insert(\r\n      Cardano.Instance.BigNum.from_str(\"100\"),\r\n      Cardano.Instance.encode_json_str_to_metadatum(JSON.stringify(metadata), 1)\r\n    );\r\n\r\n    aux_data.set_metadata(generalMetadata);\r\n    txBuilder.set_auxiliary_data(aux_data);\r\n  }\r\n\r\n  const changeMultiAssets = change.multiasset();\r\n\r\n  // check if change value is too big for single output\r\n  if (\r\n    changeMultiAssets &&\r\n    change.to_bytes().length * 2 > Parameters.maxValSize\r\n  ) {\r\n    const partialChange = Cardano.Instance.Value.new(\r\n      Cardano.Instance.BigNum.from_str(\"0\")\r\n    );\r\n\r\n    const partialMultiAssets = Cardano.Instance.MultiAsset.new();\r\n    const policies = changeMultiAssets.keys();\r\n    const makeSplit = () => {\r\n      for (let j = 0; j < changeMultiAssets.len(); j++) {\r\n        const policy = policies.get(j);\r\n        const policyAssets = changeMultiAssets.get(policy);\r\n        const assetNames = policyAssets.keys();\r\n        const assets = Cardano.Instance.Assets.new();\r\n        for (let k = 0; k < assetNames.len(); k++) {\r\n          const policyAsset = assetNames.get(k);\r\n          const quantity = policyAssets.get(policyAsset);\r\n          assets.insert(policyAsset, quantity);\r\n          //check size\r\n          const checkMultiAssets = Cardano.Instance.MultiAsset.from_bytes(\r\n            partialMultiAssets.to_bytes()\r\n          );\r\n          checkMultiAssets.insert(policy, assets);\r\n          const checkValue = Cardano.Instance.Value.new(\r\n            Cardano.Instance.BigNum.from_str(\"0\")\r\n          );\r\n          checkValue.set_multiasset(checkMultiAssets);\r\n          if (checkValue.to_bytes().length * 2 >= Parameters.maxValSize) {\r\n            partialMultiAssets.insert(policy, assets);\r\n            return;\r\n          }\r\n        }\r\n        partialMultiAssets.insert(policy, assets);\r\n      }\r\n    };\r\n    makeSplit();\r\n    partialChange.set_multiasset(partialMultiAssets);\r\n    const minAda = Cardano.Instance.min_ada_required(\r\n      partialChange,\r\n      Cardano.Instance.BigNum.from_str(Parameters.coinsPerUtxoWord)\r\n    );\r\n    partialChange.set_coin(minAda);\r\n\r\n    txBuilder.add_output(\r\n      Cardano.Instance.TransactionOutput.new(\r\n        changeAddress.to_address(),\r\n        partialChange\r\n      )\r\n    );\r\n  }\r\n\r\n  try {\r\n    txBuilder.add_change_if_needed(changeAddress.to_address());\r\n  } catch (error) {\r\n    throw new Error(\"INPUTS_EXHAUSTED\");\r\n  }\r\n\r\n  const txBody = txBuilder.build();\r\n  debugger;\r\n\r\n  if (mint) {\r\n    txBody.set_mint(mint);\r\n    txBody.outputs().add(\r\n      createTxOutput(\r\n        seller.address.to_address(),\r\n        assetsToValue([\r\n          {\r\n            unit: `${policyId}assetNameStr`,\r\n            quantity: \"1\",\r\n          },\r\n          { unit: \"lovelace\", quantity: \"2000000\" },\r\n        ])\r\n      )\r\n    );\r\n  }\r\n  const tx = Cardano.Instance.Transaction.new(\r\n    txBody,\r\n    Cardano.Instance.TransactionWitnessSet.from_bytes(\r\n      transactionWitnessSet.to_bytes()\r\n    ),\r\n    aux_data\r\n  );\r\n  const size = tx.to_bytes().length;\r\n  if (size > Parameters.maxTxSize) throw new Error(ErrorTypes.MAX_SIZE_REACHED);\r\n\r\n  let txVkeyWitnesses = await Wallet.signTx(toHex(tx.to_bytes()), true);\r\n  txVkeyWitnesses = Cardano.Instance.TransactionWitnessSet.from_bytes(\r\n    fromHex(txVkeyWitnesses)\r\n  );\r\n\r\n  debugger;\r\n  transactionWitnessSet.set_vkeys(txVkeyWitnesses.vkeys());\r\n\r\n  const signedTx = Cardano.Instance.Transaction.new(\r\n    tx.body(),\r\n    transactionWitnessSet,\r\n    tx.auxiliary_data()\r\n  );\r\n  console.log(\"subiming\");\r\n  const txHash = await Wallet.submitTx(toHex(signedTx.to_bytes()));\r\n\r\n  return txHash;\r\n};\r\n\r\nexport const createTxOutput = (address, value, { datum } = {}) => {\r\n  const minAda = Cardano.Instance.min_ada_required(\r\n    value,\r\n    Cardano.Instance.BigNum.from_str(getProtocolParameters().coinsPerUtxoWord),\r\n    datum && Cardano.Instance.hash_plutus_data(datum)\r\n  );\r\n\r\n  if (minAda.compare(value.coin()) === 1) value.set_coin(minAda);\r\n\r\n  const output = Cardano.Instance.TransactionOutput.new(address, value);\r\n\r\n  if (datum) {\r\n    output.set_data_hash(Cardano.Instance.hash_plutus_data(datum));\r\n  }\r\n\r\n  return output;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_CREATE_TRANSACTION_UNSPENT_OUTPUT\r\n */\r\nexport const createTxUnspentOutput = (address, utxo) => {\r\n  try {\r\n    return Cardano.Instance.TransactionUnspentOutput.new(\r\n      Cardano.Instance.TransactionInput.new(\r\n        Cardano.Instance.TransactionHash.from_bytes(fromHex(utxo.tx_hash)),\r\n        utxo.output_index\r\n      ),\r\n      Cardano.Instance.TransactionOutput.new(\r\n        address,\r\n        assetsToValue(utxo.amount)\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in createTxUnspentOutput. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_CREATE_TRANSACTION_UNSPENT_OUTPUT);\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SERIALIZE_TRANSACTION_UNSPENT_OUTPUT\r\n */\r\nexport const serializeTxUnspentOutput = (hexEncodedBytes) => {\r\n  try {\r\n    return Cardano.Instance.TransactionUnspentOutput.from_bytes(\r\n      fromHex(hexEncodedBytes)\r\n    );\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in serializeTxUnspentOutput. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_SERIALIZE_TRANSACTION_UNSPENT_OUTPUT);\r\n  }\r\n};\r\n\r\nexport const serializeTxUnspentOutput10 = (hexEncodedBytes) => {\r\n  try {\r\n    return Cardanoo.TransactionUnspentOutput.from_bytes(\r\n      fromHex(hexEncodedBytes)\r\n    );\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in serializeTxUnspentOutput. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_SERIALIZE_TRANSACTION_UNSPENT_OUTPUT);\r\n  }\r\n};\r\nexport const valueToAssets = (value) => {\r\n  const assets = [];\r\n  assets.push({ unit: \"lovelace\", quantity: value.coin().to_str() });\r\n  if (value.multiasset()) {\r\n    const multiAssets = value.multiasset().keys();\r\n    for (let j = 0; j < multiAssets.len(); j++) {\r\n      const policy = multiAssets.get(j);\r\n      const policyAssets = value.multiasset().get(policy);\r\n      const assetNames = policyAssets.keys();\r\n      for (let k = 0; k < assetNames.len(); k++) {\r\n        const policyAsset = assetNames.get(k);\r\n        const quantity = policyAssets.get(policyAsset);\r\n        const asset = toHex(policy.to_bytes()) + toHex(policyAsset.name());\r\n        assets.push({\r\n          unit: asset,\r\n          quantity: quantity.to_str(),\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return assets;\r\n};\r\n\r\nexport const getProtocolParameters = () => {\r\n  return {\r\n    linearFee: {\r\n      minFeeA: \"55\",\r\n      minFeeB: \"155381\",\r\n    },\r\n    minUtxo: \"34482\",\r\n    poolDeposit: \"500000000\",\r\n    keyDeposit: \"2000000\",\r\n    maxValSize: 5000,\r\n    maxTxSize: 16384,\r\n    priceMem: 0.0577,\r\n    priceStep: 0.0000721,\r\n    coinsPerUtxoWord: \"34482\",\r\n  };\r\n};\r\n\r\nconst setCollateral = (txBuilder, utxos) => {\r\n  const inputs = Cardano.Instance.TransactionInputs.new();\r\n\r\n  utxos.forEach((utxo) => {\r\n    inputs.add(utxo.input());\r\n  });\r\n\r\n  txBuilder.set_collateral(inputs);\r\n};\r\n","export const languageViews =\r\n  \"a141005901d59f1a000302590001011a00060bc719026d00011a000249f01903e800011a000249f018201a0025cea81971f70419744d186419744d186419744d186419744d186419744d186419744d18641864186419744d18641a000249f018201a000249f018201a000249f018201a000249f01903e800011a000249f018201a000249f01903e800081a000242201a00067e2318760001011a000249f01903e800081a000249f01a0001b79818f7011a000249f0192710011a0002155e19052e011903e81a000249f01903e8011a000249f018201a000249f018201a000249f0182001011a000249f0011a000249f0041a000194af18f8011a000194af18f8011a0002377c190556011a0002bdea1901f1011a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000242201a00067e23187600010119f04c192bd200011a000249f018201a000242201a00067e2318760001011a000242201a00067e2318760001011a0025cea81971f704001a000141bb041a000249f019138800011a000249f018201a000302590001011a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a000249f018201a00330da70101ff\";\r\n","import Cardano from \"../serialization-lib\";\r\nimport { fromHex } from \"../../utils/converter\";\r\n\r\nclass Wallet {\r\n  async enable(name) {\r\n    if (name === \"ccvault\") {\r\n      const instance = await window.cardano?.ccvault?.enable();\r\n      if (instance) {\r\n        this._provider = instance;\r\n        return true;\r\n      }\r\n    } else if (name === \"gerowallet\") {\r\n      const instance = await window.cardano?.gerowallet?.enable();\r\n      if (instance) {\r\n        this._provider = instance;\r\n        return true;\r\n      }\r\n    } else if (name === \"nami\" || name === false) {\r\n      const isEnabled = await window.cardano?.enable();\r\n      if (isEnabled) {\r\n        this._provider = window.cardano;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async getAvailableWallets() {\r\n    let availableWallets = [];\r\n\r\n    if (window.cardano === undefined) {\r\n      return availableWallets;\r\n    }\r\n\r\n    if (window.cardano.ccvault) {\r\n      availableWallets.push(\"ccvault\");\r\n    }\r\n\r\n    if (window.cardano.gerowallet) {\r\n      availableWallets.push(\"gerowallet\");\r\n    }\r\n\r\n    if (window.cardano.enable) {\r\n      availableWallets.push(\"nami\");\r\n    }\r\n\r\n    return availableWallets;\r\n  }\r\n\r\n  async getBalance() {\r\n    return await this._provider.getBalance();\r\n  }\r\n\r\n  async getCollateral() {\r\n    return await this._provider.getCollateral();\r\n  }\r\n\r\n  async getNetworkId() {\r\n    return await this._provider.getNetworkId();\r\n  }\r\n\r\n  async getUsedAddresses() {\r\n    const usedAddresses = await this._provider.getUsedAddresses();\r\n\r\n    return usedAddresses.map((address) =>\r\n      Cardano.Instance.Address.from_bytes(fromHex(address)).to_bech32()\r\n    );\r\n  }\r\n\r\n  async getUtxos() {\r\n    return await this._provider.getUtxos();\r\n  }\r\n\r\n  async signTx(tx, partialSign = true) {\r\n    return await this._provider.signTx(tx, partialSign);\r\n  }\r\n\r\n  async submitTx(tx) {\r\n    return await this._provider.submitTx(tx);\r\n  }\r\n}\r\n\r\nexport default new Wallet();\r\n","const v1 =\r\n  parseInt(process.env.REACT_APP_CARDANO_NETWORK_ID) === 0\r\n    ? {\r\n        type: \"PlutusScriptV1\",\r\n        address:\r\n          \"addr_test1wqdgnd5j2shp0afg9w5vfntp8nz4yumtfd8elvrw7p0n6cgp070p6\",\r\n        cborHex:\r\n          \"\",\r\n      }\r\n    : {\r\n        type: \"PlutusScriptV1\",\r\n        address: \"addr1w9upz00jfglpk2547x03s2mptq779w9u7fr92ha0x8g5kxq9fuyx0\",\r\n        cborHex:\r\n          \"5912dc0100003323322333222332233223232333222323332223233333333222222223233322232333322223232332232333222323332223232332233223232333332222233223322332233223322332222323232323232232232325335303833300d3333573466e1cd55cea805a400046666664444446666660ba00c00a0080060040026eb8d5d0a8059bad35742a0146eb8d5d0a8049bae35742a0106eb8d5d0a8039bad357426ae89401c8d4138d4c13ccd5ce2490350543100050499263333573466e1d40112002205423333573466e1d40152000205623504f353050335738921035054310005149926498cccd5cd19b8735573aa004900011980819191919191919191919191999ab9a3370e6aae75402920002333333333301e33502c232323333573466e1cd55cea80124000466048607e6ae854008c0c4d5d09aba2500223505e35305f3357389201035054310006049926135573ca00226ea8004d5d0a80519a8160169aba150093335503375ca0646ae854020ccd540cdd728191aba1500733502c04835742a00c66a05866aa0b20a2eb4d5d0a8029919191999ab9a3370e6aae754009200023350263232323333573466e1cd55cea80124000466a05c66a08eeb4d5d0a80118261aba135744a00446a0c46a60c666ae712401035054310006449926135573ca00226ea8004d5d0a8011919191999ab9a3370e6aae7540092000233502c33504775a6ae854008c130d5d09aba250022350623530633357389201035054310006449926135573ca00226ea8004d5d09aba2500223505e35305f3357389201035054310006049926135573ca00226ea8004d5d0a80219a8163ae35742a00666a05866aa0b2eb88004d5d0a801181f1aba135744a00446a0b46a60b666ae71241035054310005c49926135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135573ca00226ea8004d5d0a8011919191999ab9a3370ea00290031181198201aba135573ca00646666ae68cdc3a801240084604460946ae84d55cf280211999ab9a3370ea006900111811181a9aba135573ca00a46666ae68cdc3a802240004604a6eb8d5d09aab9e50062350553530563357389201035054310005749926499264984d55cea80089baa001357426ae8940088d4138d4c13ccd5ce249035054310005049926104f13504d35304e3357389201035054350004f4984d55cf280089baa001135573a6ea80044d5d1280089aba25001135744a00226ae8940044d55cf280089baa0012212330010030022001222222222212333333333300100b00a00900800700600500400300220012212330010030022001122123300100300212001122123300100300212001122123300100300212001212222300400521222230030052122223002005212222300100520011232230023758002640026aa072446666aae7c004940388cd4034c010d5d080118019aba200203323232323333573466e1cd55cea801a4000466600e6464646666ae68cdc39aab9d5002480008cc034c0c4d5d0a80119a8098169aba135744a00446a06c6a606e66ae71241035054310003849926135573ca00226ea8004d5d0a801999aa805bae500a35742a00466a01eeb8d5d09aba25002235032353033335738921035054310003449926135744a00226aae7940044dd50009110919980080200180110009109198008018011000899aa800bae75a224464460046eac004c8004d540cc88c8cccd55cf80112804919a80419aa81898031aab9d5002300535573ca00460086ae8800c0b84d5d08008891001091091198008020018900089119191999ab9a3370ea002900011a80418029aba135573ca00646666ae68cdc3a801240044a01046a0526a605466ae712401035054310002b499264984d55cea80089baa001121223002003112200112001232323333573466e1cd55cea8012400046600c600e6ae854008dd69aba135744a00446a0466a604866ae71241035054310002549926135573ca00226ea80048848cc00400c00880048c8cccd5cd19b8735573aa002900011bae357426aae7940088d407cd4c080cd5ce24810350543100021499261375400224464646666ae68cdc3a800a40084a00e46666ae68cdc3a8012400446a014600c6ae84d55cf280211999ab9a3370ea00690001280511a8111a981199ab9c490103505431000244992649926135573aa00226ea8004484888c00c0104488800844888004480048c8cccd5cd19b8750014800880188cccd5cd19b8750024800080188d4068d4c06ccd5ce249035054310001c499264984d55ce9baa0011220021220012001232323232323333573466e1d4005200c200b23333573466e1d4009200a200d23333573466e1d400d200823300b375c6ae854014dd69aba135744a00a46666ae68cdc3a8022400c46601a6eb8d5d0a8039bae357426ae89401c8cccd5cd19b875005480108cc048c050d5d0a8049bae357426ae8940248cccd5cd19b875006480088c050c054d5d09aab9e500b23333573466e1d401d2000230133016357426aae7940308d407cd4c080cd5ce2481035054310002149926499264992649926135573aa00826aae79400c4d55cf280109aab9e500113754002424444444600e01044244444446600c012010424444444600a010244444440082444444400644244444446600401201044244444446600201201040024646464646666ae68cdc3a800a400446660106eb4d5d0a8021bad35742a0066eb4d5d09aba2500323333573466e1d400920002300a300b357426aae7940188d4040d4c044cd5ce2490350543100012499264984d55cea80189aba25001135573ca00226ea80048488c00800c888488ccc00401401000c80048c8c8cccd5cd19b875001480088c018dd71aba135573ca00646666ae68cdc3a80124000460106eb8d5d09aab9e500423500a35300b3357389201035054310000c499264984d55cea80089baa001212230020032122300100320011122232323333573466e1cd55cea80124000466aa016600c6ae854008c014d5d09aba25002235007353008335738921035054310000949926135573ca00226ea8004498480048004448848cc00400c008448004488008488004800488888848cccccc00401c01801401000c0088004448c8c00400488cc00cc008008004cc8c8cc88cc88c8c8c8ccc888c8c8cc88c8c8ccc888c8c8cccc8888c8cc88c8c8cc88c8c8c8c8cc88ccc888c8c8ccc888ccc888cccccccc88888888cc88ccccc88888cccc8888cc88cc88cc88ccc888cc88cc88cc88cc88cc88c8c8c888c888c94cd4c0e000c54cd4c15ccc0f8c0dcccc01cccd54c11c48005410d4140cc02401940052201004881003303f3303d4800920c801303735303b005222222005153353057333573466e1cccc01cccd54c11c48005410d4140cc0254cd4d4138d4c0314004888888888800c4c16c588854cd4d41400044008884c17c594004d4c0ec014888888010d4c0ec01488888800d20020590581533530573303e303733300733355304712001504350503300935303b0052222220065001489004881003303f3303d3370266e0520d00f48050d4c0ec01488888800520d00f303735303b00522222200515335305753353057333573466e1d40112000059058105913303e303733300733355304712001504350503300935303b0052222220025001489004881003303f3303d5004483403cc0dcd4c0ec0148888880144ccd5cd19b87323320013200133355304e12001323350562233350560030010023505300133505522230033002001200122337000029001000a4000664464600266aa60722400246a6024002440026a601ea0084444444444014640026aa0c844a66a6a0a4002200644264a66a60bc66446a6036004446a603a006446466a608200a466a60840084a66a60ce666ae68cdc78010008348340a80188341034119a982100210341299a9833999ab9a3371e0040020d20d02a00620d02a66a6a04200642a66a6a0440044266a607e004466a6080004466a6088004466a608a0044660d000400240d6466a608a00440d64660d00040024440d644466a608400840d6444a66a60d8666ae68cdc38030018370368a99a9836199ab9a3370e00a0040dc0da2666ae68cdc38020008370368836883688330a99a9a8108009083308331a980b8019110019980d181d9a9aa8331a9808804911a980a8011111111111299a9a813a9999a981a00590a81490a81490a81490999aa983089000a80e11a981180091299a9837299a9837199ab9a3371e6a607a004440046a607a008440040e00de2666ae68cdc39a981e801110009a981e80211000838037883789a8168018a816005909a9811000911a98130009111a98158019119a98270011183c0b1299a9a8180021099aa83e8010008983c0b098378b11001280e09980380180088009802000a827a828240040b20b020b020b020b020b0266446a601c0044444444444a66a6a040666aa60b224002a0284a66a60c8666ae68cdc780600083303289a8118008a8110019083308321a9805001110011a981d80291111100309a98048009100109a981b80091111100091119191800802990009aa82f9119a9a826800a4000446a6aa0c000444a66a60b4666ae68cdc780100482e02d8980380089803001990009aa82f1119a9a826000a4000446a6aa0be00444a66a60b2666ae68cdc780100382d82d080089803001899a82611299a9a807001108018800a806911a98028009111111111199aa982509000911a980a8011111a980d0019119a981e8011299a9831199ab9a3371e0280020c80c6266a0b400a00e200e400ea0a60124424660020060044002444444444424666666666600201601401201000e00c00a0080060044002442466002006004400244424666002008006004400244246600200600440022424460040062244002240022442466002006004240022442466002006004240022442466002006004240022424446006008224440042244400224002424444600800a424444600600a424444600400a424444600200a40024424660020060044002424444444600e01044244444446600c012010424444444600a010244444440082444444400644244444446600401201044244444446600201201040024244600400644424466600200a008006400242446004006424460020064002640026aa058442244a66a6a0380022a03c44266a03e600800466aa600c24002008002466a01800290010910010910009000911111091999998008038030028020018011000911980299b820025335301c333573466e1c005200001e01d14800054cd4c070ccd5cd19b890014800007407852002133702900024004a66a6038666ae68cdc4000a400003c03a266e0520000011001223535005002223535007003223253353020333573466e1c01400c08808454cd4c080ccd5cd19b870040020220211022150011500115335301f333573466e24cdc100200099b820020030210201020102122353500400222353500600322330073370400800466e0800c00488c94cd4c068ccd5cd19b870024800007006c4d4090d4c080cd5ce248103505433000214984cd4014cdc2001a80099b84002500113301853353019333573466e20009200001b01a13370290000010801299a980c999ab9a33710002900000d80d099b8148000004400448848cc00400c00848004488cd54c02c480048d4d5407c00488cd54088008cd54c038480048d4d5408800488cd54094008ccd4d540340048cc0812000001223302100200123302000148000004cd54c02c480048d4d5407c00488cd54088008ccd4d540280048cd54c03c480048d4d5408c00488cd54098008d5404400400488ccd5540200640080048cd54c03c480048d4d5408c00488cd54098008d5403c004004ccd55400c050008004444888ccd54c018480054038cd54c02c480048d4d5407c00488cd54088008d54034004ccd54c0184800488d4d54080008894cd4c068ccd54c04048004c8cd406088ccd4d402c00c88008008004d4d402400488004cd4024894cd4c0700084078400406c8d4d5408c00488cc028008014018400c4cd404801000d403c004cd54c02c480048d4d5407c00488c8cd5408c00cc004014c8004d54090894cd4d40480044d5403400c884d4d54094008894cd4c07ccc0300080204cd5404801c0044c01800c00848848cc00400c00848004c8004d5406c88448894cd4d40300044008884cc014008ccd54c01c480040140100044484888c00c01044884888cc0080140104484888c004010448004c8004d540588844894cd4d401800454020884cd4024c010008cd54c01848004010004c8004d5405488448894cd4d40180044d402400c884ccd4030014c010008ccd54c01c480040140100044488008488488cc00401000c4800448d4d400c0048800448d4d40080048800848848cc00400c0084800488ccd5cd19b8f0020010060053200135500c22253353004333573466e1c005200000600510021330030013370a00400224400424400240024466e00008004988d4018d4c008cd5ce2481024c6700003498480048004448848cc00400c008448004498448c8c00400488cc00cc00800800522011c09aaedfc2c267948a623a4dddd093327c235c3fa88a47f14d41a73470001\",\r\n      };\r\n\r\nconst v2 =\r\n  parseInt(process.env.REACT_APP_CARDANO_NETWORK_ID) === 0\r\n    ? {\r\n        type: \"PlutusScriptV1\",\r\n        address:\r\n          \"addr_test1wqu6r6eakmawk389ukkreypw72xjskrfa3r4jms9qae8wgsjfykgq\",\r\n        cborHex:\r\n          \"\",\r\n      }\r\n    : {\r\n        type: \"PlutusScriptV1\",\r\n        address: \"addr1wyu6r6eakmawk389ukkreypw72xjskrfa3r4jms9qae8wgsfps289\",\r\n        cborHex:\r\n          \"\",\r\n      };\r\n\r\nconst contracts = { v1, v2 };\r\n\r\nexport default contracts;\r\n","import Cardano from \"../serialization-lib\";\r\nimport Contracts from \"./plutus\";\r\nimport { fromHex } from \"../../utils/converter\";\r\n\r\nexport const contractAddress = (version) => {\r\n  return Cardano.Instance.Address.from_bech32(Contracts[version].address);\r\n};\r\n\r\nexport const contractScripts = (version) => {\r\n  const scripts = Cardano.Instance.PlutusScripts.new();\r\n\r\n  scripts.add(\r\n    Cardano.Instance.PlutusScript.new(fromHex(Contracts[version].cborHex))\r\n  );\r\n\r\n  return scripts;\r\n};\r\n","class Cardano {\r\n  async load() {\r\n    if (this._wasm) return;\r\n\r\n    try {\r\n      this._wasm = await import(\"@emurgo/cardano-serialization-lib-browser\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  get Instance() {\r\n    return this._wasm;\r\n  }\r\n}\r\n\r\nexport default new Cardano();\r\n","export const WALLET_CONNECTED = 'WALLET_CONNECTED';\r\nexport const SET_WALLET_NETWORK = 'SET_WALLET_NETWORK';\r\nexport const SET_WALLET_USEADDR = 'SET_WALLET_USEADDR';\r\nexport const SET_WALLET_REWARDADDR = 'SET_WALLET_REWARDADDR';\r\nexport const SET_WALLET_BALANCE = 'SET_WALLET_BALANCE';\r\nexport const SET_WALLET_UTXOS = 'SET_WALLET_UTXOS';\r\nexport const SET_WALLET_LOADING = 'SET_WALLET_LOADING';\r\nexport const SET_WALLET_ASSETS = 'SET_WALLET_ASSETS';\r\nexport const SET_WALLET_DATA = 'SET_WALLET_DATA';\r\nexport const ADD_WALLET_ASSET = 'ADD_WALLET_ASSET';\r\n\r\nexport const WALLET_STATE = {\r\n  'CONNECTING': 'CONNECTING',\r\n  'GETTING_ASSETS': 'GETTING_ASSETS',\r\n  'AWAITING_SIGNATURE': 'AWAITING_SIGNATURE',\r\n}\r\n\r\nexport const MARKET_TYPE = {\r\n  'NEW_LISTING': 'NEW_LISTING',\r\n  'PRICE_UPDATE': 'PRICE_UPDATE',\r\n  'DELIST': 'DELIST',\r\n  'PURCHASE': 'PURCHASE',\r\n  'SOLD': 'SOLD',\r\n}\r\n","import * as types from \"./walletTypes\";\r\n\r\nlet walletobj = {\r\n  connected: false,\r\n  loading: false,\r\n  data: {\r\n    assets: {}\r\n  },\r\n  nami: {\r\n    collateral: []\r\n  },\r\n  loaded_assets: false,\r\n};\r\n\r\nfunction update_tokens(asset){\r\n  if(asset){\r\n    console.log(55, asset)\r\n\r\n    // asset.collection = \r\n    // if(policy_id in state_policies_collections){\r\n    //   token.collection = state_policies_collections[policy_id];\r\n    // }else{\r\n    //   token.collection = {policy_id: policy_id};\r\n    // }\r\n    // token.listing = \r\n    //   token.listing ? {...token.listing} : {}\r\n    // ;\r\n  }\r\n  return asset;\r\n}\r\n\r\nexport default function walletReducer(state = walletobj, { type, payload }) {\r\n  switch (type) {\r\n\r\n    case types.WALLET_CONNECTED:\r\n      return {\r\n        ...state,\r\n        connected: true,\r\n        loading: false,\r\n        data: payload.data,\r\n        provider: payload.provider,\r\n        // events: payload.database.events,\r\n        // offers: payload.database.offers,\r\n      };\r\n    \r\n    case types.SET_WALLET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    \r\n    // case types.SET_WALLET_ASSETS:\r\n    //   let tmp_assets = {};\r\n    //   for(var asset_id in payload){\r\n    //     if(asset_id!='lovelace'){\r\n    //       let this_asset = payload[asset_id];\r\n    //       if(this_asset){\r\n    //         tmp_assets[asset_id] = {\r\n    //           policy_id: this_asset.details.policyId,\r\n    //           // quantity: this_asset.quantity,\r\n    //           asset_id: asset_id,\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   return {\r\n    //     ...state,\r\n    //     assets: tmp_assets,\r\n    //     loaded_assets: true,\r\n    //     loading: false,\r\n    //   };\r\n\r\n    case types.SET_WALLET_DATA:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: payload,\r\n        loaded_assets: true,\r\n      };\r\n    \r\n    case types.ADD_WALLET_ASSET:\r\n      console.log(1,payload)\r\n      console.log(2,state.data.assets)\r\n      return {\r\n        ...state,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const COLLECTIONS_LOADED = 'COLLECTIONS_LOADED';\r\nexport const COLLECTIONS_LISTING_LOADED = 'COLLECTIONS_LISTING_LOADED';\r\nexport const COLLECTIONS_ADD_TOKENS = 'COLLECTIONS_ADD_TOKENS';\r\nexport const COLLECTIONS_ADD_TOKEN = 'COLLECTIONS_ADD_TOKEN';\r\nexport const COLLECTIONS_LOADING = 'COLLECTIONS_LOADING';\r\nexport const COLLECTIONS_TOP_PROJECTS = 'COLLECTIONS_TOP_PROJECTS';\r\nexport const COLLECTIONS_ADD_ASSETS = 'COLLECTIONS_ADD_ASSETS';\r\n","import * as types from \"./collectionTypes\";\r\nimport * as walletTypes from \"../wallet/walletTypes\";\r\n\r\nlet collectionobj = {\r\n  loaded: false,\r\n  loading: false,\r\n  collections: {},\r\n  policies_collections: {},\r\n  policies_assets: {},\r\n};\r\n\r\nfunction update_tokens(token, policy_id, state_policies_collections) {\r\n  if (token) {\r\n    if (policy_id in state_policies_collections) {\r\n      token.collection = state_policies_collections[policy_id];\r\n    } else {\r\n      token.collection = { policy_id: policy_id };\r\n    }\r\n    token.listing =\r\n      token.listing ? { ...token.listing } : {}\r\n      ;\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction add_assets(state, payload) {\r\n  let tmp_policies_assets = { ...state.policies_assets };\r\n\r\n  for (let asset_id in payload.assets) {\r\n    let this_asset = payload.assets[asset_id];\r\n    let policy_id = this_asset.details.policyId;\r\n\r\n    let tmp_policies_assets_policy = {};\r\n    if (policy_id in tmp_policies_assets) {\r\n      tmp_policies_assets_policy = { ...tmp_policies_assets[policy_id] };\r\n    }\r\n\r\n    this_asset = update_tokens(this_asset, policy_id, state.policies_collections);\r\n    tmp_policies_assets_policy[asset_id] = this_asset;\r\n    tmp_policies_assets[policy_id] = tmp_policies_assets_policy;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    policies_assets: tmp_policies_assets,\r\n  };\r\n}\r\n\r\nexport default function collectionReducer(state = collectionobj, { type, payload }) {\r\n  let tmp_collections, new_tokens, tmp;\r\n  switch (type) {\r\n    case types.COLLECTIONS_LOADED:\r\n      let tmp_policies_collections = { ...state.policies_collections };\r\n      tmp_collections = { ...state.collections };\r\n\r\n      for (let collection_id in payload) {\r\n        tmp_collections[collection_id] = payload[collection_id]\r\n        for (let i in payload[collection_id].policy_ids) {\r\n          let policy_id = payload[collection_id].policy_ids[i];\r\n          tmp_policies_collections[policy_id] = payload[collection_id];\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        loading: false,\r\n        collections: tmp_collections,\r\n        policies_collections: tmp_policies_collections\r\n      };\r\n\r\n    case types.COLLECTIONS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case types.COLLECTIONS_LISTING_LOADED:\r\n      tmp_collections = {\r\n        ...state.collections,\r\n      };\r\n      tmp_collections[payload.collection_id].listing = payload.listing;\r\n      return {\r\n        ...state,\r\n        collections: tmp_collections,\r\n        loading: false,\r\n      };\r\n\r\n    case types.COLLECTIONS_ADD_TOKENS:\r\n      tmp = {\r\n        ...state.policies_assets,\r\n      };\r\n\r\n      new_tokens = { ...payload.listing };\r\n\r\n      for (let asset_id in new_tokens) {\r\n        new_tokens[asset_id] = update_tokens(new_tokens[asset_id], payload.policy_id, state.policies_collections);\r\n      }\r\n\r\n      if (!(payload.policy_id in tmp)) {\r\n        tmp[payload.policy_id] = {};\r\n      }\r\n\r\n      tmp[payload.policy_id] = {\r\n        ...tmp[payload.policy_id],\r\n        ...new_tokens\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        policies_assets: tmp\r\n      };\r\n    // case walletTypes.SET_WALLET_ASSETS:\r\n    //   let tmp_policies_assets = {...state.policies_assets};\r\n\r\n    //   for(let asset_id in payload){\r\n    //     if(asset_id!='lovelace'){\r\n    //       let this_asset = payload[asset_id];\r\n    //       if(this_asset){\r\n    //         let policy_id = this_asset.details.policyId;\r\n\r\n    //         let tmp_policies_assets_policy = {};\r\n    //         if(policy_id in tmp_policies_assets){\r\n    //           tmp_policies_assets_policy = {...tmp_policies_assets[policy_id]};\r\n    //         }\r\n\r\n    //         this_asset = update_tokens(this_asset, policy_id, state.policies_collections);\r\n    //         tmp_policies_assets_policy[asset_id] = this_asset;\r\n    //         tmp_policies_assets[policy_id] = tmp_policies_assets_policy;\r\n    //       }\r\n    //     }\r\n    //   }\r\n\r\n    //   return {\r\n    //     ...state,\r\n    //     policies_assets: tmp_policies_assets,\r\n    //   };\r\n\r\n    case walletTypes.SET_WALLET_DATA:\r\n      return add_assets(state, payload)\r\n\r\n    case types.COLLECTIONS_ADD_ASSETS:\r\n      return add_assets(state, payload)\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const SET_ERROR = 'SET_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\n","import * as types from \"./errorTypes\";\r\n\r\nlet errorObj = {\r\n  show: false,\r\n  message: '',\r\n  detail: {},\r\n};\r\n\r\nexport default function errorReducer(state = errorObj, { type, payload }) {\r\n  switch (type) {\r\n    case types.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        show: true,\r\n      };\r\n\r\n    case types.CLEAR_ERROR:\r\n      return errorObj;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport walletReducer from \"./wallet/walletReducer\";\r\nimport collectionReducer from \"./collection/collectionReducer\";\r\nimport errorReducer from \"./error/errorReducer\";\r\n\r\nexport default combineReducers({\r\n  wallet: walletReducer,\r\n  collection: collectionReducer,\r\n  error: errorReducer,\r\n});\r\n","import React from \"react\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nconst Image = ({src, alt}) => {\r\n  return (\r\n    <LazyLoadImage\r\n      alt={alt ? alt : \"\"}\r\n      src={src}\r\n      effect=\"opacity\"\r\n      />\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst FadeImg = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const onLoad = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/alt-text\r\n    <img\r\n      style={{\r\n        opacity: 0,\r\n        animation: show ? `fadeIn 0.5s ease-out forwards` : \"\",\r\n      }}\r\n      {...props}\r\n      onLoad={onLoad}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FadeImg;\r\n","import React from \"react\";\r\nimport { get_asset_image_source } from \"../../utils/converter\";\r\nimport Image from \"../../components/Image\";\r\nimport LazyLoad from 'react-lazyload';\r\nimport { FadeImg } from \"components/Fades\";\r\n\r\nconst AssetImageFigure = ({ asset, setShow, show_trigger, width, no_figure, className }) => {\r\n  return (\r\n    <>\r\n      {\r\n        no_figure ? (\r\n          <FadeImg className={className} src={get_asset_image_source(asset.details.onchainMetadata.image)} alt={asset.details.onchainMetadata.name} style={{ width: width, height: width }} />\r\n        ) :\r\n          setShow ? (\r\n            <div onClick={() => setShow(show_trigger ? show_trigger : false)} style={{ cursor: \"pointer\" }}>\r\n              <LazyLoad className=\"image is-square\">\r\n                <Image src={get_asset_image_source(asset.details.onchainMetadata.image)} alt={asset.details.onchainMetadata.name} style={{ width: width, height: width }} />\r\n              </LazyLoad>\r\n            </div>\r\n          ) : (\r\n            <LazyLoad className=\"image is-square\">\r\n              <Image src={get_asset_image_source(asset.details.onchainMetadata.image)} alt={asset.details.onchainMetadata.name} style={{ width: width, height: width }} />\r\n            </LazyLoad>\r\n          )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AssetImageFigure;\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport AssetImageFigure from \"../AssetImageFigure\";\r\nimport { fromLovelace } from \"../../utils/converter\";\r\n\r\nconst AssetCard = ({ state_collection, asset, column_className, show_offer }) => {\r\n\r\n  let collection = false;\r\n  if (asset) {\r\n    collection = state_collection.policies_collections[asset.details.policyId]\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        asset ? (\r\n          <>\r\n            {\r\n              asset.details.onchainMetadata ? (\r\n                <div className={column_className ? column_className : \"column is-one-full-mobile is-half-tablet one-quarter-desktop is-one-quarter-widescreen is-one-quarter-fullhd\"}>\r\n                  <Link to={`/assets/${asset.details.policyId}/${asset.details.asset}`}>\r\n                    <div className=\"card asset_card\">\r\n                      <div className=\"card-image\">\r\n                        <AssetImageFigure asset={asset} />\r\n                      </div>\r\n                      <div className=\"card-content\">\r\n                        <div className=\"media is-clipped\">\r\n                          <div className=\"media-content clipped\">\r\n                            <p className=\"title is-size-5 clipped\">\r\n                              {asset.details.onchainMetadata.name}\r\n                            </p>\r\n                            <p className=\"subtitle is-size-7 clipped\">\r\n                              {collection ? collection.is_martify_verified ? collection.meta.name :\r\n                                collection.is_cnft_verified ? collection.meta.name :\r\n                                  asset.details.policyId : asset.details.policyId\r\n                              }\r\n                              {collection ? collection.is_martify_verified ? (\r\n                                <span className=\"icon\" data-tooltip=\"Martify Verified\">\r\n                                  <i\r\n                                    className=\"fas fa-check-circle\"\r\n                                    style={{ color: \"gold\" }}\r\n                                  ></i>\r\n                                </span>\r\n                              ) : collection.is_cnft_verified ? (\r\n                                <span className=\"icon\" data-tooltip=\"CNFT Verified\">\r\n                                  <i\r\n                                    className=\"fas fa-check-circle\"\r\n                                    style={{ color: \"green\" }}\r\n                                  ></i>\r\n                                </span>\r\n                              ) : (\r\n                                <></>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </p>\r\n                            <div className=\"title is-size-5 tag-price\">\r\n                              {\r\n                                asset.status.locked ?\r\n                                  <p>{fromLovelace(asset.status.datum.price)}<span className=\"ada_symbol\">&nbsp;₳</span></p>\r\n                                  : <p><span className=\"ada_symbol\">Not Listed</span></p>\r\n                              }\r\n                            </div>\r\n                            {\r\n                              show_offer ? asset.offers ? Object.keys(asset.offers).length ? (\r\n                                <span className=\"tag is-warning is-medium is-rounded price_tag\" style={{ top: \"50px\" }}>\r\n                                  <p className=\"\" data-tooltip={`Highest offer`}>\r\n                                    <span className=\"ada_symbol\">₳</span>\r\n                                    {\r\n                                      Math.max.apply(Math, Object.keys(asset.offers).map(function (key) {\r\n                                        return asset.offers[key];\r\n                                      }).map(function (o) { return o.p; }))\r\n                                    }\r\n                                  </p>\r\n                                </span>\r\n                              ) : <></> : <></> : <></>\r\n                            }\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              ) : <></>\r\n            }\r\n          </>\r\n        ) : <></>\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    state_collection: state.collection,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(AssetCard);\r\n","const errorTypes = {\r\n  COULD_NOT_FETCH_ASSET_DETAILS: \"COULD_NOT_FETCH_ASSET_DETAILS\",\r\n  COULD_NOT_FETCH_ASSET_TRANSACTIONS: \"COULD_NOT_FETCH_ASSET_TRANSACTIONS\",\r\n  COULD_NOT_FETCH_ADDRESS_UTXOS: \"COULD_NOT_FETCH_ADDRESS_UTXOS\",\r\n  COULD_NOT_FETCH_ASSET_UTXOS: \"COULD_NOT_FETCH_ASSET_UTXOS\",\r\n  COULD_NOT_FETCH_MINTED_ASSETS: \"COULD_NOT_FETCH_MINTED_ASSETS\",\r\n  COULD_NOT_FETCH_TRANSACTION_METADATA: \"COULD_NOT_FETCH_TRANSACTION_METADATA\",\r\n  COULD_NOT_FETCH_TRANSACTION_UTXOS: \"COULD_NOT_FETCH_TRANSACTION_UTXOS\",\r\n  COULD_NOT_FETCH_PROTOCOL_PARAMETERS: \"COULD_NOT_FETCH_PROTOCOL_PARAMETERS\",\r\n};\r\n\r\nexport default errorTypes;\r\n","/* development */\r\nexport const apiKey = process.env.REACT_APP_BLOCKFROST_API_KEY;\r\nexport const ipfsapiKey = process.env.REACT_APP_BLOCKFROST_IPFS_KEY;\r\nexport const cardanoUrl = process.env.REACT_APP_BLOCKFROST_API_URL;\r\nexport const cardanoIPFSUrl = process.env.REACT_APP_BLOCKFROST_IPFS_URL;\r\n\r\nexport const urls = {\r\n  root: \"http://martify.io/\",\r\n  cardanoscan: process.env.REACT_APP_CARDANOSCAN_URL,\r\n  ipfs: \"https://infura-ipfs.io/ipfs/\",\r\n};\r\n","import ErrorTypes from \"./error.types\";\r\nimport { apiKey, cardanoIPFSUrl, cardanoUrl } from \"../../config\";\r\nimport { fromHex, toString } from \"../../utils/converter\";\r\n/**\r\n * @param {string} asset - asset is a Concatenation of the policy_id and hex-encoded asset_name.\r\n * @throws COULD_NOT_FETCH_ASSET_DETAILS\r\n */\r\n// const API = BlockFrostAPI({\r\n//   project_id: process.env.REACT_APP_BLOCKFROST_IPFS_KEY,\r\n// });\r\nexport const getAssetDetails = async (asset) => {\r\n  try {\r\n    const response = await cardano(`assets/${asset}`);\r\n\r\n    if (parseInt(response.quantity) === 1 && response.onchain_metadata) {\r\n      const assetDetails = {\r\n        asset: response.asset,\r\n        policyId: response.policy_id,\r\n        assetName: response.asset_name,\r\n        readableAssetName: toString(fromHex(response.asset_name)),\r\n        fingerprint: response.fingerprint,\r\n        quantity: parseInt(response.quantity),\r\n        initialMintTxHash: response.initial_mint_tx_hash,\r\n        mintOrBurnCount: parseInt(response.mint_or_burn_count),\r\n        onchainMetadata: renameObjectKey(\r\n          response.onchain_metadata,\r\n          \"Name\",\r\n          \"name\"\r\n        ),\r\n        metadata: response.metadata,\r\n      };\r\n      return deleteObjectKey(assetDetails, \"\");\r\n    }\r\n\r\n    return undefined;\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getAssetDetails. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_ASSET_DETAILS);\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_FETCH_ASSET_TRANSACTIONS\r\n */\r\nexport const getAssetTransactions = async (\r\n  asset,\r\n  { page = 1, count = 100, order = \"asc\" }\r\n) => {\r\n  try {\r\n    return await cardano(\r\n      `assets/${asset}/transactions?page=${page}&count=${count}&order=${order}`\r\n    );\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getAssetTransactions. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_ASSET_TRANSACTIONS);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {string} address - address must be in bech_32 format.\r\n * @throws COULD_NOT_FETCH_ADDRESS_UTXOS\r\n */\r\nexport const getLockedUtxos = async (\r\n  address,\r\n  { page = 1, count = 100, order = \"asc\" }\r\n) => {\r\n  try {\r\n    return await cardano(\r\n      `addresses/${address}/utxos?page=${page}&count=${count}&order=${order}`\r\n    );\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getLockedUtxos. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_ADDRESS_UTXOS);\r\n  }\r\n};\r\nexport const addIpfs = async (file) => {\r\n  try {\r\n    return await cardanoipfs(`ipfs/add`, {}, file);\r\n  } catch (error) {\r\n    console.error(`Unexpected error in addIpfs. [Message: ${error.message}]`);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {string} address - address must be in bech_32 format.\r\n * @param {string} asset - asset is a Concatenation of the policy_id and hex-encoded asset_name.\r\n * @throws COULD_NOT_FETCH_ASSET_UTXOS\r\n */\r\nexport const getLockedUtxosByAsset = async (address, asset) => {\r\n  try {\r\n    return await cardano(`addresses/${address}/utxos/${asset}`);\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getLockedUtxosByAsset. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_ASSET_UTXOS);\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_FETCH_MINTED_ASSETS\r\n */\r\nexport const getMintedAssets = async (\r\n  policyId,\r\n  { page = 1, count = 100, order = \"asc\" }\r\n) => {\r\n  try {\r\n    const response = await cardano(\r\n      `assets/policy/${policyId}?page=${page}&count=${count}&order=${order}`\r\n    );\r\n\r\n    return response\r\n      .filter((asset) => parseInt(asset.quantity) === 1)\r\n      .map((asset) => asset.asset);\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getMintedAssets. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_MINTED_ASSETS);\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_FETCH_TRANSACTION_METADATA\r\n */\r\nexport const getTxMetadata = async (hash) => {\r\n  try {\r\n    return await cardano(`txs/${hash}/metadata`);\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getTxMetadata. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_TRANSACTION_METADATA);\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_FETCH_TRANSACTION_UTXOS\r\n */\r\nexport const getTxUtxos = async (hash) => {\r\n  try {\r\n    const response = await cardano(`txs/${hash}/utxos`);\r\n\r\n    return {\r\n      hash: response.hash,\r\n      inputs: response.inputs,\r\n      outputs: response.outputs,\r\n    };\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getTxUtxos. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_TRANSACTION_UTXOS);\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_FETCH_PROTOCOL_PARAMETERS\r\n */\r\nexport const getProtocolParameters = async () => {\r\n  try {\r\n    const response = await cardano(`epochs/latest/parameters`);\r\n\r\n    return {\r\n      linearFee: {\r\n        minFeeA: response.min_fee_a.toString(),\r\n        minFeeB: response.min_fee_b.toString(),\r\n      },\r\n      minUtxo: response.min_utxo,\r\n      poolDeposit: response.pool_deposit,\r\n      keyDeposit: response.key_deposit,\r\n      maxValSize: parseInt(response.max_val_size),\r\n      maxTxSize: parseInt(response.max_tx_size),\r\n      priceMem: parseFloat(response.price_mem),\r\n      priceStep: parseFloat(response.price_step),\r\n    };\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getProtocolParameters. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(ErrorTypes.COULD_NOT_FETCH_PROTOCOL_PARAMETERS);\r\n  }\r\n};\r\n\r\nexport const cardano = async (endpoint, headers, body) => {\r\n  return await request(cardanoUrl, endpoint, headers, body);\r\n};\r\n\r\nconst request = async (base, endpoint, headers, body) => {\r\n  return await fetch(base + endpoint, {\r\n    headers: {\r\n      project_id: apiKey,\r\n      ...headers,\r\n    },\r\n    method: body ? \"POST\" : \"GET\",\r\n    body,\r\n  }).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\nconst cardanoipfs = async (endpoint, headers, body) => {\r\n  return await requestipfs(cardanoIPFSUrl, endpoint, headers, body);\r\n};\r\n\r\nconst requestipfs = async (base, endpoint, headers, body) => {\r\n  return await fetch(base + endpoint, {\r\n    method: \"POST\",\r\n\r\n    headers: {\r\n      project_id: process.env.REACT_APP_BLOCKFROST_IPFS_KEY,\r\n      \"Content-Type\": `multipart/form-data;`,\r\n      \"Content-Length\": body.byteLength,\r\n      ...headers,\r\n    },\r\n    body: body,\r\n    redirect: \"follow\",\r\n  }).then((response) => {\r\n    if (!response.ok) {\r\n      console.log(response);\r\n\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    return response.json();\r\n  });\r\n};\r\n\r\nconst renameObjectKey = (object, oldKey, newKey) => {\r\n  let newObject = { ...object };\r\n  if (oldKey in newObject) {\r\n    newObject[newKey] = newObject[oldKey];\r\n    delete newObject[oldKey];\r\n  }\r\n  return newObject;\r\n};\r\n\r\nconst deleteObjectKey = (object, key) => {\r\n  let newObject = {};\r\n  if (object) {\r\n    Object.keys(object).forEach((objectKey) => {\r\n      if (typeof object[objectKey] === \"object\") {\r\n        newObject = {\r\n          ...newObject,\r\n          [objectKey]: deleteObjectKey(object[objectKey], key),\r\n        };\r\n      } else if (objectKey !== key) {\r\n        newObject = {\r\n          ...newObject,\r\n          [objectKey]: object[objectKey],\r\n        };\r\n      }\r\n    });\r\n  }\r\n  return newObject;\r\n};\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getFunctions } from \"firebase/functions\";\r\n\r\nconst firebaseOptions = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseOptions);\r\nexport const firestore = getFirestore(app);\r\nexport const functions = getFunctions(app);\r\n","import {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  limit,\r\n  orderBy,\r\n  query,\r\n  setDoc,\r\n  startAfter,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { getAssetDetails, getMintedAssets } from \"../cardano/blockfrost-api\";\r\nimport { firestore } from \"../firebase\";\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_ASSET_TO_DB\r\n */\r\nexport const addAssetEvent = async (asset, newEvent) => {\r\n  if (asset && newEvent) {\r\n    const assetUpdated = {\r\n      ...asset,\r\n      events: [...(asset.events || []), newEvent],\r\n    };\r\n    await saveAsset(assetUpdated);\r\n    return assetUpdated;\r\n  }\r\n  return asset;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_ASSET_TO_DB\r\n */\r\nexport const addAssetOffer = async (asset, newOffer) => {\r\n  if (asset && newOffer) {\r\n    const assetUpdated = {\r\n      ...asset,\r\n      offers: [...(asset.offers || []), newOffer],\r\n    };\r\n    await saveAsset(assetUpdated);\r\n    return assetUpdated;\r\n  }\r\n  return asset;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_RETRIEVE_ASSET_FROM_DB\r\n */\r\nexport const getAsset = async (assetId) => {\r\n  try {\r\n    if (assetId) {\r\n      const reference = doc(firestore, \"assets\", assetId);\r\n\r\n      const snapshot = await getDoc(reference);\r\n\r\n      if (snapshot.exists()) {\r\n        return snapshot.data();\r\n      } else {\r\n        const assetDetails = await getAssetDetails(assetId);\r\n        if (assetDetails === undefined) return undefined;\r\n\r\n        const asset = {\r\n          details: assetDetails,\r\n          events: [],\r\n          offers: [],\r\n          status: { locked: false },\r\n        };\r\n\r\n        await saveAsset(asset);\r\n\r\n        return asset;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(`Unexpected error in getAsset. [Message: ${error.message}]`);\r\n    throw new Error(\"COULD_NOT_RETRIEVE_ASSET_FROM_DB\");\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_RETRIEVE_ASSET_FROM_DB\r\n */\r\nexport const getAssets = async (assetIds) => {\r\n  if (assetIds) {\r\n    const assets = await Promise.all(\r\n      assetIds.map(async (assetId) => await getAsset(assetId))\r\n    );\r\n    return assets.filter((asset) => asset !== undefined);\r\n  }\r\n  return [];\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_RETRIEVE_COLLECTION_ASSETS_FROM_DB\r\n */\r\nexport const getCollectionAssets = async (\r\n  policyId,\r\n  page = 1,\r\n  count = 100,\r\n  lastVisible\r\n) => {\r\n  try {\r\n    if (policyId) {\r\n      const reference = await query(\r\n        collection(firestore, \"assets\"),\r\n        where(\"details.policyId\", \"==\", policyId),\r\n        orderBy(\"details.readableAssetName\"),\r\n        startAfter(lastVisible?.details?.readableAssetName ?? \"\"),\r\n        limit(count)\r\n      );\r\n\r\n      const snapshot = await getDocs(reference);\r\n\r\n      if (snapshot.empty || snapshot.docs.length < count) {\r\n        const assetIds = await getMintedAssets(policyId, { page, count });\r\n        return await getAssets(assetIds);\r\n      } else {\r\n        return snapshot.docs.map((doc) => doc.data());\r\n      }\r\n    }\r\n    return [];\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getCollectionAssets. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(\"COULD_NOT_RETRIEVE_COLLECTION_ASSETS_FROM_DB\");\r\n  }\r\n};\r\n\r\n/**\r\n * @param {string} address - address needs to be in bech32 format.\r\n * @throws COULD_NOT_SAVE_ASSET_TO_DB\r\n */\r\nexport const lockAsset = async (\r\n  asset,\r\n  { datum, datumHash, txHash, address, artistAddress, contractVersion }\r\n) => {\r\n  if (\r\n    asset &&\r\n    datum &&\r\n    datumHash &&\r\n    txHash &&\r\n    address &&\r\n    artistAddress &&\r\n    contractVersion\r\n  ) {\r\n    const assetUpdated = {\r\n      ...asset,\r\n      status: {\r\n        datum,\r\n        datumHash,\r\n        locked: true,\r\n        txHash,\r\n        artistAddress,\r\n        contractVersion,\r\n        submittedBy: address,\r\n        submittedOn: new Date().getTime(),\r\n      },\r\n    };\r\n    await saveAsset(assetUpdated);\r\n    return assetUpdated;\r\n  }\r\n  return asset;\r\n};\r\n\r\n/**\r\n * @param {string} address - address needs to be in bech32 format.\r\n * @throws COULD_NOT_SAVE_ASSET_TO_DB\r\n */\r\nexport const unlockAsset = async (asset, { txHash, address }) => {\r\n  if (asset && txHash && address) {\r\n    const assetUpdated = {\r\n      ...asset,\r\n      status: {\r\n        locked: false,\r\n        txHash,\r\n        submittedBy: address,\r\n        submittedOn: new Date().getTime(),\r\n      },\r\n    };\r\n    await saveAsset(assetUpdated);\r\n    return assetUpdated;\r\n  }\r\n  return asset;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_RETRIEVE_LOCKED_ASSETS_FROM_DB\r\n */\r\nexport const getLockedAssets = async (count = 100, lastVisible) => {\r\n  try {\r\n    const reference = await query(\r\n      collection(firestore, \"assets\"),\r\n      where(\"status.locked\", \"==\", true),\r\n      orderBy(\"status.submittedOn\"),\r\n      startAfter(lastVisible?.status?.submittedOn ?? 0),\r\n      limit(count)\r\n    );\r\n\r\n    const snapshot = await getDocs(reference);\r\n\r\n    if (snapshot.empty) return [];\r\n    return snapshot.docs.map((doc) => doc.data());\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getLockedAssets. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(\"COULD_NOT_RETRIEVE_LOCKED_ASSETS_FROM_DB\");\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_ASSET_TO_DB\r\n */\r\nexport const saveAsset = async (asset) => {\r\n  try {\r\n    if (asset) {\r\n      const reference = doc(firestore, \"assets\", asset.details.asset);\r\n      await setDoc(reference, asset, { merge: true });\r\n    }\r\n  } catch (error) {\r\n    console.error(`Unexpected error in saveAsset. [Message: ${error.message}]`);\r\n    throw new Error(\"COULD_NOT_SAVE_ASSET_TO_DB\");\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_ASSET_TO_DB\r\n */\r\nexport const saveAssets = async (assets) => {\r\n  if (assets) {\r\n    await Promise.all(\r\n      assets.map(async (asset) => {\r\n        await saveAsset(asset);\r\n      })\r\n    );\r\n  }\r\n};\r\n","import { doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nexport const getCollection = async (policyId) => {\r\n  try {\r\n    if (policyId) {\r\n      const reference = doc(firestore, \"collections\", policyId);\r\n\r\n      const snapshot = await getDoc(reference);\r\n\r\n      if (snapshot.exists()) {\r\n        return snapshot.data();\r\n      } else {\r\n        const collection = { verified: false };\r\n\r\n        //await saveCollection(collection, policyId);\r\n\r\n        return collection;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in getCollection. [Message: ${error.message}]`\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveCollection = async (collection, policyId) => {\r\n  try {\r\n    if (collection) {\r\n      const reference = doc(firestore, \"collections\", policyId);\r\n\r\n      await setDoc(reference, collection, { merge: true });\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in saveCollection. [Message: ${error.message}]`\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * @param {string} address - address needs to be in bech32 format.\r\n */\r\nexport const setCollectionCreator = async (address, percentage, policyId) => {\r\n  if (address && percentage) {\r\n    await saveCollection({ royalties: { address, percentage } }, policyId);\r\n  }\r\n};\r\n\r\nexport const setCollectionStatus = async (verified: Boolean, policyId) => {\r\n  await saveCollection({ verified }, policyId);\r\n};\r\n","import { doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nexport const walletExists = async (address) => {\r\n  if (address) {\r\n    const reference = doc(firestore, \"wallets\", address);\r\n    const snapshot = await getDoc(reference);\r\n    return snapshot.exists();\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * @param {string} address - address needs to be in bech32 format.\r\n * @throws COULD_NOT_RETRIEVE_WALLET_FROM_DB\r\n */\r\nexport const getWallet = async (address) => {\r\n  try {\r\n    if (address) {\r\n      const reference = doc(firestore, \"wallets\", address);\r\n      const snapshot = await getDoc(reference);\r\n      if (snapshot.exists()) {\r\n        return snapshot.data();\r\n      } else {\r\n        const wallet = {\r\n          address,\r\n          assets: {},\r\n          events: [],\r\n          market: {},\r\n          offers: [],\r\n        };\r\n        await saveWallet(wallet, address);\r\n        return wallet;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(`Unexpected error in getWallet. [Message: ${error.message}]`);\r\n    throw new Error(\"COULD_NOT_RETRIEVE_WALLET_FROM_DB\");\r\n  }\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const addWalletAsset = async (wallet, newAsset) => {\r\n  if (wallet && newAsset) {\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      assets: {\r\n        ...wallet.assets,\r\n        [newAsset.details.asset]: newAsset,\r\n      },\r\n    };\r\n    await saveWallet(updatedWallet);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const addWalletEvent = async (wallet, newEvent) => {\r\n  if (wallet && newEvent) {\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      events: [...wallet.events, newEvent],\r\n    };\r\n    await saveWallet(updatedWallet);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const addWalletOffer = async (wallet, newOffer) => {\r\n  if (wallet && newOffer) {\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      offers: [...wallet.offers, newOffer],\r\n    };\r\n    await saveWallet(updatedWallet);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const setWalletAssets = async (wallet, assets) => {\r\n  if (wallet && assets) {\r\n    const updatedWallet = { ...wallet, assets: assets };\r\n    await saveWallet(updatedWallet);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const setWalletEvents = async (wallet, events) => {\r\n  if (wallet && events) {\r\n    const updatedWallet = { ...wallet, events };\r\n    await saveWallet(updatedWallet);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const setWalletOffers = async (wallet, offers) => {\r\n  if (wallet && offers) {\r\n    const updatedWallet = { ...wallet, offers };\r\n    await saveWallet(updatedWallet);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const listWalletAsset = async (wallet, walletAsset, newEvent) => {\r\n  if (wallet && walletAsset && newEvent) {\r\n    const { [walletAsset.details.asset]: _, ...updatedAssets } = wallet.assets;\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      assets: updatedAssets,\r\n      events: [...wallet.events, newEvent],\r\n      market: {\r\n        ...wallet.market,\r\n        [walletAsset.details.asset]: walletAsset,\r\n      },\r\n    };\r\n    await saveWallet(updatedWallet, false);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const delistWalletAsset = async (wallet, listedAsset, newEvent) => {\r\n  if (wallet && wallet.market && listedAsset && newEvent) {\r\n    const { [listedAsset.details.asset]: _, ...updatedMarket } = wallet.market;\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      assets: {\r\n        ...wallet.assets,\r\n        [listedAsset.details.asset]: listedAsset,\r\n      },\r\n      events: [...wallet.events, newEvent],\r\n      market: updatedMarket,\r\n    };\r\n    await saveWallet(updatedWallet, false);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const relistWalletAsset = async (wallet, listedAsset, newEvent) => {\r\n  if (wallet && wallet.market && listedAsset && newEvent) {\r\n    const { [listedAsset.details.asset]: _, ...updatedMarket } = wallet.market;\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      events: [...wallet.events, newEvent],\r\n      market: {\r\n        ...updatedMarket,\r\n        [listedAsset.details.asset]: listedAsset,\r\n      },\r\n    };\r\n    await saveWallet(updatedWallet);\r\n    return updatedWallet;\r\n  }\r\n  return wallet;\r\n};\r\n\r\n/**\r\n * @throws COULD_NOT_SAVE_WALLET_TO_DB\r\n */\r\nexport const saveWallet = async (wallet, merge = true) => {\r\n  try {\r\n    if (wallet) {\r\n      const reference = doc(firestore, \"wallets\", wallet.address);\r\n      await setDoc(reference, wallet, { merge });\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in saveWallet. [Message: ${error.message}]`\r\n    );\r\n    throw new Error(\"COULD_NOT_SAVE_WALLET_TO_DB\");\r\n  }\r\n};\r\n","import * as types from \"./walletTypes\";\r\n\r\nexport function walletConnected(payload) {\r\n  return {\r\n    type: types.WALLET_CONNECTED,\r\n    payload: payload\r\n  };\r\n}\r\nexport function setWalletNetwork(payload) {\r\n  return {\r\n    type: types.SET_WALLET_NETWORK,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setWalletUsedAddr(payload) {\r\n  return {\r\n    type: types.SET_WALLET_USEADDR,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setWalletRewardAddr(payload) {\r\n  return {\r\n    type: types.SET_WALLET_REWARDADDR,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setWalletBalance(payload) {\r\n  return {\r\n    type: types.SET_WALLET_BALANCE,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setWalletUtxos(payload) {\r\n  return {\r\n    type: types.SET_WALLET_UTXOS,\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport function setWalletLoading(payload) {\r\n  return {\r\n    type: types.SET_WALLET_LOADING,\r\n    payload: payload,\r\n  };\r\n}\r\n\r\n// export function setWalletAssets(payload) {\r\n//   return {\r\n//     type: types.SET_WALLET_ASSETS,\r\n//     payload: payload,\r\n//   };\r\n// }\r\n\r\nexport function setWalletData(payload) {\r\n  return {\r\n    type: types.SET_WALLET_DATA,\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport function addWalletAsset(payload) {\r\n  return {\r\n    type: types.ADD_WALLET_ASSET,\r\n    payload: payload,\r\n  };\r\n}","import * as types from \"./errorTypes\";\r\n\r\nexport function set_error(payload) {\r\n  return {\r\n    type: types.SET_ERROR,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function clear_error() {\r\n  return {\r\n    type: types.CLEAR_ERROR\r\n  };\r\n}\r\n","import * as types from \"./collectionTypes\";\r\n\r\nexport function collections_loaded(payload) {\r\n  return {\r\n    type: types.COLLECTIONS_LOADED,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function collections_add_tokens(payload) {\r\n  return {\r\n    type: types.COLLECTIONS_ADD_TOKENS,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function collections_loading(payload) {\r\n  return {\r\n    type: types.COLLECTIONS_LOADING,\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport function collections_top_projects(payload) {\r\n  return {\r\n    type: types.COLLECTIONS_TOP_PROJECTS,\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport function collections_add_assets(payload) {\r\n  return {\r\n    type: types.COLLECTIONS_ADD_ASSETS,\r\n    payload: payload,\r\n  };\r\n}\r\n","import Cardano from \"../cardano/serialization-lib\";\r\nimport { toHex, toLovelace } from \"./converter\";\r\n\r\nexport const createDatum = (\r\n  tokenName,\r\n  currencySymbol,\r\n  sellerAddress,\r\n  royaltiesAddress,\r\n  royaltiesPercentage,\r\n  price\r\n) => {\r\n  if (\r\n    tokenName &&\r\n    currencySymbol &&\r\n    sellerAddress &&\r\n    royaltiesAddress &&\r\n    royaltiesPercentage !== undefined &&\r\n    price\r\n  ) {\r\n    return {\r\n      tn: tokenName,\r\n      cs: currencySymbol,\r\n      sa: getAddressKeyHash(sellerAddress),\r\n      ra: getAddressKeyHash(royaltiesAddress),\r\n      rp: royaltiesPercentage ? royaltiesPercentage : 0,\r\n      price: toLovelace(price),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * @param {string} byWallet - a wallet address needs to be in bech32 format.\r\n */\r\nexport const createEvent = (action, datum, txHash, byWallet) => {\r\n  if (action && datum && txHash && byWallet) {\r\n    return {\r\n      action,\r\n      datum,\r\n      txHash,\r\n      submittedBy: byWallet,\r\n      submittedOn: new Date().getTime(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * @param {string} byWallet - a wallet address needs to be in bech32 format.\r\n */\r\nexport const createOffer = (byWallet, forAsset, value) => {\r\n  if (byWallet && forAsset && value) {\r\n    return {\r\n      by: byWallet,\r\n      for: forAsset,\r\n      on: new Date().getTime(),\r\n      value,\r\n    };\r\n  }\r\n};\r\n\r\nconst getAddressKeyHash = (address) => {\r\n  return toHex(\r\n    Cardano.Instance.BaseAddress.from_address(\r\n      Cardano.Instance.Address.from_bech32(address)\r\n    )\r\n      .payment_cred()\r\n      .to_keyhash()\r\n      .to_bytes()\r\n  );\r\n};\r\n","export const resolveError = (errorType, eventName) => {\r\n  switch (errorType) {\r\n    case \"COULD_NOT_RETRIEVE_ASSET_FROM_DB\":\r\n    case \"COULD_NOT_RETRIEVE_COLLECTION_ASSETS_FROM_DB\":\r\n    case \"COULD_NOT_RETRIEVE_LOCKED_ASSETS_FROM_DB\":\r\n      return `An error occurred during ${eventName}. Asset details couldn't be retrieved.`;\r\n\r\n    case \"COULD_NOT_SAVE_ASSET_TO_DB\":\r\n      return `An error occurred during ${eventName}. Asset details couldn't be saved.`;\r\n\r\n    case \"COULD_NOT_RETRIEVE_WALLET_FROM_DB\":\r\n      return `An error occurred during ${eventName}. Account details couldn't be retrieved.`;\r\n\r\n    case \"COULD_NOT_SAVE_WALLET_TO_DB\":\r\n      return `An error occurred during ${eventName}. Account details couldn't be saved.`;\r\n\r\n    case \"TRANSACTION_FAILED_SO_MANY_UTXOS\":\r\n      return `An error occurred during ${eventName}. So many UTXOs [Please try again].`;\r\n\r\n    case \"TRANSACTION_FAILED_NOT_ENOUGH_FUNDS\":\r\n      return `An error occurred during ${eventName}. Not enough funds.`;\r\n\r\n    case \"TRANSACTION_FAILED_CHANGE_TOO_SMALL\":\r\n      return `An error occurred during ${eventName}. Change too small [Please try again].`;\r\n\r\n    case \"TRANSACTION_FAILED_MAX_TX_SIZE_REACHED\":\r\n      return `An error occurred during ${eventName}. Max transaction size reached [Please try again].`;\r\n\r\n    case \"TRANSACTION_FAILED_DATUMS_NOT_MATCHING\":\r\n    case \"TRANSACTION_FAILED_WRONG_SCRIPT_CONTRACT\":\r\n      return `An error occurred during ${eventName}. Transaction details are corrupted [Please Contact Us].`;\r\n\r\n    case \"TRANSACTION_FAILED_ASSET_NOT_SPENDABLE\":\r\n      return `An error occurred during ${eventName}. Please try again later.`;\r\n\r\n    case \"TRANSACTION_FAILED\":\r\n      return `An error occurred during ${eventName}. The transaction could not be submitted [Please try again].`;\r\n    \r\n    case \"TRANSACTION_NOT_CONFIRMED\":\r\n      return `Transaction not fully confirmed yet. Please try again later.`;\r\n\r\n    default:\r\n      return `An error occurred during ${eventName}. Please try again later.`;\r\n  }\r\n};\r\n","import Cardano from \"../../cardano/serialization-lib\";\r\nimport Wallet from \"../../cardano/wallet\";\r\nimport {\r\n  getAssets,\r\n  lockAsset,\r\n  unlockAsset,\r\n  addAssetEvent,\r\n} from \"../../database/assets\";\r\nimport { getCollection } from \"../../database/collections\";\r\nimport {\r\n  getWallet,\r\n  addWalletEvent,\r\n  listWalletAsset,\r\n  delistWalletAsset,\r\n  relistWalletAsset,\r\n  walletExists,\r\n} from \"../../database/wallets\";\r\nimport { WALLET_STATE, MARKET_TYPE } from \"./walletTypes\";\r\nimport {\r\n  walletConnected,\r\n  setWalletLoading,\r\n  setWalletData,\r\n} from \"./walletActions\";\r\nimport { set_error } from \"../error/errorActions\";\r\nimport {\r\n  listAsset,\r\n  updateListing,\r\n  cancelListing,\r\n  purchaseAsset,\r\n} from \"../../cardano/market-contract/\";\r\nimport { contractAddress } from \"../../cardano/market-contract/validator\";\r\nimport {\r\n  createTxUnspentOutput,\r\n  serializeTxUnspentOutput,\r\n  valueToAssets,\r\n} from \"../../cardano/transaction\";\r\nimport { getLockedUtxosByAsset } from \"../../cardano/blockfrost-api\";\r\nimport { collections_add_tokens } from \"../collection/collectionActions\";\r\nimport { fromBech32 } from \"../../utils/converter\";\r\nimport { createEvent, createDatum } from \"../../utils/factory\";\r\nimport { resolveError } from \"../../utils/resolver\";\r\n\r\nexport const availableWallets = (callback) => async (dispatch) => {\r\n  await Cardano.load();\r\n\r\n  callback({\r\n    success: true,\r\n    wallets: await Wallet.getAvailableWallets(),\r\n    msg: \"\",\r\n  });\r\n};\r\n\r\nexport const connectWallet = (provider, callback) => async (dispatch) => {\r\n  try {\r\n    dispatch(setWalletLoading(WALLET_STATE.CONNECTING));\r\n\r\n    if (await Wallet.enable(provider)) {\r\n      const usedNetworkId = parseInt(process.env.REACT_APP_CARDANO_NETWORK_ID);\r\n      const walletNetworkId = await Wallet.getNetworkId();\r\n\r\n      if (usedNetworkId === walletNetworkId) {\r\n        const usedAddresses = await Wallet.getUsedAddresses();\r\n        const walletAddress = await getWalletAddress(usedAddresses);\r\n\r\n        const connectedWallet = {\r\n          provider: {\r\n            network: walletNetworkId,\r\n            collateral: await Wallet.getCollateral(),\r\n          },\r\n          data: await getWallet(walletAddress),\r\n        };\r\n\r\n        dispatch(walletConnected(connectedWallet));\r\n        callback({\r\n          success: true,\r\n          data: connectedWallet,\r\n        });\r\n      } else {\r\n        dispatch(setWalletLoading(false));\r\n        callback({\r\n          success: false,\r\n          msg: \"Please switch your Nami Wallet's Network.\",\r\n        });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in connectWallet. [Message: ${error.message}]`\r\n    );\r\n    dispatch(setWalletLoading(false));\r\n    callback({\r\n      success: false,\r\n      msg: \"Wallet Could not Connect, Please try Again.\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const loadAssets = (wallet, callback) => async (dispatch) => {\r\n  try {\r\n    dispatch(setWalletLoading(WALLET_STATE.GETTING_ASSETS));\r\n\r\n    const walletAssets = await getWalletAssets();\r\n\r\n    const assets = (await getAssets(walletAssets)).reduce((map, asset) => {\r\n      map[asset.details.asset] = asset;\r\n      return map;\r\n    }, {});\r\n\r\n    dispatch(\r\n      setWalletData({\r\n        ...wallet.data,\r\n        assets,\r\n      })\r\n    );\r\n\r\n    callback({ success: true });\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in loadAssets. [Message: ${error.message}]`\r\n    );\r\n    dispatch(setWalletLoading(false));\r\n    callback({ success: false, error });\r\n    dispatch(\r\n      set_error({\r\n        message: resolveError(error.message, \"Loading Wallet Assets\"),\r\n        detail: error,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const listToken =\r\n  (wallet, asset, price, callback) => async (dispatch) => {\r\n    try {\r\n      dispatch(setWalletLoading(WALLET_STATE.AWAITING_SIGNATURE));\r\n\r\n      const collectionDetails = await getCollection(asset.details.policyId);\r\n      const walletUtxos = await Wallet.getUtxos();\r\n\r\n      const royaltiesAddress =\r\n        collectionDetails?.royalties?.address ?? wallet.data.address;\r\n      const royaltiesPercentage = collectionDetails?.royalties?.percentage ?? 0;\r\n\r\n      const datum = createDatum(\r\n        asset.details.assetName,\r\n        asset.details.policyId,\r\n        wallet.data.address,\r\n        royaltiesAddress,\r\n        royaltiesPercentage,\r\n        price\r\n      );\r\n\r\n      const contractVersion = process.env.REACT_APP_MARTIFY_CONTRACT_VERSION;\r\n\r\n      const listObj = await listAsset(\r\n        datum,\r\n        {\r\n          address: fromBech32(wallet.data.address),\r\n          utxos: walletUtxos,\r\n        },\r\n        contractVersion\r\n      );\r\n\r\n      if (listObj && listObj.datumHash && listObj.txHash) {\r\n        const updatedAsset = await lockAsset(asset, {\r\n          datum: datum,\r\n          datumHash: listObj.datumHash,\r\n          txHash: listObj.txHash,\r\n          address: wallet.data.address,\r\n          artistAddress: royaltiesAddress,\r\n          contractVersion,\r\n        });\r\n\r\n        const event = createEvent(\r\n          MARKET_TYPE.NEW_LISTING,\r\n          datum,\r\n          listObj.txHash,\r\n          wallet.data.address\r\n        );\r\n\r\n        const updatedWallet = await listWalletAsset(\r\n          wallet.data,\r\n          updatedAsset,\r\n          event\r\n        );\r\n\r\n        const output = {\r\n          policy_id: updatedAsset.details.policyId,\r\n          listing: {\r\n            [updatedAsset.details.asset]: updatedAsset,\r\n          },\r\n        };\r\n\r\n        dispatch(setWalletLoading(false));\r\n        dispatch(setWalletData(updatedWallet));\r\n        dispatch(collections_add_tokens(output));\r\n        callback({ success: true, type: MARKET_TYPE.NEW_LISTING });\r\n      } else {\r\n        callback({ success: false });\r\n        dispatch(setWalletLoading(false));\r\n        dispatch(\r\n          set_error({\r\n            message: resolveError(\"TRANSACTION_FAILED\", \"Listing Asset\"),\r\n            detail: null,\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        `Unexpected error in listToken. [Message: ${error.message}]`\r\n      );\r\n      callback({ success: false });\r\n      dispatch(setWalletLoading(false));\r\n      dispatch(\r\n        set_error({\r\n          message: resolveError(error.message, \"Listing Asset\"),\r\n          detail: error,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\nexport const relistToken =\r\n  (wallet, asset, price, callback) => async (dispatch) => {\r\n    try {\r\n      dispatch(setWalletLoading(WALLET_STATE.AWAITING_SIGNATURE));\r\n\r\n      const walletUtxos = await Wallet.getUtxos();\r\n      const currentVersion = resolveContractVersion(asset);\r\n      const latestVersion = process.env.REACT_APP_MARTIFY_CONTRACT_VERSION;\r\n\r\n      const assetUtxo = (\r\n        await getLockedUtxosByAsset(\r\n          contractAddress(currentVersion).to_bech32(),\r\n          asset.details.asset\r\n        )\r\n      ).find((utxo) => utxo.data_hash === asset.status.datumHash);\r\n\r\n      if (assetUtxo) {\r\n        const datumNew = createDatum(\r\n          asset.status.datum.tn,\r\n          asset.status.datum.cs,\r\n          wallet.data.address,\r\n          asset.status.artistAddress,\r\n          asset.status.datum.rp,\r\n          price\r\n        );\r\n        const updateObj = await updateListing(\r\n          asset.status.datum,\r\n          datumNew,\r\n          {\r\n            address: fromBech32(wallet.data.address),\r\n            utxos: walletUtxos,\r\n          },\r\n          createTxUnspentOutput(contractAddress(currentVersion), assetUtxo),\r\n          currentVersion,\r\n          latestVersion\r\n        );\r\n\r\n        if (updateObj && updateObj.datumHash && updateObj.txHash) {\r\n          const updatedAsset = await lockAsset(asset, {\r\n            datum: datumNew,\r\n            datumHash: updateObj.datumHash,\r\n            txHash: updateObj.txHash,\r\n            address: wallet.data.address,\r\n            artistAddress: asset.status.artistAddress,\r\n            contractVersion: latestVersion,\r\n          });\r\n\r\n          const event = createEvent(\r\n            MARKET_TYPE.PRICE_UPDATE,\r\n            datumNew,\r\n            updateObj.txHash,\r\n            wallet.data.address\r\n          );\r\n\r\n          const updatedWallet = await relistWalletAsset(\r\n            wallet.data,\r\n            updatedAsset,\r\n            event\r\n          );\r\n\r\n          const output = {\r\n            policy_id: asset.details.policyId,\r\n            listing: {\r\n              [updatedAsset.details.asset]: updatedAsset,\r\n            },\r\n          };\r\n\r\n          dispatch(setWalletLoading(false));\r\n          dispatch(setWalletData(updatedWallet));\r\n          dispatch(collections_add_tokens(output));\r\n          callback({ success: true, type: MARKET_TYPE.PRICE_UPDATE });\r\n        } else {\r\n          callback({ success: false });\r\n          dispatch(setWalletLoading(false));\r\n          dispatch(\r\n            set_error({\r\n              message: resolveError(\r\n                \"TRANSACTION_FAILED\",\r\n                \"Updating Asset Price\"\r\n              ),\r\n              detail: null,\r\n            })\r\n          );\r\n        }\r\n      } else {\r\n        callback({ success: false });\r\n        dispatch(setWalletLoading(false));\r\n        dispatch(\r\n          set_error({\r\n            message: resolveError(\r\n              \"TRANSACTION_NOT_CONFIRMED\",\r\n              \"Updating Asset Price\"\r\n            ),\r\n            detail: null,\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        `Unexpected error in relistToken. [Message: ${error.message}]`\r\n      );\r\n      callback({ success: false });\r\n      dispatch(setWalletLoading(false));\r\n      dispatch(\r\n        set_error({\r\n          message: resolveError(error.message, \"Updating Asset Price\"),\r\n          detail: error,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\nexport const delistToken = (wallet, asset, callback) => async (dispatch) => {\r\n  try {\r\n    dispatch(setWalletLoading(WALLET_STATE.AWAITING_SIGNATURE));\r\n\r\n    const walletUtxos = await Wallet.getUtxos();\r\n    const contractVersion = resolveContractVersion(asset);\r\n\r\n    const assetUtxo = (\r\n      await getLockedUtxosByAsset(\r\n        contractAddress(contractVersion).to_bech32(),\r\n        asset.details.asset\r\n      )\r\n    ).find((utxo) => utxo.data_hash === asset.status.datumHash);\r\n\r\n    if (assetUtxo) {\r\n      const txHash = await cancelListing(\r\n        asset.status.datum,\r\n        {\r\n          address: fromBech32(wallet.data.address),\r\n          utxos: walletUtxos,\r\n        },\r\n        createTxUnspentOutput(contractAddress(contractVersion), assetUtxo),\r\n        contractVersion\r\n      );\r\n\r\n      if (txHash) {\r\n        const updatedAsset = await unlockAsset(asset, {\r\n          txHash: txHash,\r\n          address: wallet.data.address,\r\n        });\r\n\r\n        const event = createEvent(\r\n          MARKET_TYPE.DELIST,\r\n          asset.status.datum,\r\n          txHash,\r\n          wallet.data.address\r\n        );\r\n\r\n        const updatedWallet = await delistWalletAsset(\r\n          wallet.data,\r\n          updatedAsset,\r\n          event\r\n        );\r\n\r\n        const output = {\r\n          policy_id: updatedAsset.details.policyId,\r\n          listing: {\r\n            [updatedAsset.details.asset]: updatedAsset,\r\n          },\r\n        };\r\n\r\n        dispatch(setWalletLoading(false));\r\n        dispatch(setWalletData(updatedWallet));\r\n        dispatch(collections_add_tokens(output));\r\n        callback({ success: true, type: MARKET_TYPE.DELIST });\r\n      } else {\r\n        callback({ success: false });\r\n        dispatch(setWalletLoading(false));\r\n        dispatch(\r\n          set_error({\r\n            message: resolveError(\"TRANSACTION_FAILED\", \"Unlisting Asset\"),\r\n            detail: null,\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      callback({ success: false });\r\n      dispatch(setWalletLoading(false));\r\n      dispatch(\r\n        set_error({\r\n          message: resolveError(\"TRANSACTION_NOT_CONFIRMED\", \"Unlisting Asset\"),\r\n          detail: null,\r\n        })\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in delistToken. [Message: ${error.message}]`\r\n    );\r\n    callback({ success: false });\r\n    dispatch(setWalletLoading(false));\r\n    dispatch(\r\n      set_error({\r\n        message: resolveError(error.message, \"Unlisting Asset\"),\r\n        detail: error,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const purchaseToken = (wallet, asset, callback) => async (dispatch) => {\r\n  try {\r\n    dispatch(setWalletLoading(WALLET_STATE.AWAITING_SIGNATURE));\r\n\r\n    const walletUtxos = await Wallet.getUtxos();\r\n    const contractVersion = resolveContractVersion(asset);\r\n\r\n    const assetUtxo = (\r\n      await getLockedUtxosByAsset(\r\n        contractAddress(contractVersion).to_bech32(),\r\n        asset.details.asset\r\n      )\r\n    ).find((utxo) => utxo.data_hash === asset.status.datumHash);\r\n\r\n    if (assetUtxo) {\r\n      const txHash = await purchaseAsset(\r\n        asset.status.datum,\r\n        {\r\n          address: fromBech32(wallet.data.address),\r\n          utxos: walletUtxos,\r\n        },\r\n        {\r\n          seller: fromBech32(asset.status.submittedBy),\r\n          artist: fromBech32(asset.status.artistAddress),\r\n          market: fromBech32(process.env.REACT_APP_MARTIFY_ADDRESS),\r\n        },\r\n        createTxUnspentOutput(contractAddress(contractVersion), assetUtxo),\r\n        contractVersion\r\n      );\r\n\r\n      if (txHash) {\r\n        const unlockedAsset = await unlockAsset(asset, {\r\n          txHash: txHash,\r\n          address: wallet.data.address,\r\n        });\r\n\r\n        const event = createEvent(\r\n          MARKET_TYPE.PURCHASE,\r\n          asset.status.datum,\r\n          txHash,\r\n          wallet.data.address\r\n        );\r\n\r\n        const updatedWallet = await addWalletEvent(wallet.data, event);\r\n        const updatedAsset = await addAssetEvent(unlockedAsset, event);\r\n\r\n        // Update the seller's wallet\r\n        const sellerWalletObj = await getWallet(asset.status.submittedBy);\r\n\r\n        const soldEvent = createEvent(\r\n          MARKET_TYPE.SOLD,\r\n          asset.status.datum,\r\n          txHash,\r\n          wallet.data.address\r\n        );\r\n\r\n        await delistWalletAsset(sellerWalletObj, updatedAsset, soldEvent);\r\n        // ----------------------------------------\r\n\r\n        const output = {\r\n          policy_id: asset.details.policyId,\r\n          listing: {\r\n            [updatedAsset.details.asset]: updatedAsset,\r\n          },\r\n        };\r\n\r\n        dispatch(setWalletLoading(false));\r\n        dispatch(setWalletData(updatedWallet));\r\n        dispatch(collections_add_tokens(output));\r\n        callback({ success: true, type: MARKET_TYPE.PURCHASE });\r\n      } else {\r\n        callback({ success: false });\r\n        dispatch(setWalletLoading(false));\r\n        dispatch(\r\n          set_error({\r\n            message: resolveError(\"TRANSACTION_FAILED\", \"Purchasing Asset\"),\r\n            detail: null,\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      callback({ success: false });\r\n      dispatch(setWalletLoading(false));\r\n      dispatch(\r\n        set_error({\r\n          message: resolveError(\r\n            \"TRANSACTION_NOT_CONFIRMED\",\r\n            \"Purchasing Asset\"\r\n          ),\r\n          detail: null,\r\n        })\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Unexpected error in purchaseToken. [Message: ${error.message}]`\r\n    );\r\n    callback({ success: false });\r\n    dispatch(setWalletLoading(false));\r\n    dispatch(\r\n      set_error({\r\n        message: resolveError(error.message, \"Purchasing Asset\"),\r\n        detail: error,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nconst getWalletAddress = async (usedAddresses) => {\r\n  if (usedAddresses.length > 1) {\r\n    for (const address of usedAddresses) {\r\n      if (await walletExists(address)) return address;\r\n    }\r\n  }\r\n\r\n  return usedAddresses[0];\r\n};\r\n\r\nconst getWalletAssets = async () => {\r\n  const utxos = await Wallet.getUtxos();\r\n\r\n  const nativeAssets = utxos\r\n    .map((utxo) => serializeTxUnspentOutput(utxo).output())\r\n    .filter((txOut) => txOut.amount().multiasset() !== undefined)\r\n    .map((txOut) => valueToAssets(txOut.amount()))\r\n    .flatMap((assets) =>\r\n      assets\r\n        .filter((asset) => asset.unit !== \"lovelace\")\r\n        .map((asset) => asset.unit)\r\n    );\r\n\r\n  return [...new Set(nativeAssets)];\r\n};\r\n\r\nconst resolveContractVersion = (asset) => {\r\n  if (asset.status.contractVersion) {\r\n    return asset.status.contractVersion;\r\n  }\r\n  return \"v1\";\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  availableWallets,\r\n  connectWallet,\r\n  loadAssets,\r\n} from \"../../store/wallet/api\";\r\nimport { WALLET_STATE } from \"../../store/wallet/walletTypes\";\r\nimport { FadeImg } from \"components/Fades\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst wallets = {\r\n  ccvault: {\r\n    title: \"ccvault.io\",\r\n    image: \"/images/wallets/ccvault.png\",\r\n  },\r\n  gerowallet: {\r\n    title: \"GeroWallet\",\r\n    image: \"/images/wallets/gero.png\",\r\n  },\r\n  nami: {\r\n    title: \"Nami\",\r\n    image: \"/images/wallets/nami.svg\",\r\n  },\r\n};\r\n\r\nconst ButtonConnect = ({\r\n  state_wallet,\r\n  availableWallets,\r\n  connectWallet,\r\n  loadAssets,\r\n}) => {\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [showNotificationMessage, setShowNotificationMessage] = useState(false);\r\n  const [showWallets, setShowWallets] = useState(false);\r\n\r\n  function onclick_connect_wallet() {\r\n    availableWallets((res) => {\r\n      if (res.wallets.length === 0) {\r\n        setShowNotification(\"no-wallet\");\r\n      } else if (res.wallets.length === 1) {\r\n        connect_wallet(res.wallets[0]);\r\n      } else if (res.wallets.length > 1) {\r\n        setShowWallets(res.wallets);\r\n      }\r\n    });\r\n  }\r\n\r\n  function connect_wallet(wallet_name) {\r\n    setShowWallets(false);\r\n    connectWallet(wallet_name, (res) => {\r\n      if (!res.success) {\r\n        setShowNotificationMessage(res.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state_wallet.loading) {\r\n      if (\r\n        [\r\n          \"no-wallet\",\r\n          \"no-accept\",\r\n          \"connected\",\r\n          WALLET_STATE.CONNECTING,\r\n          WALLET_STATE.GETTING_ASSETS,\r\n        ].includes(state_wallet.loading)\r\n      )\r\n        setShowNotification(state_wallet.loading);\r\n    } else {\r\n      setShowNotification(false);\r\n    }\r\n\r\n    if (\r\n      state_wallet.connected &&\r\n      !state_wallet.loading &&\r\n      !state_wallet.loaded_assets\r\n    ) {\r\n      loadAssets(state_wallet, (res) => {});\r\n    }\r\n  }, [loadAssets, state_wallet]);\r\n\r\n  function clear_notification() {\r\n    setShowNotification(false);\r\n    setShowNotificationMessage(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!state_wallet.connected ? (\r\n        <button\r\n          className={\r\n            \"button is-rounded is-info\" +\r\n            (state_wallet.loading ? \" is-loading\" : \"\")\r\n          }\r\n          disabled={state_wallet.loading}\r\n          onClick={() => onclick_connect_wallet()}\r\n        >\r\n          <span>Connect</span>\r\n        </button>\r\n      ) : (\r\n        <Link className=\"button is-rounded is-info\" to=\"/account\">\r\n          <span>Account</span>\r\n        </Link>\r\n      )}\r\n      {showNotification || showNotificationMessage !== false ? (\r\n        <div className=\"notification-window notification is-info\">\r\n          <button\r\n            className=\"delete\"\r\n            onClick={() => clear_notification()}\r\n          ></button>\r\n          {showNotification === \"no-wallet\" ? (\r\n            <p>\r\n              No wallet installed.{\" \"}\r\n              <a href=\"https://namiwallet.io/\" target=\"_blank\" rel=\"noreferrer\">\r\n                Get it now\r\n              </a>\r\n              .\r\n            </p>\r\n          ) : showNotification === \"no-accept\" ? (\r\n            <p>You need to allow wallet access.</p>\r\n          ) : showNotification === \"connected\" ? (\r\n            <p>Wallet connected</p>\r\n          ) : showNotification === WALLET_STATE.CONNECTING ? (\r\n            <p>Connecting wallet...</p>\r\n          ) : showNotification === WALLET_STATE.GETTING_ASSETS ? (\r\n            <p>Getting assets in your wallet...</p>\r\n          ) : showNotificationMessage !== false ? (\r\n            <p>{showNotificationMessage}</p>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <div className={\"modal \" + (showWallets ? \"is-active\" : \"\")}>\r\n        <div\r\n          className=\"modal-background\"\r\n          onClick={() => setShowWallets(false)}\r\n        ></div>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title has-text-centered\">\r\n              Connect a Wallet\r\n            </p>\r\n            <button\r\n              className=\"delete\"\r\n              aria-label=\"close\"\r\n              onClick={() => setShowWallets(false)}\r\n            ></button>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            <div className=\"columns\">\r\n              {showWallets &&\r\n                showWallets.length > 0 &&\r\n                showWallets.map((name) => (\r\n                  <div\r\n                    key={name}\r\n                    className=\"card column wallet-button\"\r\n                    disabled={state_wallet.loading}\r\n                    onClick={() => connect_wallet(name)}\r\n                  >\r\n                    <div className=\"card-image\">\r\n                      <figure className=\"image\">\r\n                        <FadeImg\r\n                          alt={name}\r\n                          src={wallets[name].image}\r\n                        />\r\n                      </figure>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                      <div className=\"content\">\r\n                        <span className=\"wallet-title\">\r\n                          {wallets[name].title}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </section>\r\n          <footer className=\"modal-card-foot\"></footer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    state_wallet: state.wallet,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    availableWallets: (callback) => dispatch(availableWallets(callback)),\r\n    connectWallet: (is_silent, callback) =>\r\n      dispatch(connectWallet(is_silent, callback)),\r\n    loadAssets: (wallet, callback) => dispatch(loadAssets(wallet, callback)),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\r\n  ButtonConnect\r\n);\r\n","import React from \"react\";\r\nimport { urls } from \"../../config\";\r\n\r\nconst CollectionLinks = ({collection}) => {\r\n\r\n  const links = {\r\n    discord: {\r\n      icon: \"fab fa-discord\",\r\n      tooltip: \"Join the Discord\"\r\n    },\r\n    twitter: {\r\n      icon: \"fab fa-twitter\",\r\n      tooltip: \"Connect on Twitter\"\r\n    },\r\n    website: {\r\n      icon: \"fas fa-laptop\",\r\n      tooltip: \"Visit the website\"\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"field has-addons social-links\">\r\n      {\r\n        collection ? collection.links ? \r\n        Object.keys(collection.links).map(function (key) {\r\n          return (\r\n            <p className=\"control\" key={key}>\r\n              <a className=\"button\" href={collection.links[key]} rel=\"noreferrer\" target=\"_blank\" data-tooltip={links[key].tooltip}>\r\n                <span className=\"icon\">\r\n                  <i className={links[key].icon}></i>\r\n                </span>\r\n              </a>\r\n            </p>\r\n          )\r\n        }) : <></> : <></>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionLinks;\r\n","import React from \"react\";\r\nimport CollectionLinks from \"../CollectionLinks\";\r\n\r\nconst CollectionAbout = ({thisCollection}) => {\r\n  return (\r\n    <>\r\n    {\r\n      thisCollection ? (\r\n        <div className=\"block\">\r\n          <div className=\"card\">\r\n            <header className=\"card-header\">\r\n              <p className=\"card-header-title\">\r\n                About {thisCollection.meta.name} \r\n                {\r\n                  thisCollection.is_martify_verified ? (\r\n                    <span className=\"icon\" data-tooltip=\"Martify Verified\">\r\n                      <i className=\"fas fa-check-circle\" style={{color:\"gold\"}}></i>\r\n                    </span>\r\n                  ) : <></>\r\n                }\r\n                {\r\n                  thisCollection.is_cnft_verified ? (\r\n                    <span className=\"icon\" data-tooltip=\"CNFT Verified\">\r\n                      <i className=\"fas fa-check-circle\" style={{color:\"green\"}}></i>\r\n                    </span>\r\n                  ) : <></>\r\n                }\r\n              </p>\r\n            </header>\r\n            <div className=\"card-content\">\r\n              <div className=\"content\">\r\n                <p>{thisCollection.meta.description}</p>\r\n                {\r\n                  thisCollection.policy_ids ? (\r\n                    <>\r\n                      Policy ID:\r\n                      <pre>\r\n                        {thisCollection.policy_ids.join(\"\\n\")}\r\n                      </pre>\r\n                    </>\r\n                  ) : <></>\r\n                }\r\n              </div>\r\n              <CollectionLinks collection={thisCollection} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : <></>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollectionAbout;\r\n","import React, { useEffect, useState} from \"react\";\r\n\r\nimport {usePalette} from 'react-palette'\r\n\r\nimport CollectionLinks from \"../CollectionLinks\";\r\nimport { numFormatter, get_asset_image_source } from \"../../utils/converter\";\r\nimport { FadeImg } from \"components/Fades\";\r\n\r\nconst CollectionBanner = ({thisCollection, size, asset, is_collection_page, is_asset_page}) => {\r\n  \r\n  const [currentId, setCurrentId] = useState(false);\r\n  const [assetImgSrc, setAssetImgSrc] = useState(false);\r\n  const [assetColors, setAssetColors] = useState({});\r\n  const [bannerHeroStyle, setBannerHeroStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    if(asset && currentId!==thisCollection.id){\r\n      let imgsrc = get_asset_image_source(asset.details.onchainMetadata.image);\r\n      setAssetImgSrc(imgsrc);\r\n    }\r\n  }, [asset]);\r\n\r\n  useEffect(() => {\r\n    if(asset===undefined && (\"opencnft\" in thisCollection) && currentId!==thisCollection.id){\r\n      setCurrentId(thisCollection.id);\r\n      if(thisCollection.opencnft.length>0){\r\n        if(thisCollection.opencnft[0].thumbnail){\r\n          let imgsrc = get_asset_image_source(thisCollection.opencnft[0].thumbnail);\r\n          setAssetImgSrc(imgsrc);\r\n        }\r\n      }\r\n    }\r\n\r\n    let this_style = {};\r\n    if(thisCollection.style){\r\n      if(thisCollection.style.banner_path){\r\n        this_style.backgroundImage = `url(${thisCollection.style.banner_path})`;\r\n      }else if(assetColors){\r\n        this_style.backgroundImage = `linear-gradient(to bottom right, ${assetColors.darkMuted}, ${assetColors.darkVibrant}`;\r\n      }\r\n\r\n      if(thisCollection.style.banner_collection_height && is_collection_page){\r\n        this_style.height = thisCollection.style.banner_collection_height;\r\n      }\r\n      if(thisCollection.style.banner_asset_height && is_asset_page){\r\n        this_style.height = thisCollection.style.banner_asset_height;\r\n      }\r\n      \r\n    }else if(assetColors){\r\n      this_style.backgroundImage = `linear-gradient(to bottom right, ${assetColors.darkMuted}, ${assetColors.darkVibrant}`;\r\n    }\r\n    setBannerHeroStyle(this_style);\r\n  }, [thisCollection]);\r\n\r\n  const { data, loading, error } = usePalette(assetImgSrc?assetImgSrc:\"\");\r\n  if(assetImgSrc && !loading && Object.keys(data).length>0 && Object.keys(assetColors).length===0){\r\n    setAssetColors(data)\r\n  }\r\n  // {\r\n  //   darkMuted: \"#2a324b\"\r\n  //   darkVibrant: \"#0e7a4b\"\r\n  //   lightMuted: \"#9cceb7\"\r\n  //   lightVibrant: \"#a4d4bc\"\r\n  //   muted: \"#64aa8a\"\r\n  //   vibrant: \"#b4d43c\"\r\n  // }\r\n  return (\r\n    <section className={\"hero collection_name \" + (size!==undefined ? size : \"is-medium\")} \r\n    // style={\r\n    //   thisCollection.style ? \r\n    //     thisCollection.style.banner_path ? \r\n    //       {backgroundImage: `url(${thisCollection.style.banner_path})`} : \r\n    //     assetColors ? \r\n    //       {backgroundImage: `linear-gradient(to bottom right, ${assetColors.darkMuted}, ${assetColors.darkVibrant}`} : \r\n    //     {} : \r\n    //   assetColors ? \r\n    //     {backgroundImage: `linear-gradient(to bottom right, ${assetColors.darkMuted}, ${assetColors.darkVibrant}`} : \r\n    //   {}\r\n    // }\r\n    style={bannerHeroStyle}\r\n    >\r\n\r\n      <div className=\"hero-body\">\r\n      \r\n        <nav className=\"level\">\r\n            <div className=\"level-left\">\r\n              {\r\n                thisCollection.style ? thisCollection.style.logo_path ? (\r\n                  <div className=\"level-item\">\r\n                    <figure className=\"image is-128x128\">\r\n                      <FadeImg className=\"collection_logo is-rounded image is-128x128\" src={thisCollection.style.logo_path} alt=\"\" />\r\n                    </figure>\r\n                  </div>\r\n                ) : <></>\r\n                : <></>\r\n              }\r\n              <div className=\"level-item\">\r\n                <div className=\"collection_title\">\r\n                  {\r\n                    thisCollection.meta.name ? (\r\n                      <TitleText size=\"is-size-1\" text={thisCollection.meta.name} thisCollection={thisCollection} assetColors={assetColors} />\r\n                    ) : (\r\n                      <>\r\n                      <p className=\"title is-size-2\" style={{color: thisCollection.style ? thisCollection.style.font_color_title ? thisCollection.style.font_color_title : \"#333\" : \"#333\"}}>\r\n                      Browsing results for\r\n                      </p>\r\n                      <p className=\"title is-size-4\" style={{color: thisCollection.style ? thisCollection.style.font_color_title ? thisCollection.style.font_color_title : \"#333\" : \"#333\"}}>\r\n                        {thisCollection.policy_id}\r\n                      </p>\r\n                      </>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          <div className=\"level-right\">\r\n            {\r\n              thisCollection.opencnft ? (\r\n                <div className=\"level-item\">\r\n                  <table className=\"table is-bordered\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <div className=\"has-text-centered\">\r\n                            <div>\r\n                              <p className=\"heading has-text-weight-semibold\">Volume traded</p>\r\n                              <p className=\"is-size-4\">\r\n                                ₳{numFormatter(\r\n                                (thisCollection.opencnft.reduce(function (result, policy){\r\n                                  return result + policy.total_volume\r\n                                },0)/1000000)\r\n                                )}</p>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"has-text-centered\">\r\n                            <div>\r\n                              <p className=\"heading has-text-weight-semibold\">Floor price</p>\r\n                              <p className=\"is-size-4\">\r\n                                ₳{\r\n                                thisCollection.opencnft.reduce(function (result, policy){\r\n                                  return Math.min(result, policy.floor_price)\r\n                                },999999*1000000)/1000000}</p>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"has-text-centered\">\r\n                            <div>\r\n                              <p className=\"heading has-text-weight-semibold\">Total assets</p>\r\n                              <p className=\"is-size-4\">\r\n                                {\r\n                                  thisCollection.opencnft.reduce(function (result, policy){\r\n                                    return result + policy.asset_minted\r\n                                  },0)\r\n                                }\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"has-text-centered\">\r\n                            <div>\r\n                              <p className=\"heading has-text-weight-semibold\">Number owners</p>\r\n                              <p className=\"is-size-4\">\r\n                                {\r\n                              thisCollection.opencnft.reduce(function (result, policy){\r\n                                  return result + policy.asset_holders\r\n                                },0)\r\n                              }\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"has-text-centered\">\r\n                            <div>\r\n                              <p className=\"heading has-text-weight-semibold\">Total transactions</p>\r\n                              <p className=\"is-size-4\">\r\n                                {numFormatter(\r\n                                thisCollection.opencnft.reduce(function (result, policy){\r\n                                  return result + policy.total_tx\r\n                                },0))\r\n                                }\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : <></>\r\n            }\r\n\r\n            <div className=\"level-item\">\r\n              <CollectionLinks collection={thisCollection} />\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst TitleText = ({size, text, thisCollection, assetColors}) => {\r\n  return (\r\n    <p className={\"title \" + (size?size:\"\")} style={{color: thisCollection.style ? thisCollection.style.font_color_title ? thisCollection.style.font_color_title : \r\n      assetColors ? `#FFF` : `#FFF` : assetColors ? `#FFF` : `#FFF`}}>\r\n      {thisCollection.meta.name}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default CollectionBanner;\r\n","import React, { useState } from \"react\";\r\nimport AssetCard from \"../AssetCard\";\r\n\r\nconst ListingDisplayListing = ({ listings }) => {\r\n  // search and filter\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortby, setSortby] = useState(\"lowtohigh\");\r\n  const sort_options = [\r\n    { value: \"lowtohigh\", label: \"Price: Low to High\" },\r\n    { value: \"hightolow\", label: \"Price: High to Low\" },\r\n  ];\r\n\r\n  const searchingFor = (searchText) => {\r\n    return (x) => {\r\n      let return_this = false;\r\n\r\n      if (x.details.onchainMetadata === null) {\r\n        return false;\r\n      }\r\n\r\n      if (searchText === \"\") {\r\n        return_this = true;\r\n      } else if (\r\n        searchText !== \"\" &&\r\n        x.details.onchainMetadata.name\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase())\r\n      ) {\r\n        return_this = true;\r\n      }\r\n      return return_this;\r\n    };\r\n  };\r\n\r\n  let matchedtokens = listings.filter(searchingFor(searchText));\r\n\r\n  const filtered_listing = matchedtokens\r\n    .sort((a, b) => {\r\n      let a_price =\r\n        a.status.datum.price !== undefined ? a.status.datum.price : 999999;\r\n      let b_price =\r\n        b.status.datum.price !== undefined ? b.status.datum.price : 999999;\r\n\r\n      if (sortby === \"lowtohigh\") {\r\n        return a_price - b_price;\r\n      } else {\r\n        return b_price - a_price;\r\n      }\r\n    })\r\n    .map((this_nft, i) => {\r\n      return <AssetCard asset={this_nft} key={i} />;\r\n    });\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"field is-grouped\">\r\n        <div className=\"control has-icons-left is-expanded\">\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder={\"Search\"}\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n          />\r\n          <span className=\"icon is-small is-left\">\r\n            <i className=\"fa fa-search\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"control\">\r\n          <span className=\"select\">\r\n            <select\r\n              value={sortby}\r\n              onChange={(event) => setSortby(event.target.value)}\r\n            >\r\n              {sort_options.map((option, i) => {\r\n                return (\r\n                  <option value={option.value} key={i}>\r\n                    {option.label}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"columns is-multiline\">{filtered_listing}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListingDisplayListing;\r\n","import React, { useState } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport Fuse from 'fuse.js'\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Search = ({state_collection, size, placeholder}) => {\r\n\r\n  let data = [];\r\n  for(var collection_id in state_collection.collections){\r\n    // data.push({\r\n    //   label: state_collection.collections[collection_id].meta.name, value: collection_id\r\n    // })\r\n    let item = {\r\n      id: collection_id,\r\n      meta: state_collection.collections[collection_id].meta,\r\n      policy_ids: state_collection.collections[collection_id].policy_ids,\r\n    };\r\n    data.push(item);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const [value, setValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const options = {\r\n    // isCaseSensitive: false,\r\n    includeScore: true,\r\n    shouldSort: true,\r\n    // includeMatches: true,\r\n    // findAllMatches: true,\r\n    minMatchCharLength: 2,\r\n    // location: 0,\r\n    threshold: 0.5,\r\n    // distance: 20,\r\n    // useExtendedSearch: true,\r\n    // ignoreLocation: true,\r\n    // ignoreFieldNorpixm: false,\r\n    keys: [\r\n      {\r\n        name: 'meta.name',\r\n        weight: 2\r\n      },\r\n      {\r\n        name: 'meta.description',\r\n        weight: 0.5\r\n      },\r\n      {\r\n        name: 'policy_ids',\r\n        weight: 0.1\r\n      },\r\n    ]\r\n  };\r\n  const fuse = new Fuse(data, options);\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    // console.log(suggestion, suggestionValue, suggestionIndex, sectionIndex, method)\r\n    if(method===\"click\" || method===\"enter\"){\r\n      history.push(\"/collection/\"+suggestion.value);\r\n    }\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const getSuggestions = value => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    if(inputLength >= 2){\r\n      let selected_rows = fuse.search(inputValue);      \r\n      let filtered = [];\r\n      // let debug = [];\r\n      for(var i=0; i<Math.min(selected_rows.length,10); i++){\r\n        filtered.push({\r\n          label: selected_rows[i].item.meta.name, value: selected_rows[i].item.id\r\n        });\r\n        // debug.push(selected_rows[i]);\r\n      }\r\n      // console.log(inputValue, debug)\r\n      return filtered;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const getSuggestionValue = suggestion => suggestion.label;\r\n\r\n  // Use your imagination to render suggestions.\r\n  const renderSuggestion = suggestion => (\r\n    <div>\r\n      {suggestion.label}\r\n    </div>\r\n  );\r\n\r\n  const inputProps = {\r\n    placeholder: placeholder ? placeholder : \"Search...\",\r\n    value: value,\r\n    onChange: onChange\r\n  };\r\n  \r\n  const theme = {\r\n    container:                'react-autosuggest__container',\r\n    containerOpen:            'react-autosuggest__container--open',\r\n    input:                    \"input is-rounded \" +(size?size:\"\"),\r\n    inputOpen:                'react-autosuggest__input--open',\r\n    inputFocused:             'react-autosuggest__input--focused',\r\n    suggestionsContainer:     'react-autosuggest__suggestions-container',\r\n    suggestionsContainerOpen: 'react-autosuggest__suggestions-container--open',\r\n    suggestionsList:          'react-autosuggest__suggestions-list',\r\n    suggestion:               'react-autosuggest__suggestion',\r\n    suggestionFirst:          'react-autosuggest__suggestion--first',\r\n    suggestionHighlighted:    'react-autosuggest__suggestion--highlighted',\r\n    sectionContainer:         'react-autosuggest__section-container',\r\n    sectionContainerFirst:    'react-autosuggest__section-container--first',\r\n    sectionTitle:             'react-autosuggest__section-title'\r\n  }\r\n\r\n  return (\r\n    <div className={\"search control has-icons-left is-expanded \" +(size?size:\"\")}>\r\n      <div className={`dropdown ${suggestions.length > 0 ? \"is-active\" : \"\"}`} style={{width:\"100%\"}}>\r\n        <div className=\"dropdown-trigger\" style={{width:\"100%\"}}>\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            onSuggestionSelected={onSuggestionSelected}\r\n            renderSuggestion={renderSuggestion}\r\n            inputProps={inputProps}\r\n            theme={theme}\r\n            highlightFirstSuggestion={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      <span className={\"icon is-left\"} style={size ? size===\"is-large\" ? {height:\"60px\",width:\"60px\"} : {} : {}}>\r\n        <i className=\"fa fa-search\" style={size ? size===\"is-large\" ? {fontSize:\"25px\"} : {} : {}}></i>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    state_collection: state.collection\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Search);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport ButtonConnect from \"../ButtonConnect\";\r\nimport Search from \"./Search\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"main-navbar navbar is-fixed-top is-transparent\">\r\n      <div className=\"the-blur\"></div>\r\n      <div className=\"navbar-brand\">\r\n        <Link className=\"navbar-item\" to=\"/\">\r\n          <span className=\"logo-text\">WorkdPack</span>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"navbar-menu\">\r\n        <div className=\"navbar-start\">\r\n          <Link className=\"navbar-item\" to=\"/explore\">\r\n            Explore\r\n          </Link>\r\n\r\n          <Link className=\"navbar-item\" to=\"/mint\">\r\n            Mint NFTS\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item is-expanded\">\r\n            <Search />\r\n          </div>\r\n\r\n          <div className=\"navbar-item\">\r\n            <div className=\"field is-grouped\">\r\n              <div className=\"control\">\r\n                <ButtonConnect />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { AssetCard } from \"components\";\r\nimport { loadAssets } from \"store/wallet/api\";\r\n\r\nconst AllAssets = () => {\r\n  const dispatch = useDispatch();\r\n  const state_wallet = useSelector((state) => state.wallet);\r\n  const state_collection = useSelector((state) => state.collection);\r\n\r\n  const [listings, setListings] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const default_list_projects = [{ value: \"all\", label: \"All Projects\" }];\r\n  const [listProjectsFilter, setListProjectsFilter] = useState([\r\n    ...default_list_projects,\r\n  ]);\r\n  const [filterProject, setFilterProject] = useState(\"all\");\r\n  const filters_assets = [\r\n    { value: \"all\", label: \"Show all assets\" },\r\n    { value: \"listed\", label: \"Show listed\" },\r\n    { value: \"offered\", label: \"Show has offers\" },\r\n  ];\r\n  const [filterAsset, setFilterAsset] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    load();\r\n  }, [state_wallet]);\r\n  const add_asset = (list_nfts, dict_projects, this_asset) => {\r\n    if (this_asset) {\r\n      list_nfts.push(this_asset);\r\n      let policy_id = this_asset.details.policyId;\r\n      if (policy_id in state_collection.policies_collections) {\r\n        dict_projects[policy_id] =\r\n          state_collection.policies_collections[policy_id].meta.name;\r\n      } else {\r\n        dict_projects[policy_id] = policy_id;\r\n      }\r\n    }\r\n  };\r\n\r\n  const load = () => {\r\n    if (state_wallet.loaded_assets) {\r\n      let list_nfts = [];\r\n      let list_projects = [...default_list_projects];\r\n      let dict_projects = {};\r\n      let list_nfts_id = []; // for checking duplicates\r\n      \r\n      for (let i in state_wallet.data.market) {\r\n        let this_asset = state_wallet.data.market[i];\r\n        if(!list_nfts_id.includes(this_asset.details.asset)){\r\n          add_asset(list_nfts, dict_projects, this_asset);\r\n          list_nfts_id.push(this_asset.details.asset);\r\n        }\r\n      }\r\n\r\n      for (let i in state_wallet.data.assets) {\r\n        let this_asset = state_wallet.data.assets[i];\r\n        if(!list_nfts_id.includes(this_asset.details.asset)){\r\n          add_asset(list_nfts, dict_projects, this_asset);\r\n          list_nfts_id.push(this_asset.details.asset);\r\n        }\r\n      }\r\n\r\n      setListings(list_nfts);\r\n\r\n      for (var policy_id in dict_projects) {\r\n        list_projects.push({\r\n          value: policy_id,\r\n          label: dict_projects[policy_id],\r\n        });\r\n      }\r\n      setListProjectsFilter(list_projects);\r\n    }\r\n  };\r\n\r\n  const searchingFor = (searchText) => {\r\n    return (x) => {\r\n      let return_this = false;\r\n      if (searchText === \"\") {\r\n        return_this = true;\r\n      } else if (searchText !== \"\" && x.details.onchainMetadata) {\r\n        if (\r\n          x.details.onchainMetadata.name\r\n            .toLowerCase()\r\n            .includes(searchText.toLowerCase())\r\n        ) {\r\n          return_this = true;\r\n        }\r\n      }\r\n      return return_this;\r\n    };\r\n  };\r\n\r\n  let matchedtokens = listings.filter(searchingFor(searchText));\r\n\r\n  const filtered_listing = matchedtokens\r\n    .filter((asset) => {\r\n      let allow_project = false;\r\n\r\n      if (filterProject === \"all\") allow_project = true;\r\n      else allow_project = filterProject === asset.details.policyId;\r\n\r\n      if (allow_project) {\r\n        if (filterAsset === \"all\") {\r\n          return true;\r\n        } else if (filterAsset === \"listed\" && asset.status.locked) {\r\n          return true;\r\n        } else if (filterAsset === \"offered\") {\r\n          if (asset.offers) {\r\n            if (Object.keys(asset.offers).length) {\r\n              return true;\r\n            } else {\r\n              return false;\r\n            }\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    })\r\n    .map((asset, i) => {\r\n      return (\r\n        <AssetCard\r\n          asset={asset}\r\n          show_offer={true}\r\n          column_className=\"column is-one-full-mobile is-one-quarter-tablet is-2-desktop is-2-widescreen is-2-fullhd\"\r\n          key={i}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {listings.length > 0 ? (\r\n        <div className=\"block\">\r\n          <div className=\"field is-grouped\">\r\n            <div className=\"control has-icons-left is-expanded\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder={\"Search\"}\r\n                value={searchText}\r\n                onChange={(e) => setSearchText(e.target.value)}\r\n              />\r\n              <span className=\"icon is-small is-left\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n              <span className=\"select\">\r\n                <select\r\n                  value={filterProject}\r\n                  onChange={(event) => setFilterProject(event.target.value)}\r\n                >\r\n                  {listProjectsFilter.map((option, i) => {\r\n                    return (\r\n                      <option value={option.value} key={i}>\r\n                        {option.label}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n              <span className=\"select\">\r\n                <select\r\n                  value={filterAsset}\r\n                  onChange={(event) => setFilterAsset(event.target.value)}\r\n                >\r\n                  {filters_assets.map((option, i) => {\r\n                    return (\r\n                      <option value={option.value} key={i}>\r\n                        {option.label}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"columns is-multiline\">{filtered_listing}</div>\r\n        </div>\r\n      ) : (\r\n        <NoAssetFound state_wallet={state_wallet} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst NoAssetFound = ({ state_wallet }) => {\r\n  return (\r\n    <section className=\"hero is-large\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered\">\r\n          {!state_wallet.connected ? (\r\n            <>\r\n              <h1>\r\n                <span\r\n                  className=\"icon\"\r\n                  style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n                >\r\n                  <i className=\"fas fa-plug\"></i>\r\n                </span>\r\n              </h1>\r\n              <p className=\"title\">Connect your wallet</p>\r\n              <p className=\"subtitle\">\r\n                Do not have Nami Wallet?{\" \"}\r\n                <a\r\n                  href=\"https://namiwallet.io/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Download\r\n                </a>{\" \"}\r\n                now!\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {state_wallet.connected && state_wallet.loading ? (\r\n            <>\r\n              <h1>\r\n                <span\r\n                  className=\"icon\"\r\n                  style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n                >\r\n                  <i className=\"fas fa-truck-loading\"></i>\r\n                </span>\r\n              </h1>\r\n              <p className=\"title\">Fetching your assets</p>\r\n              <p className=\"subtitle\">This may take awhile...</p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {state_wallet.connected &&\r\n          !state_wallet.loading &&\r\n          state_wallet.loaded_assets ? (\r\n            <>\r\n              <h1>\r\n                <span\r\n                  className=\"icon\"\r\n                  style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n                >\r\n                  <i className=\"fas fa-truck-loading\"></i>\r\n                </span>\r\n              </h1>\r\n              <p className=\"title\">No assets</p>\r\n              <p className=\"subtitle\">\r\n                Looks like your wallet is empty,{\" \"}\r\n                <a href=\"/explore\">start browsing</a>!\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AllAssets;\r\n","import {\r\n  collections_loaded,\r\n  collections_add_tokens,\r\n  collections_loading,\r\n  collections_add_assets,\r\n} from \"./collectionActions\";\r\nimport { set_error } from \"../error/errorActions\";\r\nimport { resolveError } from \"utils/resolver\";\r\n\r\nimport data_collections from \"../../data/collections.json\";\r\nimport data_collections_cnft from \"../../data/collections-cnft.json\";\r\n\r\nimport {\r\n  getAsset,\r\n  getAssets,\r\n  saveAsset,\r\n  getCollectionAssets,\r\n  getLockedAssets,\r\n} from \"../../database/assets\";\r\n\r\nexport const load_collection = (callback) => async (dispatch) => {\r\n  let all_collections = {};\r\n\r\n  for (let collection_id in data_collections) {\r\n    let tmp = data_collections[collection_id];\r\n    tmp.is_martify_verified = true;\r\n\r\n    if (tmp.style) {\r\n      if (tmp.style.banner)\r\n        tmp.style.banner_path = `/images/collections/${tmp.id}/${tmp.style.banner}`;\r\n      if (tmp.style.logo)\r\n        tmp.style.logo_path = `/images/collections/${tmp.id}/${tmp.style.logo}`;\r\n    }\r\n    all_collections[collection_id] = tmp;\r\n  }\r\n\r\n  for (let collection_id in data_collections_cnft) {\r\n    let tmp = data_collections_cnft[collection_id];\r\n    if (tmp.id in all_collections) {\r\n      all_collections[tmp.id].policy_ids = [\r\n        ...all_collections[tmp.id].policy_ids,\r\n        ...tmp.policy_ids,\r\n      ];\r\n    } else {\r\n      tmp.is_cnft_verified = true;\r\n      all_collections[collection_id] = tmp;\r\n    }\r\n  }\r\n\r\n  for (let collection_id in all_collections) {\r\n    all_collections[collection_id].policy_ids = [\r\n      ...new Set(all_collections[collection_id].policy_ids),\r\n    ];\r\n  }\r\n\r\n  dispatch(collections_loaded(all_collections));\r\n  callback({ all_collections });\r\n};\r\n\r\nexport const get_listings =\r\n  (policy_id, page, count, lastVisible, callback) => async (dispatch) => {\r\n    try {\r\n      dispatch(collections_loading(true));\r\n\r\n      let output = {\r\n        policy_id: policy_id,\r\n        listing: {},\r\n      };\r\n\r\n      const assets = await getCollectionAssets(\r\n        policy_id,\r\n        page,\r\n        count,\r\n        lastVisible\r\n      );\r\n\r\n      if (assets) {\r\n        output.listing = assets.reduce((map, asset) => {\r\n          map[asset.details.asset] = asset;\r\n          return map;\r\n        }, {});\r\n\r\n        if (output.policy_id && output.listing) {\r\n          dispatch(collections_add_tokens(output));\r\n        }\r\n      }\r\n\r\n      callback({ success: true, data: assets });\r\n    } catch (error) {\r\n      callback({ success: false, error });\r\n      dispatch(collections_loading(false));\r\n      dispatch(\r\n        set_error({\r\n          message: resolveError(error.message, \"Retrieving Collection Assets\"),\r\n          detail: error,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\nexport const get_assets = (assetIds, callback) => async (dispatch, state) => {\r\n  try {\r\n    dispatch(collections_loading(true));\r\n\r\n    let output = {\r\n      assets: {},\r\n    };\r\n\r\n    let assets = await getAssets(\r\n      assetIds.filter((assetId) => {\r\n        let policyId = assetId.slice(0, 56);\r\n        if (policyId in state().collection.policies_assets) {\r\n          if (assetId in state().collection.policies_assets[policyId]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n\r\n    for (let i in assets) {\r\n      let asset = assets[i];\r\n      if (asset) {\r\n        if (asset.details) {\r\n          output.assets[asset.details.asset] = asset;\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(collections_add_assets(output));\r\n\r\n    callback({ success: true });\r\n  } catch (error) {\r\n    callback({ success: false, error });\r\n    dispatch(collections_loading(false));\r\n    dispatch(\r\n      set_error({\r\n        message: resolveError(error.message, \"Retrieving Assets\"),\r\n        detail: error,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const get_asset = (asset_id, callback) => async (dispatch) => {\r\n  try {\r\n    dispatch(collections_loading(true));\r\n\r\n    let asset = await getAsset(asset_id);\r\n\r\n    if (asset) add_token(asset, dispatch);\r\n\r\n    callback({ success: true });\r\n  } catch (error) {\r\n    callback({ success: false, error });\r\n    dispatch(collections_loading(false));\r\n    dispatch(\r\n      set_error({\r\n        message: resolveError(error.message, \"Retrieving Asset\"),\r\n        detail: error,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const get_listed_assets =\r\n  (count, lastVisible, callback) => async (dispatch) => {\r\n    try {\r\n      let listed_assets = await getLockedAssets(count, lastVisible);\r\n\r\n      if (listed_assets) {\r\n        let listed_assets_by_policy = {};\r\n\r\n        for (let i in listed_assets) {\r\n          let asset = listed_assets[i];\r\n\r\n          if (asset) {\r\n            if (asset.details) {\r\n              if (!(asset.details.policyId in listed_assets_by_policy)) {\r\n                listed_assets_by_policy[asset.details.policyId] = {\r\n                  policy_id: asset.details.policyId,\r\n                  listing: {},\r\n                };\r\n              }\r\n              listed_assets_by_policy[asset.details.policyId].listing[\r\n                asset.details.asset\r\n              ] = asset;\r\n            }\r\n          }\r\n        }\r\n\r\n        for (let policy_id in listed_assets_by_policy) {\r\n          dispatch(collections_add_tokens(listed_assets_by_policy[policy_id]));\r\n        }\r\n      }\r\n\r\n      callback({ success: true, data: listed_assets });\r\n    } catch (error) {\r\n      callback({ success: false, error });\r\n      dispatch(\r\n        set_error({\r\n          message: resolveError(error.message, \"Retrieving Listed Assets\"),\r\n          detail: error,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\nexport const asset_add_offer =\r\n  (wallet, asset, price, callback) => async (dispatch) => {\r\n    try {\r\n      if (!(\"offers\" in asset)) {\r\n        asset.offers = {};\r\n      }\r\n\r\n      let offer = {\r\n        t: new Date().getTime(),\r\n        p: price,\r\n      };\r\n\r\n      asset.offers[wallet.data.address] = offer;\r\n\r\n      await saveAsset(asset);\r\n\r\n      add_token(asset, dispatch);\r\n\r\n      callback({ success: true, type: \"offer-success\" });\r\n    } catch (error) {\r\n      dispatch(\r\n        set_error({\r\n          message: resolveError(error.message, \"Adding Offer\"),\r\n          detail: error,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\nexport const opencnft_get_top_projects =\r\n  (time, callback) => async (dispatch) => {\r\n    fetch(\"https://api.opencnft.io/1/rank?window=\" + time, {})\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        callback({ success: true, data: res.ranking });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\nexport const opencnft_get_policy =\r\n  (policy_id, callback) => async (dispatch) => {\r\n    fetch(`https://api.opencnft.io/1/policy/${policy_id}`, {})\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        callback({ success: true, data: res });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\nexport const opencnft_get_asset_tx =\r\n  (asset_id, callback) => async (dispatch) => {\r\n    fetch(`https://api.opencnft.io/1/asset/${asset_id}/tx`, {})\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        callback({ success: true, data: res });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\nfunction add_token(asset, dispatch) {\r\n  let output = {\r\n    policy_id: asset.details.policyId,\r\n    listing: {\r\n      [asset.details.asset]: asset,\r\n    },\r\n  };\r\n  dispatch(collections_add_tokens(output));\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from 'react-moment';\r\nimport { Link } from \"react-router-dom\";\r\nimport { urls } from \"../../config\";\r\nimport { MARKET_TYPE } from \"../../store/wallet/walletTypes\";\r\nimport { fromLovelace } from \"../../utils/converter\";\r\nimport { get_assets } from \"../../store/collection/api\";\r\n\r\nconst Events = ({state_wallet, state_collection, get_assets}) => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setEvents([]);\r\n    let list_events = [];\r\n    let assetIds = [];\r\n    for(let i in state_wallet.data.events){\r\n      let this_event = state_wallet.data.events[i];\r\n      list_events.push(this_event);\r\n      assetIds.push(this_event.datum.cs+this_event.datum.tn);\r\n    }\r\n\r\n    assetIds = Array.from( new Set(assetIds) );\r\n    get_assets(assetIds, (res) => {\r\n      setEvents(list_events);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <table className=\"table is-hoverable is-fullwidth is-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date Time</th>\r\n          <th>Event type</th>\r\n          <th>Asset</th>\r\n          <th>Description</th>\r\n          <th>Transaction ID</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          events.sort((a, b) => {\r\n            return b.submittedOn - a.submittedOn;\r\n          })\r\n          .map((this_event, i) => {\r\n            let this_asset = state_collection.policies_assets[this_event.datum.cs][this_event.datum.cs+this_event.datum.tn];\r\n            return(\r\n              <tr key={i}>\r\n                <td>\r\n                  <Moment format=\"MMM DD YYYY HH:mm\">\r\n                    {this_event.submittedOn}\r\n                  </Moment>\r\n                </td>\r\n                <td style={{\"textTransform\": \"capitalize\"}}>{this_event.action.replace('_', ' ')}</td>\r\n                <td>\r\n                  <Link to={`/assets/${this_event.datum.cs}/${this_event.datum.cs+this_event.datum.tn}`}>\r\n                    {this_asset.details.onchainMetadata.name}\r\n                  </Link>\r\n                </td>\r\n                <td>\r\n                  {\r\n                    this_event.action===MARKET_TYPE.NEW_LISTING ? `${this_asset.details.onchainMetadata.name} has been listed for ₳${fromLovelace(this_event.datum.price)}` : \r\n                    this_event.action===\"offer\" ? `Someone has offered ${this_asset.details.onchainMetadata.name} for ₳${fromLovelace(this_event.datum.price)}` : \r\n                    this_event.action===MARKET_TYPE.DELIST ? `${this_asset.details.onchainMetadata.name} has been removed from the marketplace` : \r\n                    this_event.action===MARKET_TYPE.PRICE_UPDATE ? `${this_asset.details.onchainMetadata.name} listing price updated to ₳${fromLovelace(this_event.datum.price)}` : \r\n                    this_event.action===MARKET_TYPE.PURCHASE ? `${this_asset.details.onchainMetadata.name} purchased from the marketplace for ₳${fromLovelace(this_event.datum.price)}` : \r\n                    this_event.action===MARKET_TYPE.SOLD ? `${this_asset.details.onchainMetadata.name} sold for ₳${fromLovelace(this_event.datum.price)}` : \r\n                    \"\"\r\n                  }\r\n                </td>\r\n                <td>\r\n                  <a href={urls.cardanoscan+\"transaction/\"+this_event.txHash} target=\"_blank\" rel=\"noreferrer\">{this_event.txHash}</a>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    state_collection: state.collection,\r\n    state_wallet: state.wallet\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    get_assets: (assetIds, callback) => dispatch(get_assets(assetIds, callback)),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Events);\r\n","import React, { useState} from \"react\";\r\n\r\nconst NotConnected = () => {\r\n  return (\r\n    <section className=\"hero is-large\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered\">\r\n          <h1>\r\n            <span className=\"icon\" style={{fontSize:\"100px\", marginBottom:\"50px\"}}>\r\n              <i className=\"fas fa-plug\"></i>\r\n            </span>\r\n          </h1>\r\n          <p className=\"title\">\r\n            Connect your wallet\r\n          </p>\r\n          <p className=\"subtitle\">\r\n            Do not have Nami Wallet? <a href=\"https://namiwallet.io/\" target=\"_blank\" rel=\"noreferrer\">Download</a> now!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default NotConnected;\r\n","import React, { useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport AllAssets from \"./AllAssets\";\r\nimport Holdings from \"./Holdings\";\r\nimport Listings from \"./Listings\";\r\nimport Events from \"./Events\";\r\nimport NotConnected from \"./NotConnected\";\r\n\r\nconst Account = () => {\r\n  const state_wallet = useSelector(state => state.wallet)\r\n  const state_collection = useSelector(state => state.collection)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !state_wallet.connected ? (\r\n          <NotConnected/>\r\n        ) : <></>\r\n      }\r\n      {\r\n        state_wallet.connected ? (\r\n          <Connected state_wallet={state_wallet} state_collection={state_collection} />\r\n        ) : <></>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nconst Connected = ({state_wallet, state_collection}) => {\r\n\r\n  const TABS = {\r\n    ALL_ASSETS: {\r\n      label: \"Assets\",\r\n      icon: \"far fa-images\",\r\n    },\r\n    /*HOLDINGS: {\r\n      label: \"Holdings\",\r\n      icon: \"far fa-images\",\r\n    },\r\n    LISTINGS: {\r\n      label: \"Listings\",\r\n      icon: \"far fa-images\",\r\n    },*/\r\n    EVENTS: {\r\n      label: \"Events\",\r\n      icon: \"far fa-envelope\",\r\n    },\r\n  }\r\n  const [displayTab, setDisplayTab] = useState(\"ALL_ASSETS\");\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"tabs is-boxed\">\r\n        <ul>\r\n          {\r\n            Object.keys(TABS).map((key, i)=>{\r\n              return (\r\n                <li className={displayTab===key?\"is-active\":\"\"} onClick={() => setDisplayTab(key)} key={i}>\r\n                  <a>\r\n                    <span className=\"icon is-small\"><i className={TABS[key].icon} aria-hidden=\"true\"></i></span>\r\n                    <span>{TABS[key].label}</span>\r\n                  </a>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n\r\n      { displayTab === \"ALL_ASSETS\" ? <AllAssets state_wallet={state_wallet} state_collection={state_collection} /> : <></> }\r\n      {/* displayTab === \"HOLDINGS\" ? <Holdings state_wallet={state_wallet} state_collection={state_collection} /> : <></> }\r\n      { displayTab === \"LISTINGS\" ? <Listings state_wallet={state_wallet} state_collection={state_collection} /> : <></> */}\r\n      { displayTab === \"EVENTS\" ? <Events state_wallet={state_wallet} state_collection={state_collection} /> : <></> }\r\n\r\n    </section>\r\n  )\r\n}\r\nexport default Account;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nimport { urls } from \"config\";\r\nimport {\r\n  get_asset as getAsset,\r\n  asset_add_offer as assetAddOffer,\r\n  opencnft_get_asset_tx as opencnftGetAssetTx,\r\n} from \"store/collection/api\";\r\nimport {\r\n  listToken,\r\n  relistToken,\r\n  delistToken,\r\n  purchaseToken,\r\n} from \"store/wallet/api\";\r\nimport { WALLET_STATE, MARKET_TYPE } from \"store/wallet/walletTypes\";\r\nimport {\r\n  CollectionAbout,\r\n  CollectionBanner,\r\n  AssetImageFigure,\r\n} from \"components\";\r\nimport { fromLovelace } from \"utils/converter\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Asset = () => {\r\n  const { policy_id, asset_id } = useParams();\r\n  const state_wallet = useSelector((state) => state.wallet);\r\n  const state_collection = useSelector((state) => state.collection);\r\n  const dispatch = useDispatch();\r\n\r\n  const [asset, setAsset] = useState(false);\r\n  const [thisCollection, setThisCollection] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let query_asset = false;\r\n\r\n    if (policy_id in state_collection.policies_collections) {\r\n      var tmp = { ...state_collection.policies_collections[policy_id] };\r\n      setThisCollection(tmp);\r\n    }\r\n\r\n    if (policy_id in state_collection.policies_assets) {\r\n      if (asset_id in state_collection.policies_assets[policy_id]) {\r\n        setAsset(state_collection.policies_assets[policy_id][asset_id]);\r\n      } else {\r\n        query_asset = true;\r\n      }\r\n    } else {\r\n      query_asset = true;\r\n    }\r\n\r\n    if (query_asset && !state_collection.loading) {\r\n      dispatch(getAsset(asset_id, (res) => {}));\r\n    }\r\n  }, [policy_id, asset_id, state_collection]);\r\n\r\n  const list_token = (wallet, asset, price, callback) => {\r\n    dispatch(listToken(wallet, asset, price, callback));\r\n  };\r\n  const relist_token = (wallet, asset, price, callback) => {\r\n    dispatch(relistToken(wallet, asset, price, callback));\r\n  };\r\n  const delist_token = (wallet, asset, callback) => {\r\n    dispatch(delistToken(wallet, asset, callback));\r\n  };\r\n  const purchase_token = (wallet, asset, callback) => {\r\n    dispatch(purchaseToken(wallet, asset, callback));\r\n  };\r\n  const asset_add_offer = (wallet, asset, price, callback) => {\r\n    dispatch(assetAddOffer(wallet, asset, price, callback));\r\n  };\r\n  const opencnft_get_asset_tx = (asset_id, callback) => {\r\n    dispatch(opencnftGetAssetTx(asset_id, callback));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {thisCollection && asset ? (\r\n        <CollectionBanner\r\n          thisCollection={thisCollection}\r\n          size=\"is-small\"\r\n          asset={asset}\r\n          is_asset_page={true}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {asset ? (\r\n        <div className=\"container asset\">\r\n          <section className=\"section\">\r\n            <div className=\"columns\">\r\n              <div className=\"column is-two-fifths\">\r\n                <AssetImage asset={asset} />\r\n                <Listing\r\n                  asset={asset}\r\n                  state_wallet={state_wallet}\r\n                  list_token={list_token}\r\n                  relist_token={relist_token}\r\n                  delist_token={delist_token}\r\n                  purchase_token={purchase_token}\r\n                  asset_add_offer={asset_add_offer}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"column\">\r\n                <div className=\"content\">\r\n                  <AssetHeader asset={asset} thisCollection={thisCollection} />\r\n\r\n                  <AboutAsset thisCollection={thisCollection} asset={asset} />\r\n\r\n                  {thisCollection ? (\r\n                    <CollectionAbout thisCollection={thisCollection} />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n\r\n                  <Transactions\r\n                    asset={asset}\r\n                    opencnft_get_asset_tx={opencnft_get_asset_tx}\r\n                  />\r\n\r\n                  <AssetRawMetaData asset={asset} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      ) : (\r\n        <NoAssetFound\r\n          state_collection={state_collection}\r\n          policy_id={policy_id}\r\n          asset_id={asset_id}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst AssetHeader = ({ asset, thisCollection }) => {\r\n  return (\r\n    <div className=\"block\">\r\n      <nav className=\"level\">\r\n        <div className=\"level-left\">\r\n          <div className=\"level-item asset_name_block\">\r\n            <h1>{asset.details.onchainMetadata.name}</h1>\r\n            {thisCollection ? (\r\n              <Link to={`/collection/${thisCollection.id}`}>\r\n                {thisCollection.meta.name}\r\n              </Link>\r\n            ) : (\r\n              <Link to={`/collection/${asset.details.policyId}`}>\r\n                {asset.details.policyId}\r\n              </Link>\r\n            )}\r\n            {thisCollection.is_martify_verified ? (\r\n              <span className=\"icon\" data-tooltip=\"Martify Verified\">\r\n                <i\r\n                  className=\"fas fa-check-circle\"\r\n                  style={{ color: \"gold\" }}\r\n                ></i>\r\n              </span>\r\n            ) : thisCollection.is_cnft_verified ? (\r\n              <span className=\"icon\" data-tooltip=\"CNFT Verified\">\r\n                <i\r\n                  className=\"fas fa-check-circle\"\r\n                  style={{ color: \"green\" }}\r\n                ></i>\r\n              </span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"level-right\">\r\n          <div className=\"level-item\">\r\n            <SocialLinks asset={asset} />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SocialLinks = ({ asset }) => {\r\n  return (\r\n    <div className=\"field has-addons social-links\">\r\n      <p className=\"control\">\r\n        <a\r\n          className=\"button is-small social-icon\"\r\n          href={`https://twitter.com/share?url=${urls.root}assets/${asset.details.policyId}/${asset.details.asset}`}\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          data-tooltip=\"Share on Twitter\"\r\n        >\r\n          <span className=\"icon\">\r\n            <img alt=\"\" src=\"/images/icons/twitter.svg\" />\r\n          </span>\r\n        </a>\r\n      </p>\r\n      <p className=\"control\">\r\n        <a\r\n          className=\"button is-small social-icon\"\r\n          href={`https://www.facebook.com/sharer/sharer.php?u=${urls.root}assets/${asset.details.policyId}/${asset.details.asset}`}\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          data-tooltip=\"Share on Facebook\"\r\n        >\r\n          <span className=\"icon\">\r\n            <img alt=\"\" src=\"/images/icons/facebook.svg\" />\r\n          </span>\r\n        </a>\r\n      </p>\r\n      <p className=\"control\">\r\n        <a\r\n          className=\"button is-small social-icon\"\r\n          href={`${urls.cardanoscan}token/${asset.details.asset}`}\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          data-tooltip=\"Check Cardanoscan\"\r\n        >\r\n          <span className=\"icon\">\r\n            <img alt=\"\" src=\"/images/icons/cardanoscan.png\" />\r\n          </span>\r\n        </a>\r\n      </p>\r\n      <p className=\"control\">\r\n        <a\r\n          className=\"button is-small social-icon\"\r\n          href={`https://pool.pm/${asset.details.policyId}.${asset.details.readableAssetName}`}\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          data-tooltip=\"View it on pool.pm\"\r\n        >\r\n          <span className=\"icon\">\r\n            <img alt=\"\" src=\"/images/icons/poolpm.png\" />\r\n          </span>\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Listing = ({\r\n  asset,\r\n  state_wallet,\r\n  list_token,\r\n  relist_token,\r\n  delist_token,\r\n  purchase_token,\r\n  asset_add_offer,\r\n}) => {\r\n  let is_owner = false;\r\n  if (asset.details.asset in state_wallet.data.assets) {\r\n    is_owner = true;\r\n  }\r\n  if (asset.status && state_wallet.connected) {\r\n    if (asset.status.locked) {\r\n      if (asset.status.submittedBy === state_wallet.data.address) {\r\n        is_owner = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      {is_owner ? (\r\n        <OwnerListAsset\r\n          state_wallet={state_wallet}\r\n          asset={asset}\r\n          list_token={list_token}\r\n          relist_token={relist_token}\r\n          delist_token={delist_token}\r\n        />\r\n      ) : (\r\n        <PurchaseAsset\r\n          asset={asset}\r\n          asset_add_offer={asset_add_offer}\r\n          state_wallet={state_wallet}\r\n          purchase_token={purchase_token}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PurchaseAsset = ({\r\n  asset,\r\n  asset_add_offer,\r\n  state_wallet,\r\n  purchase_token,\r\n}) => {\r\n  const [showTab, setShowTab] = useState(\r\n    asset.status ? (asset.status.locked ? \"buy\" : \"offer\") : \"offer\"\r\n  );\r\n  const [userInputAmount, setUserInputAmount] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  function successful_transaction(res) {\r\n    setUserInputAmount(\"\");\r\n    if (res.success) {\r\n      setShowModal(res.type);\r\n      setShowNotification(false);\r\n    }\r\n  }\r\n\r\n  function list_this_token(price) {\r\n    asset_add_offer(state_wallet, asset, price, (res) => {\r\n      successful_transaction(res);\r\n    });\r\n  }\r\n\r\n  function purchase_this_token() {\r\n    purchase_token(state_wallet, asset, (res) => {\r\n      successful_transaction(res);\r\n    });\r\n  }\r\n\r\n  function input_price_changed(event) {\r\n    let v = event.target.value;\r\n    if (v) {\r\n      v = parseInt(v);\r\n      if (v) {\r\n        setUserInputAmount(v);\r\n      }\r\n    } else {\r\n      setUserInputAmount(\"\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state_wallet.loading) {\r\n      if (state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE) {\r\n        setShowNotification(\"Awaiting signature...\");\r\n      }\r\n    } else {\r\n      setShowNotification(false);\r\n    }\r\n  }, [state_wallet.loading]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <header className=\"card-header\">\r\n        <p className=\"card-header-title\">\r\n          Buy {asset.details.onchainMetadata.name}\r\n        </p>\r\n      </header>\r\n\r\n      <div className=\"card-content\">\r\n        {asset.status ? (\r\n          asset.status.locked ? (\r\n            <div className=\"tabs is-centered\">\r\n              <ul>\r\n                <li\r\n                  className={showTab === \"buy\" ? \"is-active\" : \"\"}\r\n                  onClick={() => setShowTab(\"buy\")}\r\n                >\r\n                  <a>Buy Now</a>\r\n                </li>\r\n                <li\r\n                  className={showTab === \"offer\" ? \"is-active\" : \"\"}\r\n                  onClick={() => setShowTab(\"offer\")}\r\n                >\r\n                  <a>Offer</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {showTab === \"buy\" ? (\r\n          asset.status ? (\r\n            asset.status.locked ? (\r\n              <>\r\n                <nav className=\"level is-mobile\">\r\n                  <div className=\"level-item has-text-centered\">\r\n                    <div>\r\n                      <p className=\"heading\">Buy now</p>\r\n                      <p className=\"title\">\r\n                        {fromLovelace(asset.status.datum.price)}\r\n                        <span className=\"ada_symbol\">₳</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"level-item has-text-centered\">\r\n                    <ButtonBuy\r\n                      state_wallet={state_wallet}\r\n                      purchase_this_token={purchase_this_token}\r\n                    />\r\n                  </div>\r\n                </nav>\r\n                {state_wallet.connected ? (\r\n                  state_wallet.provider.collateral.length === 0 ? (\r\n                    <p className=\"help\">\r\n                      Fund the wallet and add collateral (option in Nami).\r\n                    </p>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {showTab === \"offer\" ? (\r\n          asset.offers ? (\r\n            Object.keys(asset.offers).length ? (\r\n              <nav className=\"level is-mobile\">\r\n                <div className=\"level-item has-text-centered\">\r\n                  <div>\r\n                    <p className=\"heading\">Current offer</p>\r\n                    <p className=\"title\">\r\n                      {Math.max.apply(\r\n                        Math,\r\n                        Object.keys(asset.offers)\r\n                          .map(function (key) {\r\n                            return asset.offers[key];\r\n                          })\r\n                          .map(function (o) {\r\n                            return o.p;\r\n                          })\r\n                      )}\r\n                      <span className=\"ada_symbol\">₳</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {state_wallet.connected ? (\r\n                  state_wallet.data.address in asset.offers ? (\r\n                    <div className=\"level-item has-text-centered\">\r\n                      <div>\r\n                        <p className=\"heading\">Your offer</p>\r\n                        <p className=\"title\">\r\n                          {asset.offers[state_wallet.data.address].p}\r\n                          <span className=\"ada_symbol\">₳</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </nav>\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {showTab === \"offer\" ? (\r\n          <div className=\"field has-addons\">\r\n            <div className=\"control has-icons-left is-expanded\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"Offer price\"\r\n                value={userInputAmount}\r\n                onChange={(event) => input_price_changed(event)}\r\n                disabled={\r\n                  state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE ||\r\n                  !state_wallet.connected\r\n                }\r\n              />\r\n              <span className=\"icon is-medium is-left\">₳</span>\r\n              {!state_wallet.connected ? (\r\n                <p className=\"help\">Connect your wallet to offer</p>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n            <div className=\"control\">\r\n              <button\r\n                className=\"button is-info\"\r\n                onClick={() => list_this_token(userInputAmount)}\r\n                disabled={\r\n                  state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE ||\r\n                  userInputAmount < 5 ||\r\n                  !state_wallet.connected\r\n                }\r\n              >\r\n                {userInputAmount\r\n                  ? `Offer for ₳${userInputAmount}`\r\n                  : \"Offer a price\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n\r\n      {showModal ? (\r\n        <SweetAlert\r\n          title=\"\"\r\n          show={showModal !== false}\r\n          success\r\n          confirmBtnText={\r\n            [\"Yes!\", \"Yay!\", \"Ok!\", \"Nice!\"][(Math.random() * 4) | 0]\r\n          }\r\n          onConfirm={() => setShowModal(false)}\r\n          confirmBtnCssClass=\"button is-success\"\r\n        >\r\n          {showModal === MARKET_TYPE.PURCHASE ? (\r\n            <span>\r\n              Purchased <b>{asset.details.onchainMetadata.name}</b>!\r\n            </span>\r\n          ) : showModal === \"offer-success\" ? (\r\n            <span>\r\n              You made an offer for <b>{asset.details.onchainMetadata.name}</b>!\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </SweetAlert>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {showNotification ? (\r\n        <div className=\"notification-window notification is-info\">\r\n          <button\r\n            className=\"delete\"\r\n            onClick={() => setShowNotification(false)}\r\n          ></button>\r\n          <p>{showNotification}</p>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ButtonBuy = ({ state_wallet, purchase_this_token }) => {\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const begin_buy_process = async () => {\r\n    await purchase_this_token();\r\n  };\r\n  return (\r\n    <>\r\n      <button\r\n        className={\r\n          \"button is-rounded is-info\" +\r\n          (state_wallet.loading ? \" is-loading\" : \"\")\r\n        }\r\n        disabled={\r\n          state_wallet.loading ||\r\n          !state_wallet.connected ||\r\n          state_wallet.provider.collateral.length === 0\r\n        }\r\n        onClick={begin_buy_process}\r\n      >\r\n        <span>Buy Now</span>\r\n      </button>\r\n      {showNotification ? (\r\n        <div className=\"notification-window notification \">\r\n          <button\r\n            className=\"delete\"\r\n            onClick={() => setShowNotification(false)}\r\n          ></button>\r\n          {showNotification ? (\r\n            <>\r\n              {showNotification.type === \"payment-success\" ? (\r\n                <p>\r\n                  Payment successful.\r\n                  <br />\r\n                  <a\r\n                    href={urls.cardanoscan + showNotification.data}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    {showNotification.data}\r\n                  </a>\r\n                  .\r\n                </p>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst OwnerListAsset = ({\r\n  state_wallet,\r\n  asset,\r\n  list_token,\r\n  relist_token,\r\n  delist_token,\r\n}) => {\r\n  const [userInputAmount, setUserInputAmount] = useState(\"\");\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [operation, setOperation] = useState(\"\");\r\n\r\n  function successful_transaction(res) {\r\n    setUserInputAmount(\"\");\r\n    if (res.success) {\r\n      setOperation(res.type);\r\n      setShowModal(true);\r\n      setShowNotification(false);\r\n    }\r\n  }\r\n\r\n  function list_this_token(price) {\r\n    list_token(state_wallet, asset, price, (res) => {\r\n      successful_transaction(res);\r\n    });\r\n  }\r\n\r\n  function update_this_listing(price) {\r\n    relist_token(state_wallet, asset, price, (res) => {\r\n      successful_transaction(res);\r\n    });\r\n  }\r\n\r\n  function delist_this_token() {\r\n    delist_token(state_wallet, asset, (res) => {\r\n      successful_transaction(res);\r\n    });\r\n  }\r\n\r\n  function input_price_changed(event) {\r\n    let v = event.target.value;\r\n    if (v) {\r\n      v = parseInt(v);\r\n      if (v) {\r\n        setUserInputAmount(v);\r\n      }\r\n    } else {\r\n      setUserInputAmount(\"\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state_wallet.loading) {\r\n      if (state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE) {\r\n        setShowNotification(\"Awaiting signature...\");\r\n      }\r\n    } else {\r\n      setShowNotification(false);\r\n    }\r\n  }, [state_wallet.loading]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <header className=\"card-header\">\r\n        <p className=\"card-header-title\">\r\n          List {asset.details.onchainMetadata.name} for sale in the Marketplace\r\n        </p>\r\n      </header>\r\n\r\n      <div className=\"card-content\">\r\n        {asset.offers ? (\r\n          Object.keys(asset.offers).length ? (\r\n            <nav className=\"level is-mobile\">\r\n              <div className=\"level-item has-text-centered\">\r\n                <div>\r\n                  <p className=\"heading\">Highest offer</p>\r\n                  <p className=\"title\">\r\n                    {Math.max.apply(\r\n                      Math,\r\n                      Object.keys(asset.offers)\r\n                        .map(function (key) {\r\n                          return asset.offers[key];\r\n                        })\r\n                        .map(function (o) {\r\n                          return o.p;\r\n                        })\r\n                    )}\r\n                    <span className=\"ada_symbol\">₳</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {asset.status ? (\r\n          asset.status.locked ? (\r\n            <nav className=\"level is-mobile\">\r\n              <div className=\"level-item has-text-centered\">\r\n                <div>\r\n                  <p className=\"heading\">Currently listed for</p>\r\n                  <p className=\"title\">\r\n                    {fromLovelace(asset.status.datum.price)}\r\n                    <span className=\"ada_symbol\">₳</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"level-item has-text-centered\">\r\n                <button\r\n                  className={\r\n                    \"button is-rounded is-info\" +\r\n                    (state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE\r\n                      ? \" is-loading\"\r\n                      : \"\")\r\n                  }\r\n                  disabled={\r\n                    state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE\r\n                  }\r\n                  onClick={() => delist_this_token()}\r\n                >\r\n                  <span>Cancel listing</span>\r\n                </button>\r\n              </div>\r\n            </nav>\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div className=\"field has-addons\">\r\n          <div className=\"control has-icons-left is-expanded\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              placeholder={\r\n                asset.status.locked\r\n                  ? \"Update listing price\"\r\n                  : \"Input listing price\"\r\n              }\r\n              value={userInputAmount}\r\n              onChange={(event) => input_price_changed(event)}\r\n              disabled={\r\n                state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE\r\n              }\r\n            />\r\n            <span className=\"icon is-medium is-left\">₳</span>\r\n            {state_wallet.provider.collateral.length === 0 ? (\r\n              <p className=\"help\">\r\n                Fund the wallet and add collateral (option in Nami).\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"control\">\r\n            <button\r\n              className={\r\n                \"button is-info \" +\r\n                (state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE\r\n                  ? \"is-loading\"\r\n                  : \"\")\r\n              }\r\n              onClick={() =>\r\n                asset.status.locked\r\n                  ? update_this_listing(userInputAmount)\r\n                  : list_this_token(userInputAmount)\r\n              }\r\n              disabled={\r\n                state_wallet.loading === WALLET_STATE.AWAITING_SIGNATURE ||\r\n                userInputAmount < 5\r\n              }\r\n            >\r\n              {userInputAmount ? `List for ₳${userInputAmount}!` : \"List this!\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showNotification ? (\r\n        <div className=\"notification-window notification is-info\">\r\n          <button\r\n            className=\"delete\"\r\n            onClick={() => setShowNotification(false)}\r\n          ></button>\r\n          <p>{showNotification}</p>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {showModal ? (\r\n        <SweetAlert\r\n          title=\"\"\r\n          success\r\n          confirmBtnText={\r\n            [\"Yes!\", \"Yay!\", \"Ok!\", \"Nice!\"][(Math.random() * 4) | 0]\r\n          }\r\n          onConfirm={() => setShowModal(false)}\r\n          confirmBtnCssClass=\"button is-success\"\r\n        >\r\n          {operation === MARKET_TYPE.NEW_LISTING ? (\r\n            <span>\r\n              Listed <b>{asset.details.onchainMetadata.name}</b> successfully!\r\n            </span>\r\n          ) : operation === MARKET_TYPE.PRICE_UPDATE ? (\r\n            <span>\r\n              Listing price for <b>{asset.details.onchainMetadata.name}</b>{\" \"}\r\n              updated!\r\n            </span>\r\n          ) : operation === MARKET_TYPE.DELIST ? (\r\n            <span>\r\n              <b>{asset.details.onchainMetadata.name}</b> removed from the\r\n              marketplace.\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </SweetAlert>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AboutAsset = ({ thisCollection, asset }) => {\r\n  function getArraysIntersection(a1, a2) {\r\n    return a1.filter(function (n) {\r\n      return a2.indexOf(n) !== -1;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {thisCollection ? (\r\n                <>\r\n                  {thisCollection.asset_attributes ? (\r\n                    getArraysIntersection(\r\n                      thisCollection.asset_attributes,\r\n                      Object.keys(asset.details.onchainMetadata)\r\n                    ).length > 0 ? (\r\n                      thisCollection.asset_attributes.map((attr, i) => {\r\n                        return (\r\n                          <ListAttributes asset={asset} attr={attr} key={i} />\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <ListAllAttributes asset={asset} />\r\n                    )\r\n                  ) : (\r\n                    <ListAllAttributes asset={asset} />\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <ListAllAttributes asset={asset} />\r\n              )}\r\n              <tr>\r\n                <th className=\"attr\">Policy ID</th>\r\n                <td>\r\n                  <nav className=\"level\" style={{ marginBottom: \"0px\" }}>\r\n                    <div className=\"level-left\">\r\n                      <div className=\"level-item\">\r\n                        <pre>{asset.details.policyId}</pre>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"level-right\">\r\n                      <div className=\"level-item\">\r\n                        <a\r\n                          className=\"button social-icon\"\r\n                          href={`${urls.cardanoscan}tokenPolicy/${asset.details.policyId}`}\r\n                          rel=\"noreferrer\"\r\n                          target=\"_blank\"\r\n                          data-tooltip=\"Check Cardanoscan\"\r\n                          style={{ marginLeft: \"10px\" }}\r\n                        >\r\n                          <span className=\"icon\">\r\n                            <img alt=\"\" src=\"/images/icons/cardanoscan.png\" />\r\n                          </span>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </nav>\r\n                  {thisCollection.is_martify_verified ? (\r\n                    <span className=\"is-size-7\">\r\n                      This policy ID is verified by WorkPack.\r\n                    </span>\r\n                  ) : thisCollection.is_cnft_verified ? (\r\n                    <span className=\"is-size-7\">\r\n                      This policy ID is verified on CNFT.\r\n                    </span>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ListAttributes = ({ asset, attr }) => {\r\n  return (\r\n    <>\r\n      {attr in asset.details.onchainMetadata ? (\r\n        <tr>\r\n          <th className=\"attr\">{attr}</th>\r\n          <td>\r\n            {typeof asset.details.onchainMetadata[attr] === \"object\" ? (\r\n              <table className=\"table is-narrow\">\r\n                <tbody>\r\n                  {Array.isArray(asset.details.onchainMetadata[attr])\r\n                    ? asset.details.onchainMetadata[attr].map((att, i) => {\r\n                        if (typeof att === \"object\") {\r\n                          const key = Object.keys(att).at(0);\r\n                          return (\r\n                            <tr key={key}>\r\n                              <td>\r\n                                {key}: {att[key]}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                        return (\r\n                          <tr key={i}>\r\n                            <td>{att}</td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    : Object.entries(asset.details.onchainMetadata[attr]).map(\r\n                        ([k, v]) => {\r\n                          if (typeof v !== \"object\") {\r\n                            return (\r\n                              <tr key={k}>\r\n                                <td>\r\n                                  {k}: {v}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }\r\n                          return <></>; // TODO: handle properties object\r\n                        }\r\n                      )}\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              asset.details.onchainMetadata[attr]\r\n            )}\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ListAllAttributes = ({ asset }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(asset.details.onchainMetadata)\r\n        .filter((attr) => {\r\n          return ![\"files\", \"image\", \"name\", \"mediatype\"].includes(\r\n            attr.toLowerCase()\r\n          );\r\n        })\r\n        .map((attr, i) => {\r\n          return (\r\n            <React.Fragment key={i}>\r\n              <ListAttributes asset={asset} attr={attr} key={i} />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst AssetRawMetaData = ({ asset }) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <div className=\"card\">\r\n      <header\r\n        className=\"card-header\"\r\n        onClick={() => setShow(!show)}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        <p className=\"card-header-title\">Raw Metadata</p>\r\n        <button className=\"card-header-icon\" aria-label=\"more options\">\r\n          <span className=\"icon\">\r\n            <i\r\n              className={show ? \"fas fa-angle-down\" : \"fas fa-angle-up\"}\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n          </span>\r\n        </button>\r\n      </header>\r\n      {show ? (\r\n        <div className=\"card-content\">\r\n          <div className=\"content\" style={{ display: \"grid\" }}>\r\n            <pre>{JSON.stringify(asset.details, null, 1)}</pre>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AssetImage = ({ asset }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [contentType, setContentType] = useState(\"image\");\r\n  const [contentSource, setContentSource] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // detect html, require cleaning\r\n    if (asset && show && contentSource == null) {\r\n      setContentSource(false);\r\n      let ipfs_root = \"https://infura-ipfs.io/ipfs/\";\r\n      if (asset.details.onchainMetadata.files) {\r\n        if (asset.details.onchainMetadata.files.length) {\r\n          let thisContentType = false;\r\n          if (asset.details.onchainMetadata.files[0].mediaType == \"text/html\") {\r\n            thisContentType = \"html\";\r\n          } else if (\r\n            asset.details.onchainMetadata.files[0].mediaType == \"audio/mpeg\"\r\n          ) {\r\n            thisContentType = \"audio\";\r\n          }\r\n\r\n          if (thisContentType != \"image\") {\r\n            setContentType(thisContentType);\r\n            // prepare src link\r\n            if (\r\n              asset.details.onchainMetadata.files[0].src.includes(\"ipfs://\")\r\n            ) {\r\n              let s =\r\n                ipfs_root +\r\n                asset.details.onchainMetadata.files[0].src.split(\"ipfs://\")[1];\r\n              setContentSource(s);\r\n            } else {\r\n              let s = ipfs_root + asset.details.onchainMetadata.files[0].src;\r\n              setContentSource(s);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [asset, show]);\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <AssetImageFigure asset={asset} setShow={setShow} show_trigger={true} />\r\n      <div className={\"modal \" + (show ? \"is-active\" : \"\")}>\r\n        <div className=\"modal-background\" onClick={() => setShow(false)}></div>\r\n        <div className=\"modal-content\">\r\n          {contentType === \"html\" && contentSource ? (\r\n            <iframe src={contentSource} height=\"500px\" width=\"100%\"></iframe>\r\n          ) : (\r\n            // contentType == \"audio\" && contentSource ?\r\n            //   <audio controls=\"\" preload=\"none\" style=\"max-width: 697px; max-height: 387px;\">\r\n            //     <source src={contentSource} type=\"audio/mpeg\"/>\r\n            //   </audio>\r\n            // :\r\n            <AssetImageFigure\r\n              asset={asset}\r\n              setShow={setShow}\r\n              no_figure={true}\r\n            />\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"modal-close is-large\"\r\n          aria-label=\"close\"\r\n          onClick={() => setShow(false)}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoAssetFound = ({ state_collection, policy_id, asset_id }) => {\r\n  return (\r\n    <section className=\"hero is-large\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered\">\r\n          {!state_collection.loading ? (\r\n            <>\r\n              {policy_id in state_collection.policies_assets ? (\r\n                <>\r\n                  {state_collection.policies_assets[policy_id][asset_id] ===\r\n                  false ? (\r\n                    <ShowNoAssetFound />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <ShowNoAssetFound />\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {state_collection.loading ? (\r\n            <>\r\n              <h1>\r\n                <span\r\n                  className=\"icon\"\r\n                  style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n                >\r\n                  <i className=\"fas fa-search\"></i>\r\n                </span>\r\n              </h1>\r\n              <p className=\"title\">Getting asset meta</p>\r\n              <p className=\"subtitle\"></p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst Transactions = ({ asset, opencnft_get_asset_tx }) => {\r\n  const [firstLoad, setFirstLoad] = useState(false);\r\n  const [fetching, setFetching] = useState(false);\r\n  const [transactions, setTransactions] = useState(false);\r\n\r\n  function get_txn_martify(list_transactions) {\r\n    if (asset.events) {\r\n      let asset_purchase_events = asset.events\r\n        .filter((tx) => {\r\n          if (tx.action === \"PURCHASE\") return true;\r\n          return false;\r\n        })\r\n        .map((tx, i) => {\r\n          return {\r\n            sold_at: tx.submittedOn,\r\n            marketplace: \"Martify\",\r\n            price: tx.datum.price,\r\n          };\r\n        });\r\n      list_transactions.push.apply(list_transactions, asset_purchase_events);\r\n    }\r\n    if (list_transactions.length) {\r\n      setTransactions(list_transactions);\r\n      setFirstLoad(true);\r\n    }\r\n    return list_transactions;\r\n  }\r\n\r\n  function feteh_update() {\r\n    setFetching(true);\r\n    setTransactions(false);\r\n    let list_transactions = [];\r\n\r\n    list_transactions = get_txn_martify(list_transactions);\r\n\r\n    opencnft_get_asset_tx(asset.details.asset, (res) => {\r\n      setFirstLoad(true);\r\n      if (res.data.items) {\r\n        let opencnft_transactions = [...res.data.items];\r\n        for (var i in opencnft_transactions) {\r\n          opencnft_transactions[i].sold_at =\r\n            opencnft_transactions[i].sold_at * 1000;\r\n        }\r\n        list_transactions.push.apply(list_transactions, res.data.items);\r\n      }\r\n      setTransactions(list_transactions);\r\n      setFetching(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    get_txn_martify([]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"card\">\r\n        <header className=\"card-header\">\r\n          <p className=\"card-header-title\">Transactions</p>\r\n          <button\r\n            className=\"card-header-icon\"\r\n            aria-label=\"more options\"\r\n            onClick={() => feteh_update()}\r\n          >\r\n            <span className=\"icon\">\r\n              <i\r\n                className={\"fas fa-sync \" + (fetching ? \"icn-spinner\" : \"\")}\r\n              ></i>\r\n            </span>\r\n          </button>\r\n        </header>\r\n        {firstLoad ? (\r\n          <div className=\"card-content\">\r\n            {transactions ? (\r\n              transactions.length > 0 ? (\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Transacted on</th>\r\n                      <th>Price</th>\r\n                      <th>Marketplace</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {transactions\r\n                      .sort((a, b) => {\r\n                        return b.sold_at - a.sold_at;\r\n                      })\r\n                      .map((tx, i) => {\r\n                        return (\r\n                          <tr key={i}>\r\n                            <td>\r\n                              <Moment format=\"MMM DD YYYY HH:mm\">\r\n                                {tx.sold_at}\r\n                              </Moment>\r\n                            </td>\r\n                            <td>₳{tx.price / 1000000}</td>\r\n                            <td>{tx.marketplace}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </table>\r\n              ) : (\r\n                <div>No transactions found on marketplaces.</div>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ShowNoAssetFound = () => {\r\n  return (\r\n    <>\r\n      <h1>\r\n        <span\r\n          className=\"icon\"\r\n          style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n        >\r\n          <i className=\"far fa-question-circle\"></i>\r\n        </span>\r\n      </h1>\r\n      <p className=\"title\">This asset does not exist.</p>\r\n      <p className=\"subtitle\">\r\n        If you believe this is a mistake, please report this error to our\r\n        support team.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Asset;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AssetCard } from \"components\";\r\n\r\nconst DisplayListing = ({ listings }) => {\r\n  // search and filter\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortby, setSortby] = useState(\"lowtohigh\");\r\n\r\n  const sort_options = [\r\n    { value: \"lowtohigh\", label: \"Price: Low to High\" },\r\n    { value: \"hightolow\", label: \"Price: High to Low\" },\r\n  ];\r\n\r\n  const searchingFor = (searchText) => {\r\n    return (x) => {\r\n      let return_this = false;\r\n\r\n      if (x.details.onchainMetadata == null) {\r\n        return false;\r\n      }\r\n\r\n      if (searchText === \"\") {\r\n        return_this = true;\r\n      } else if (\r\n        searchText !== \"\" &&\r\n        x.details.onchainMetadata.name\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase())\r\n      ) {\r\n        return_this = true;\r\n      }\r\n      return return_this;\r\n    };\r\n  };\r\n\r\n  let matchedtokens = listings.filter(searchingFor(searchText));\r\n\r\n  const filtered_listing = matchedtokens\r\n    .sort((a, b) => {\r\n      if (a.status.locked && b.status.locked) {\r\n        let a_price = a.status.datum.price;\r\n        let b_price = b.status.datum.price;\r\n        if (sortby === \"lowtohigh\") {\r\n          return a_price - b_price;\r\n        } else {\r\n          return b_price - a_price;\r\n        }\r\n      } else {\r\n        return a.status.locked > b.status.locked ? -1 : 1;\r\n      }\r\n    })\r\n    .map((this_nft, i) => {\r\n      return <AssetCard asset={this_nft} key={i} />;\r\n    });\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <div className=\"field is-grouped\">\r\n        <div className=\"control has-icons-left is-expanded\">\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder={\"Search\"}\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n          />\r\n          <span className=\"icon is-small is-left\">\r\n            <i className=\"fa fa-search\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"control\">\r\n          <span className=\"select\">\r\n            <select\r\n              value={sortby}\r\n              onChange={(event) => setSortby(event.target.value)}\r\n            >\r\n              {sort_options.map((option, i) => {\r\n                return (\r\n                  <option value={option.value} key={i}>\r\n                    {option.label}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"columns is-multiline\">{filtered_listing}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayListing;\r\n","const NoAssetFound = ({ state_collection, policyIds }) => {\r\n  return (\r\n    <section className=\"hero is-medium\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered\">\r\n          {state_collection.loading ? (\r\n            <>\r\n              <h1>\r\n                <span\r\n                  className=\"icon\"\r\n                  style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n                >\r\n                  <i className=\"fas fa-truck-loading\"></i>\r\n                </span>\r\n              </h1>\r\n              <p className=\"title\">Fetching assets</p>\r\n              <p className=\"subtitle\">This may take awhile...</p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {!state_collection.loading && policyIds ? (\r\n            policyIds.some(\r\n              (r) =>\r\n                Object.keys(state_collection.policies_collections).indexOf(r) >=\r\n                0\r\n            ) ? (\r\n              <>\r\n                <h1>\r\n                  <span\r\n                    className=\"icon\"\r\n                    style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n                  >\r\n                    <i className=\"far fa-times-circle\"></i>\r\n                  </span>\r\n                </h1>\r\n                <p className=\"title\">No assets</p>\r\n                <p className=\"subtitle\">\r\n                  This policy ID does not exist or does not contain any assets.\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NoAssetFound;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport DisplayListing from \"./DisplayListing\";\r\nimport NoAssetFound from \"./NoAssetFound\";\r\n\r\nimport { usePolicyMetadatas } from \"hooks/usePolicyMetadatas\";\r\nimport { get_listings } from \"store/collection/api\";\r\n\r\nconst ListingSection = ({ state_collection, policyIds }) => {\r\n  const ITEMS_PER_PAGE = 48;\r\n  const dispatch = useDispatch();\r\n  const [listings, setListings] = useState([]);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [paginationObject, setPaginationObject] = useState(undefined);\r\n  const [policyMetadatas, loadingData] = usePolicyMetadatas(policyIds);\r\n\r\n  const resetComponentState = useCallback(() => {\r\n    if (policyMetadatas.length > 0) {\r\n      let tmpPaginationObject = {};\r\n      for (let metadata of policyMetadatas) {\r\n        if (metadata) {\r\n          tmpPaginationObject[metadata.policy] = {\r\n            page: 1,\r\n            hasMore: true,\r\n            itemsMinted: metadata.asset_minted,\r\n            policyId: metadata.policy,\r\n          };\r\n        }\r\n      }\r\n      setListings([]);\r\n      setLastVisible(null);\r\n      setPaginationObject(tmpPaginationObject);\r\n    }\r\n  }, [policyMetadatas]);\r\n\r\n  const updateComponentState = (collectionMetadata, loadedAssets) => {\r\n    setListings([...listings, ...loadedAssets]);\r\n    setLastVisible(loadedAssets[loadedAssets.length - 1]);\r\n    setPaginationObject({\r\n      ...paginationObject,\r\n      [collectionMetadata.policyId]: {\r\n        ...collectionMetadata,\r\n        page: collectionMetadata.page + 1,\r\n        hasMore:\r\n          ITEMS_PER_PAGE * collectionMetadata.page <\r\n          collectionMetadata.itemsMinted,\r\n      },\r\n    });\r\n  };\r\n\r\n  const hasMore = () => {\r\n    if (paginationObject !== undefined) {\r\n      for (let key of Object.keys(paginationObject)) {\r\n        if (paginationObject[key].hasMore) {\r\n          return paginationObject[key];\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const loadNext = () => {\r\n    const collectionMetadata = hasMore();\r\n    if (!isFetching && collectionMetadata) {\r\n      setIsFetching(true);\r\n      dispatch(\r\n        get_listings(\r\n          collectionMetadata.policyId,\r\n          collectionMetadata.page,\r\n          ITEMS_PER_PAGE,\r\n          lastVisible,\r\n          (res) => {\r\n            if (res.success) {\r\n              updateComponentState(collectionMetadata, res.data);\r\n              setIsFetching(false);\r\n            }\r\n          }\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isFetching && listings.length === 0) loadNext();\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (policyMetadatas?.length > 0) {\r\n      resetComponentState();\r\n    } else {\r\n      setListings([]);\r\n      setPaginationObject(undefined);\r\n    }\r\n  }, [resetComponentState, policyMetadatas]);\r\n\r\n  return (\r\n    <>\r\n      {!loadingData && listings.length > 0 ? (\r\n        <InfiniteScroll\r\n          className=\"infinite-scroll-container\"\r\n          dataLength={listings.length}\r\n          next={loadNext}\r\n          hasMore={hasMore()}\r\n          loader={\r\n            <progress\r\n              className=\"progress is-small is-primary\"\r\n              max=\"100\"\r\n            ></progress>\r\n          }\r\n          endMessage={\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <span className=\"icon has-text-info\">\r\n                <i className=\"fas fa-info-circle\"></i>\r\n              </span>\r\n              <b>Yay! You have seen it all</b>\r\n            </div>\r\n          }\r\n          scrollableTarget=\"body\"\r\n        >\r\n          <DisplayListing listings={listings} />\r\n        </InfiniteScroll>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {listings.length === 0 ? (\r\n        <NoAssetFound\r\n          state_collection={state_collection}\r\n          policyIds={policyIds}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListingSection;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const usePolicyMetadatas = (policyIds) => {\r\n  const [policyMetadatas, setPolicyMetadatas] = useState([]);\r\n  const [loadingData, setLoadingData] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchMetadatas = async (policyIds) => {\r\n      try {\r\n        const metadatas = await Promise.all(\r\n          policyIds.map(async (policyId) => {\r\n            const response = await fetch(\r\n              `https://api.opencnft.io/1/policy/${policyId}`\r\n            );\r\n            return await response.json();\r\n          })\r\n        );\r\n\r\n        if (metadatas.length === 1) {\r\n          if (metadatas[0].statusCode === 404) {\r\n            console.log(\r\n              \"usePolicyMetadatas: this collection is not in opencnft\",\r\n              policyIds\r\n            );\r\n          }\r\n        }\r\n\r\n        const validMetadatas = metadatas.filter(\r\n          (metadata) => metadata.policy !== undefined\r\n        );\r\n        setPolicyMetadatas(validMetadatas);\r\n      } catch (error) {\r\n        // console.error(\r\n        //   `Unexpected error in usePolicyMetadatas. [Message: ${error.message}]`\r\n        // );\r\n        setLoadingData(false);\r\n        setErrorMessage(error.message);\r\n      }\r\n    };\r\n\r\n    if (policyIds?.length > 0) {\r\n      setLoadingData(true);\r\n      fetchMetadatas(policyIds);\r\n      setLoadingData(false);\r\n    }\r\n  }, [policyIds]);\r\n\r\n  return [policyMetadatas, loadingData, errorMessage];\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ListingSection from \"./ListingSection\";\r\n\r\nimport { opencnft_get_policy } from \"store/collection/api\";\r\nimport { CollectionAbout, CollectionBanner } from \"components\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Collection = () => {\r\n  const { collection_id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const state_collection = useSelector((state) => state.collection);\r\n  const default_meta = {\r\n    id: \"\",\r\n    meta: {},\r\n    style: {\r\n      font_color_title: false,\r\n      banner_path: false,\r\n    },\r\n    links: {},\r\n  };\r\n\r\n  const [policyIds, setPolicyIds] = useState([]);\r\n  const [thisCollection, setThisCollection] = useState(default_meta);\r\n\r\n  useEffect(() => {\r\n    if (state_collection.loaded) {\r\n      let policy_ids = false;\r\n      let currentCollectionIterator = undefined;\r\n\r\n      if (collection_id in state_collection.collections) {\r\n        currentCollectionIterator = {\r\n          ...default_meta,\r\n          ...state_collection.collections[collection_id],\r\n        };\r\n        policy_ids = currentCollectionIterator.policy_ids;\r\n      } else if (collection_id in state_collection.policies_collections) {\r\n        currentCollectionIterator = {\r\n          ...default_meta,\r\n          ...state_collection.policies_collections[collection_id],\r\n        };\r\n        policy_ids = [collection_id];\r\n      } else {\r\n        currentCollectionIterator = {\r\n          ...default_meta,\r\n          id: collection_id,\r\n          policy_id: collection_id,\r\n        };\r\n        policy_ids = [collection_id];\r\n      }\r\n\r\n      if (currentCollectionIterator.hasOwnProperty(\"policy_ids\")) {\r\n        setPolicyIds(currentCollectionIterator.policy_ids);\r\n      }\r\n\r\n      if (currentCollectionIterator.id !== thisCollection.id) {\r\n        setThisCollection({ ...currentCollectionIterator });\r\n\r\n        if (currentCollectionIterator.hasOwnProperty(\"policy_id\")) {\r\n          setPolicyIds([currentCollectionIterator.policy_id]);\r\n        }\r\n\r\n        for (let policyIdx in policy_ids) {\r\n          let policy_id = policy_ids[policyIdx];\r\n          dispatch(\r\n            opencnft_get_policy(policy_id, (res) => {\r\n              if (res.data.statusCode === 404) {\r\n                \r\n              } else {\r\n                if (!(\"opencnft\" in currentCollectionIterator)) {\r\n                  currentCollectionIterator.opencnft = [];\r\n                }\r\n                currentCollectionIterator.opencnft.push(res.data);\r\n                setThisCollection({ ...currentCollectionIterator });\r\n              }\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }, [state_collection, collection_id]);\r\n\r\n  return (\r\n    <div className=\"collection\">\r\n      <CollectionBanner\r\n        thisCollection={thisCollection}\r\n        size={thisCollection.is_martify_verified ? \"is-medium\" : \"is-small\"}\r\n        is_collection_page={true}\r\n      />\r\n\r\n      <section className=\"section\">\r\n        <div className=\"columns\">\r\n          {thisCollection.is_martify_verified ||\r\n          thisCollection.is_cnft_verified ? (\r\n            <div className=\"column is-one-quarter-tablet one-fifth-desktop is-one-fifth-widescreen is-one-fifth-fullhd\">\r\n              <div className=\"block\">\r\n                <CollectionAbout thisCollection={thisCollection} />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          <div className=\"column\">\r\n            <ListingSection\r\n              state_collection={state_collection}\r\n              policyIds={policyIds}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { get_listed_assets } from \"store/collection/api\";\r\nimport { ListingDisplayListing } from \"components\";\r\n\r\nimport \"bulma-checkradio/dist/css/bulma-checkradio.min.css\";\r\nimport \"./style.css\";\r\n\r\nconst Explore = () => {\r\n  const ITEMS_PER_PAGE = 48;\r\n  const dispatch = useDispatch();\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [listings, setListings] = useState([]);\r\n  const [filteredListings, setFilteredListings] = useState([]);\r\n  const [collections, setCollections] = useState([]);\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [hasMore, sethasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!isFetching && listings.length === 0) {\r\n      loadNext();\r\n    }\r\n  });\r\n\r\n  const loadNext = () => {\r\n    if (hasMore && !isFetching) {\r\n      setIsFetching(true);\r\n      dispatch(\r\n        get_listed_assets(ITEMS_PER_PAGE, lastVisible, (res) => {\r\n          if (res.data) {\r\n            setListings([...listings, ...res.data]);\r\n            setFilteredListings([...filteredListings, ...res.data]);\r\n            sethasMore(res.data.length > 0);\r\n\r\n            if (res.data.length > 0) {\r\n              setLastVisible(res.data[res.data.length - 1]);\r\n            }\r\n\r\n            let counter = 0;\r\n            let list_collections = {};\r\n            for (var i in res.data) {\r\n              let this_listing = res.data[i];\r\n              if (\"id\" in this_listing.collection) {\r\n                list_collections[this_listing.collection.meta.name] = {\r\n                  policy_ids: this_listing.collection.policy_ids,\r\n                  label: this_listing.collection.meta.name,\r\n                  rank:\r\n                    \"is_martify_verified\" in this_listing.collection ? 1 : 2,\r\n                  index: counter,\r\n                };\r\n              } else {\r\n                list_collections[this_listing.collection.policy_id] = {\r\n                  policy_ids: [this_listing.collection.policy_id],\r\n                  label: this_listing.collection.policy_id,\r\n                  rank: 3,\r\n                  index: counter,\r\n                };\r\n              }\r\n              counter += 1;\r\n            }\r\n\r\n            setCollections({\r\n              ...collections,\r\n              ...list_collections,\r\n            });\r\n            setIsFetching(false);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"section explore\">\r\n      <div className=\"columns\">\r\n        <div className=\"column is-one-quarter-tablet one-fifth-desktop is-one-fifth-widescreen is-one-fifth-fullhd\">\r\n          <Filter\r\n            collections={collections}\r\n            listings={listings}\r\n            setFilteredListings={setFilteredListings}\r\n          />\r\n        </div>\r\n        <div className=\"column\">\r\n          <InfiniteScroll\r\n            className=\"infinite-scroll-container\"\r\n            dataLength={listings.length}\r\n            next={loadNext}\r\n            hasMore={hasMore}\r\n            loader={\r\n              <progress\r\n                className=\"progress is-small is-primary\"\r\n                max=\"100\"\r\n              ></progress>\r\n            }\r\n            endMessage={\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <span className=\"icon has-text-info\">\r\n                  <i className=\"fas fa-info-circle\"></i>\r\n                </span>\r\n                <b>Yay! You have seen it all</b>\r\n              </div>\r\n            }\r\n            scrollableTarget=\"body\"\r\n          >\r\n            <ListingSection listings={filteredListings} />\r\n          </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Filter = ({ collections, listings, setFilteredListings }) => {\r\n  const [collectionsMultiSelect, setCollectionsMultiSelect] = useState(false);\r\n  const [collectionsIndexSelected, setCollectionsIndexSelected] = useState([]);\r\n  const [collectionsSelected, setCollectionsSelected] = useState({});\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  function click_item(collection) {\r\n    let tmp_collectionsSelected = { ...collectionsSelected };\r\n    let tmp_collectionsIndexSelected = [...collectionsIndexSelected];\r\n\r\n    if (tmp_collectionsIndexSelected.includes(collection.index)) {\r\n      var index = tmp_collectionsIndexSelected.indexOf(collection.index);\r\n      if (index !== -1) {\r\n        tmp_collectionsIndexSelected.splice(index, 1);\r\n        delete tmp_collectionsSelected[collection.index];\r\n      }\r\n    } else {\r\n      tmp_collectionsIndexSelected.push(collection.index);\r\n      tmp_collectionsSelected[collection.index] = collection;\r\n    }\r\n\r\n    if (Object.keys(tmp_collectionsSelected).length > 0) {\r\n      let list_policy = [];\r\n      for (let i in tmp_collectionsSelected) {\r\n        list_policy.push(...tmp_collectionsSelected[i].policy_ids);\r\n      }\r\n\r\n      // filter listings\r\n      let tmp_listings = [];\r\n      for (let i in listings) {\r\n        let this_listing = listings[i];\r\n        if (list_policy.includes(this_listing.details.policyId)) {\r\n          tmp_listings.push(this_listing);\r\n        }\r\n      }\r\n      setFilteredListings(tmp_listings);\r\n    } else {\r\n      setFilteredListings(listings);\r\n    }\r\n\r\n    setCollectionsSelected(tmp_collectionsSelected);\r\n    setCollectionsIndexSelected(tmp_collectionsIndexSelected);\r\n    setCollectionsMultiSelect(tmp_collectionsIndexSelected.length > 0);\r\n  }\r\n\r\n  const searchingFor = (searchText) => {\r\n    return (x) => {\r\n      let return_this = false;\r\n      if (searchText === \"\") {\r\n        return_this = true;\r\n      } else if (searchText !== \"\") {\r\n        if (x.policy_ids.includes(searchText)) {\r\n          return_this = true;\r\n        }\r\n        if (x.label.toLowerCase().includes(searchText.toLowerCase())) {\r\n          return_this = true;\r\n        }\r\n      }\r\n      return return_this;\r\n    };\r\n  };\r\n\r\n  let matchCollections = Object.keys(collections)\r\n    .map(function (key, index) {\r\n      return collections[key];\r\n    })\r\n    .filter(searchingFor(searchText));\r\n\r\n  return (\r\n    <div className=\"card filter\">\r\n      <header className=\"card-header\">\r\n        <p className=\"card-header-title\">Collections</p>\r\n      </header>\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <div className=\"field\">\r\n            <div className=\"control has-icons-left\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder={\"Filter\"}\r\n                value={searchText}\r\n                onChange={(e) => setSearchText(e.target.value)}\r\n              />\r\n              <span className=\"icon is-small is-left\">\r\n                <i className=\"fas fa-search fa-xs\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {matchCollections\r\n            .sort((a, b) => {\r\n              return a.rank - b.rank;\r\n            })\r\n            .map((this_collection, i) => {\r\n              return (\r\n                <div className=\"field\" key={i}>\r\n                  {collectionsMultiSelect ? (\r\n                    <>\r\n                      <input\r\n                        className=\"is-checkradio\"\r\n                        id={this_collection.label}\r\n                        type=\"checkbox\"\r\n                        checked={collectionsIndexSelected.includes(\r\n                          this_collection.index\r\n                        )}\r\n                        onChange={() => click_item(this_collection)}\r\n                      />\r\n                      <label\r\n                        className=\"filter_label\"\r\n                        htmlFor={this_collection.label}\r\n                      >\r\n                        {this_collection.label}\r\n                      </label>\r\n                    </>\r\n                  ) : (\r\n                    <label\r\n                      className=\"filter_label\"\r\n                      onClick={() => click_item(this_collection)}\r\n                    >\r\n                      {this_collection.label}\r\n                    </label>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ListingSection = ({ listings }) => {\r\n  return (\r\n    <>\r\n      {listings.length > 0 ? (\r\n        <ListingDisplayListing listings={listings} />\r\n      ) : (\r\n        <section className=\"hero is-medium\">\r\n          <div className=\"hero-body\">\r\n            <div className=\"container has-text-centered\">\r\n              <h1>\r\n                <span\r\n                  className=\"icon\"\r\n                  style={{ fontSize: \"100px\", marginBottom: \"50px\" }}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                </span>\r\n              </h1>\r\n              <p className=\"title\">No Assets</p>\r\n              <p className=\"subtitle\">No Assets Listed on the Market.</p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport { opencnft_get_top_projects as opencnftGetTopProjects } from \"store/collection/api\";\r\nimport { get_asset_image_source, numFormatter } from \"utils/converter\";\r\nimport Image from \"components/Image\";\r\nimport { FadeImg } from \"components/Fades\";\r\n\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const [listProjects, setListProjects] = useState([]);\r\n\r\n  const opencnft_get_top_projects = (time, callback) => {\r\n    dispatch(opencnftGetTopProjects(time, callback));\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <Splash listProjects={listProjects} />\r\n      <TopProjects\r\n        opencnft_get_top_projects={opencnft_get_top_projects}\r\n        listProjects={listProjects}\r\n        setListProjects={setListProjects}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Splash = ({ listProjects }) => {\r\n  return (\r\n    <>\r\n      <div className=\"homepage_gallery\">\r\n        <div\r\n          className={\r\n            \"overlay \" + (listProjects.length > 0 ? \"overlay_dark\" : \"\")\r\n          }\r\n        ></div>\r\n        <div className=\"columns is-multiline is-gapless\">\r\n          {listProjects.slice(0, 20).map((project, i) => {\r\n            return (\r\n              <div\r\n                className=\"column is-one-fifth-desktop is-full-mobile is-4-tablet\"\r\n                key={i}\r\n              >\r\n                <div className=\"card\">\r\n                  <div className=\"card-image\">\r\n                    <figure className=\"image is-square\">\r\n                      <FadeImg src={project.image} alt={project.name} />\r\n                    </figure>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"hero is-fullheight-with-navbar\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container\">\r\n            <div className=\"columns is-mobile is-multiline is-gapless\">\r\n              <div className=\"column is-full has-text-centered\">\r\n                <span className=\"logo-text\">WorkPack</span>\r\n                <p className=\"is-size-1 slogan\">\r\n                  Welcome to The Digital Universe.\r\n                </p>\r\n                <div className=\"is-size-4 slogan\">\r\n                  <div className=\"slogan-container\">\r\n                    <div>The Smoothest Experience for You to</div>\r\n                    <div className=\"flip-container\">\r\n                      <ul className=\"flip-items\">\r\n                        <li>\r\n                          <span className=\"tag is-primary is-large m-y\">Buy</span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"tag is-primary is-large m-y\">Sell</span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"tag is-primary is-large m-y\">Trade</span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"tag is-primary is-large m-y\">\r\n                            Explore\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div>Cardano NFTs Powered By Smart Contracts.</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"badges\">\r\n            <br />\r\n            <p>\r\n              <span className=\"firstLine\">Only</span>\r\n              <br />\r\n              <span className=\"secondLine\">1%</span>\r\n              <br />\r\n              <span className=\"thirdLine\">Fees</span>\r\n              <br />\r\n              <span className=\"fourthLine\">100% Open Source</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TopProjects = ({\r\n  opencnft_get_top_projects,\r\n  listProjects,\r\n  setListProjects,\r\n}) => {\r\n  const col_size = \"120px\";\r\n  const show_num_projects_initial = 10;\r\n\r\n  const [pending, setPending] = useState(false);\r\n  const [window, setWindow] = useState(\"7d\");\r\n  const [showLimit, setShowLimit] = useState(show_num_projects_initial);\r\n  const [topProjectData, setTopProjectData] = useState([]);\r\n  const [CNFTLoaded, setCNFTLoaded] = useState(false);\r\n\r\n  const window_options = [\r\n    { value: \"24h\", label: \"Last 24 hours\" },\r\n    { value: \"7d\", label: \"Last 7 days\" },\r\n    { value: \"30d\", label: \"Last 30 days\" },\r\n    { value: \"all\", label: \"All time\" },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      name: \"\",\r\n      selector: (row) => row.rank,\r\n      width: \"55px\",\r\n      format: (row) => parseInt(row.rank) + 1,\r\n    },\r\n    {\r\n      name: \"\",\r\n      selector: (row) => [row.name, row.image],\r\n      cell: (row) => (\r\n        <Link to={`/collection/${row.policies[0]}`}>\r\n          <article className=\"media\">\r\n            {row.thumbnail ? (\r\n              <figure className=\"media-left\">\r\n                <p className=\"image is-64x64\" style={{ overflow: \"hidden\" }}>\r\n                  <Image\r\n                    className=\"is-rounded top-project-image\"\r\n                    src={row.image}\r\n                  />\r\n                </p>\r\n              </figure>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div className=\"media-content m-auto\">\r\n              <div className=\"content is-size-6\">{row.name}</div>\r\n            </div>\r\n          </article>\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Volume\",\r\n      selector: (row) => row.volume,\r\n      sortable: true,\r\n      width: col_size,\r\n      format: (row) => numFormatter(row.volume),\r\n    },\r\n    {\r\n      name: \"24h %\",\r\n      selector: (row) => row[\"1dChange\"],\r\n      sortable: true,\r\n      conditionalCellStyles: [\r\n        {\r\n          when: (row) => row[\"1dChange\"] >= 0,\r\n          classNames: [\"has-text-success\"],\r\n        },\r\n        {\r\n          when: (row) => row[\"1dChange\"] < 0,\r\n          classNames: [\"has-text-danger\"],\r\n        },\r\n      ],\r\n      width: col_size,\r\n      format: (row) => `${parseFloat(decimal(row[\"1dChange\"]))}%`,\r\n    },\r\n    {\r\n      name: \"7d %\",\r\n      selector: (row) => row[\"7dChange\"],\r\n      sortable: true,\r\n      conditionalCellStyles: [\r\n        {\r\n          when: (row) => row[\"7dChange\"] >= 0,\r\n          classNames: [\"has-text-success\"],\r\n        },\r\n        {\r\n          when: (row) => row[\"7dChange\"] < 0,\r\n          classNames: [\"has-text-danger\"],\r\n        },\r\n      ],\r\n      width: col_size,\r\n      format: (row) => `${parseFloat(decimal(row[\"7dChange\"]))}%`,\r\n    },\r\n    {\r\n      name: \"Floor price\",\r\n      selector: (row) => row.floor_price,\r\n      sortable: true,\r\n      width: col_size,\r\n      format: (row) => `₳${row.floor_price}`,\r\n    },\r\n    {\r\n      name: \"# Owners\",\r\n      selector: (row) => row.total_owners,\r\n      width: col_size,\r\n      format: (row) => numFormatter(row.total_owners.reduce(add, 0)),\r\n    },\r\n    {\r\n      name: \"# Minted\",\r\n      selector: (row) => row.total_minted,\r\n      width: col_size,\r\n      format: (row) => numFormatter(row.total_minted.reduce(add, 0)),\r\n    },\r\n  ];\r\n\r\n  function prepare_data(project_list, limit) {\r\n    let list = [];\r\n    for (var i in project_list) {\r\n      let project = project_list[i];\r\n      project.rank = i;\r\n      project.image = get_asset_image_source(\r\n        Array.isArray(project.thumbnail)\r\n          ? project.thumbnail[0].includes(\"data:image\")\r\n            ? project.thumbnail\r\n            : project.thumbnail[0]\r\n          : project.thumbnail\r\n      );\r\n      list.push(project);\r\n      // if(i>=limit) break;\r\n    }\r\n    setListProjects(list);\r\n    setPending(false);\r\n    setCNFTLoaded(true);\r\n  }\r\n\r\n  const onchange_window = (win) => {\r\n    setWindow(win);\r\n    setPending(true);\r\n    setListProjects([]);\r\n    setShowLimit(show_num_projects_initial);\r\n    opencnft_get_top_projects(win, (res) => {\r\n      setTopProjectData(res.data);\r\n      prepare_data(res.data, show_num_projects_initial);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listProjects.length === 0) onchange_window(\"7d\");\r\n  }, []);\r\n\r\n  function decimal(num) {\r\n    if (num) return num.toFixed(2);\r\n    return 0;\r\n  }\r\n  function add(accumulator, a) {\r\n    return accumulator + a;\r\n  }\r\n\r\n  function show_all() {\r\n    setPending(true);\r\n    setShowLimit(100);\r\n    prepare_data(topProjectData, 100);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {CNFTLoaded ? (\r\n        <section className=\"section top-project\">\r\n          <div className=\"container\">\r\n            <div className=\"columns\">\r\n              <div className=\"column is-2\"></div>\r\n              <div className=\"column is-8 has-text-centered\">\r\n                <p className=\"is-size-1\thas-text-centered\">\r\n                  Top Cardano NFTs Projects\r\n                </p>\r\n                <p className=\"has-text-centered\">\r\n                  The top CNFTs, ranked by volume, floor price and other\r\n                  statistics.\r\n                </p>\r\n              </div>\r\n              <div className=\"column is-2\">\r\n                <div className=\"control\">\r\n                  <span className=\"select\">\r\n                    <select\r\n                      value={window}\r\n                      onChange={(event) => onchange_window(event.target.value)}\r\n                    >\r\n                      {window_options.map((option, i) => {\r\n                        return (\r\n                          <option value={option.value} key={i}>\r\n                            {option.label}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {topProjectData.length > 0 &&\r\n            showLimit === show_num_projects_initial ? (\r\n              <>\r\n                <div className=\"columns is-multiline\">\r\n                  {listProjects\r\n                    .slice(0, show_num_projects_initial)\r\n                    .map((project, i) => {\r\n                      return (\r\n                        <div className=\"column is-one-fifth\" key={i}>\r\n                          <Link to={`/collection/${project.policies[0]}`}>\r\n                            <div className=\"card\">\r\n                              {/* <Skeleton height=\"100%\"/> */}\r\n                              <div className=\"card-image\">\r\n                                <figure className=\"image is-square\">\r\n                                  <FadeImg\r\n                                    className=\"top-project-image\"\r\n                                    src={project.image}\r\n                                    alt={project.name}\r\n                                  />\r\n                                  {/* <Image className=\"top-project-image\" src={project.image} alt={project.name} /> */}\r\n                                </figure>\r\n                              </div>\r\n                              <div className=\"card-content\">\r\n                                <div className=\"media\">\r\n                                  <div className=\"media-content\">\r\n                                    <p className=\"title is-6 top-project-title\">\r\n                                      {project.name}\r\n                                    </p>\r\n                                    <p\r\n                                      className=\"subtitle is-6\"\r\n                                      data-tooltip=\"Trading volume in ₳\"\r\n                                    >\r\n                                      ₳{numFormatter(project.volume)} (\r\n                                      <span\r\n                                        data-tooltip={`Change in volume in past ${\r\n                                          window === \"7d\" ? \"7 days\" : \"1 day\"\r\n                                        }`}\r\n                                        className={\r\n                                          parseFloat(\r\n                                            decimal(\r\n                                              project[\r\n                                                window === \"7d\"\r\n                                                  ? \"7dChange\"\r\n                                                  : \"1dChange\"\r\n                                              ]\r\n                                            )\r\n                                          ) >= 0\r\n                                            ? \"has-text-success\"\r\n                                            : \"has-text-danger\"\r\n                                        }\r\n                                      >\r\n                                        {parseFloat(\r\n                                          decimal(\r\n                                            project[\r\n                                              window === \"7d\"\r\n                                                ? \"7dChange\"\r\n                                                : \"1dChange\"\r\n                                            ]\r\n                                          )\r\n                                        )}\r\n                                        %\r\n                                      </span>\r\n                                      )\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </div>\r\n                <button\r\n                  className=\"button is-outlined is-link is-fullwidth\"\r\n                  onClick={() => show_all()}\r\n                >\r\n                  See top 100 collections\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <DataTable\r\n                columns={columns}\r\n                data={listProjects}\r\n                defaultSortFieldId={3}\r\n                defaultSortAsc={false}\r\n                progressPending={pending}\r\n                progressComponent={\r\n                  <progress\r\n                    className=\"progress is-primary\"\r\n                    max=\"100\"\r\n                  ></progress>\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Navbar } from \"components\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst MainLayout = ({ children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <div>{children}</div>\r\n      <footer className=\"footer\">\r\n        <div className=\"content has-text-centered\">\r\n          <p className=\"credits\">\r\n            Made with <i className=\"fas fa-heart\"></i> By{\" \"}\r\n            <strong>WorkPack Labs</strong>, Follow Us on:{\" \"}\r\n            <span className=\"social-media\">\r\n              <a\r\n                href=\"#\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <i className=\"fab fa-linkedin\"></i>\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <i className=\"fab fa-github\"></i>\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <i className=\"fab fa-twitter\"></i>\r\n              </a>\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nMainLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\r\n\r\nvar { create } = require(\"ipfs-http-client\");\r\n\r\nclass ImageUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { file: \"\", imagePreviewUrl: \"\" };\r\n  }\r\n\r\n  async _handleSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  async _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = async () => {\r\n      // TODO: do something with -> this.state.file\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result,\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n    try {\r\n      const client = create(\"https://ipfs.infura.io:5001/api/v0\");\r\n      const created = await client.add(file);\r\n      let ipfs_url = `https://ipfs.infura.io/ipfs/${created.path}`;\r\n      this.props.setIPFS(ipfs_url.slice(28));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { state } = this.state;\r\n    let $imagePreview = null;\r\n\r\n    return (\r\n      <div className=\"previewComponent\">\r\n        <form onSubmit={(e) => this._handleSubmit(e)}>\r\n        <label htmlFor=\"file\" className=\"br_dropzone\">\r\n<input\r\n            className=\"fileInput\"\r\n            type=\"file\"\r\n            id=\"file\" name=\"file\"\r\n            onChange={(e) => this._handleImageChange(e)}\r\n          />\r\n    <input type=\"text\" id=\"fileName\" name=\"fileName\" placeholder={this.state.file ? this.state.file.name : 'Drop files to upload (or click)'} readOnly/>\r\n  </label>\r\n        </form>\r\n        <div className=\"imgPreview\">{$imagePreview}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport \"./loader.css\";\r\nimport Loader from \"react-js-loader\";\r\n\r\nfunction Spinner({ loading }) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      border: \"none\",\r\n      backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        id=\"loading\"\r\n        aria-labelledby=\"transition-Dialog-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        closeAfterTransition\r\n        open={loading}\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 15000,\r\n        }}\r\n        hideBackdrop={!loading}\r\n      >\r\n        <Fade in={loading}>\r\n          <Loader\r\n            type=\"spinner-default\"\r\n            bgColor={\"#fff\"}\r\n            color={\"#FFFFFF\"}\r\n            size={150}\r\n          />\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default Spinner;\r\n","import { async } from \"@firebase/util\";\r\nimport { MintAsset } from \"cardano/market-contract\";\r\nimport Wallet from \"../../cardano/wallet\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../Home/style.scss\";\r\nimport ImageUpload from \"./ImageUploader\";\r\nimport * as Cardano from \"@emurgo/cardano-serialization-lib-asmjs\";\r\nimport { cardano } from \"cardano/blockfrost-api\";\r\nimport Spinner from \"./Loader\";\r\nimport { loadAssets } from \"store/wallet/api\";\r\nimport { toHex } from \"utils/converter\";\r\nimport NotConnected from \"../Account/NotConnected\";\r\n\r\nexport async function waitForTransaction(tx, setisMinting) {\r\n  try {\r\n    var checkBool = false;\r\n    setisMinting(true);\r\n    while (!checkBool) {\r\n      try {\r\n        const res = await cardano(`txs/${tx}`);\r\n        checkBool = true;\r\n        setisMinting(false);\r\n      } catch (error) {}\r\n    }\r\n    console.log(\"Complete\");\r\n    return \"Complete\";\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nexport default function Mint() {\r\n  const state_wallet = useSelector((state) => state.wallet);\r\n\r\n  const state_collection = useSelector((state) => state.collection);\r\n  const [AssetName, setAssetName] = React.useState(\"\");\r\n  const [Quantity, setQuantity] = React.useState(\"\");\r\n  const [Author, setAuthor] = React.useState(\"\");\r\n  const [IPFS, setIPFS] = React.useState();\r\n  const [isMinting, setisMinting] = useState(false);\r\n  const default_list_projects = [{ value: \"all\", label: \"All Projects\" }];\r\n\r\n  const [listProjectsFilter, setListProjectsFilter] = useState([\r\n    ...default_list_projects,\r\n  ]);\r\n  const [listings, setListings] = useState([]);\r\n  const dispatch = useDispatch();\r\n  function load() {\r\n    if (state_wallet.loaded_assets) {\r\n      let list_nfts = [];\r\n      let list_projects = [...default_list_projects];\r\n      let dict_projects = {};\r\n\r\n      for (var i in state_wallet.data.assets) {\r\n        let this_asset = state_wallet.data.assets[i];\r\n        if (this_asset) {\r\n          list_nfts.push(this_asset);\r\n\r\n          let policy_id = this_asset.details.policyId;\r\n\r\n          if (policy_id in state_collection.policies_collections) {\r\n            dict_projects[policy_id] =\r\n              state_collection.policies_collections[policy_id].meta.name;\r\n          } else {\r\n            dict_projects[policy_id] = policy_id;\r\n          }\r\n        }\r\n      }\r\n      setListings(list_nfts);\r\n\r\n      for (var policy_id in dict_projects) {\r\n        list_projects.push({\r\n          value: policy_id,\r\n          label: dict_projects[policy_id],\r\n        });\r\n      }\r\n      setListProjectsFilter(list_projects);\r\n    }\r\n  }\r\n  async function MintToken(IPFS) {\r\n    const walletUtxos = await Wallet.getUtxos();\r\n    const { txHash, policyId } = await MintAsset(\r\n      {\r\n        address: Cardano.BaseAddress.from_address(\r\n          Cardano.Address.from_bech32(state_wallet.data.address)\r\n        ),\r\n        utxos: walletUtxos,\r\n      },\r\n      AssetName,\r\n      Quantity,\r\n      Author,\r\n      IPFS\r\n    );\r\n    await waitForTransaction(txHash, setisMinting);\r\n    dispatch(\r\n      loadAssets(state_wallet, (res) => {\r\n        load();\r\n      })\r\n    );\r\n    window.location.href = `/assets/${policyId}/${policyId}${toHex(AssetName)}`;\r\n  }\r\n  return (\r\n\r\n  !state_wallet.connected ? (\r\n      <NotConnected/>\r\n  ) : <>\r\n    <div style={{ height: \"85vh\" }} className=\"mint-container\">\r\n      <Spinner loading={isMinting} />\r\n      <div className=\"mint-box zoom\">\r\n        <div>\r\n          {\" \"}\r\n          <ImageUpload setIPFS={setIPFS} />\r\n          <input placeholder=\"Name\"\r\n          className=\"input is-rounded m-y\"\r\n            value={AssetName}\r\n            onChange={(e) => {\r\n              setAssetName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <input placeholder=\"Quantity\" \r\n          type=\"number\"\r\n          className=\"input is-rounded m-y\"\r\n            value={Quantity}\r\n            onChange={(e) => {\r\n              setQuantity(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <input placeholder=\"Author\"\r\n          className=\"input is-rounded m-y\"\r\n            value={Author}\r\n            onChange={(e) => {\r\n              setAuthor(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n        className=\"button is-rounded is-info m-y m-auto\"\r\n          onClick={async () => {\r\n            await MintToken(IPFS);\r\n          }}\r\n          \r\n        >\r\n          MInt NFT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  Home,\r\n  Collection,\r\n  Asset,\r\n  Account,\r\n  Explore,\r\n} from \"pages\";\r\n\r\nimport { MainLayout } from \"layouts\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"@creativebulma/bulma-tooltip/dist/bulma-tooltip.min.css\";\r\nimport Mint from \"pages/Mint/Mint\";\r\n\r\nconst RenderRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <MainLayout>\r\n          <Home />\r\n        </MainLayout>\r\n      </Route>\r\n      <Route exact path=\"/collection/:collection_id\">\r\n        <MainLayout>\r\n          <Collection />\r\n        </MainLayout>\r\n      </Route>\r\n      <Route exact path=\"/assets/:policy_id/:asset_id\">\r\n        <MainLayout>\r\n          <Asset />\r\n        </MainLayout>\r\n      </Route>\r\n      <Route exact path=\"/account\">\r\n        <MainLayout>\r\n          <Account />\r\n        </MainLayout>\r\n      </Route>\r\n      <Route exact path=\"/explore\">\r\n        <MainLayout>\r\n          <Explore />\r\n        </MainLayout>\r\n      </Route>\r\n      <Route exact path=\"/mint\">\r\n        <MainLayout>\r\n          <Mint />\r\n        </MainLayout>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RenderRoutes;\r\n","import React, { useEffect } from \"react\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RenderRoutes from \"routes\";\r\n\r\nimport { load_collection } from \"store/collection/api\";\r\nimport { clear_error } from \"store/error/errorActions\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"@creativebulma/bulma-tooltip/dist/bulma-tooltip.min.css\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const state_collection = useSelector((state) => state.collection);\r\n  const state_error = useSelector((state) => state.error);\r\n\r\n  useEffect(() => {\r\n    if (!state_collection.loaded && !state_collection.loading) {\r\n      dispatch(load_collection((res) => {}));\r\n    }\r\n  }, [state_collection.loaded, state_collection.loading]);\r\n\r\n  return (\r\n    <ErrorBoundary\r\n      FallbackComponent={ErrorHandler}\r\n      onReset={() => history.push(\"/\")}\r\n    >\r\n      <RenderRoutes />\r\n      <SweetAlert\r\n        title=\"\"\r\n        show={state_error.show}\r\n        error\r\n        confirmBtnText=\"Oops!\"\r\n        onConfirm={() => dispatch(clear_error())}\r\n        confirmBtnCssClass=\"button is-danger\"\r\n      >\r\n        {state_error.message}\r\n      </SweetAlert>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nconst ErrorHandler = ({ error, componentStack, resetErrorBoundary }) => {\r\n  return (\r\n    <SweetAlert\r\n      show\r\n      error\r\n      title=\"Oops!\"\r\n      confirmBtnText=\"Go To Homepage\"\r\n      onConfirm={resetErrorBoundary}\r\n      confirmBtnCssClass=\"button is-danger\"\r\n    >\r\n      An error occured while attempting to display this page.\r\n    </SweetAlert>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// redux store\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./store/reducers\";\r\n\r\nimport WebFont from 'webfontloader';\r\n\r\nimport App from \"./App\";\r\n\r\nconst middleware = [reduxThunk];\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Titillium Web:300,400,700', 'sans-serif', 'Pacifico', 'cursive']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","const errorTypes = {\r\n  TRANSACTION_FAILED_SO_MANY_UTXOS: \"TRANSACTION_FAILED_SO_MANY_UTXOS\",\r\n  TRANSACTION_FAILED_NOT_ENOUGH_FUNDS: \"TRANSACTION_FAILED_NOT_ENOUGH_FUNDS\",\r\n  TRANSACTION_FAILED_CHANGE_TOO_SMALL: \"TRANSACTION_FAILED_CHANGE_TOO_SMALL\",\r\n  TRANSACTION_FAILED_MAX_TX_SIZE_REACHED: \"TRANSACTION_FAILED_MAX_TX_SIZE_REACHED\",\r\n  TRANSACTION_FAILED_DATUMS_NOT_MATCHING: \"TRANSACTION_FAILED_DATUMS_NOT_MATCHING\",\r\n  TRANSACTION_FAILED_WRONG_SCRIPT_CONTRACT: \"TRANSACTION_FAILED_WRONG_SCRIPT_CONTRACT\",\r\n  TRANSACTION_FAILED_ASSET_NOT_SPENDABLE: \"TRANSACTION_FAILED_ASSET_NOT_SPENDABLE\",\r\n};\r\n\r\nexport default errorTypes;\r\n","import Cardano from \"../serialization-lib\";\r\nimport { fromHex, toHex } from \"../../utils/converter\";\r\n\r\nexport const serializeSale = ({ tn, cs, sa, ra, rp, price }) => {\r\n  const fields = Cardano.Instance.PlutusList.new();\r\n\r\n  fields.add(Cardano.Instance.PlutusData.new_bytes(fromHex(sa)));\r\n  fields.add(\r\n    Cardano.Instance.PlutusData.new_integer(\r\n      Cardano.Instance.BigInt.from_str(`${price}`)\r\n    )\r\n  );\r\n  fields.add(Cardano.Instance.PlutusData.new_bytes(fromHex(cs)));\r\n  fields.add(Cardano.Instance.PlutusData.new_bytes(fromHex(tn)));\r\n  fields.add(Cardano.Instance.PlutusData.new_bytes(fromHex(ra)));\r\n  fields.add(\r\n    Cardano.Instance.PlutusData.new_integer(\r\n      Cardano.Instance.BigInt.from_str(`${rp}`)\r\n    )\r\n  );\r\n\r\n  const datum = Cardano.Instance.PlutusData.new_constr_plutus_data(\r\n    Cardano.Instance.ConstrPlutusData.new(\r\n      Cardano.Instance.Int.new_i32(0),\r\n      fields\r\n    )\r\n  );\r\n\r\n  return datum;\r\n};\r\n\r\nexport const deserializeSale = (datum) => {\r\n  const details = datum.as_constr_plutus_data().data();\r\n\r\n  return {\r\n    tn: toHex(details.get(3).as_bytes()),\r\n    cs: toHex(details.get(2).as_bytes()),\r\n    sa: toHex(details.get(0).as_bytes()),\r\n    ra: toHex(details.get(4).as_bytes()),\r\n    rp: details.get(5).as_integer().to_str(),\r\n    price: details.get(1).as_integer().to_str(),\r\n  };\r\n};\r\n\r\nexport const serializeUpdate = ({ vh }) => {\r\n  const fieldsNested = Cardano.Instance.PlutusList.new();\r\n\r\n  fieldsNested.add(Cardano.Instance.PlutusData.new_bytes(fromHex(vh)));\r\n\r\n  const fields = Cardano.Instance.PlutusList.new();\r\n\r\n  fields.add(\r\n    Cardano.Instance.PlutusData.new_constr_plutus_data(\r\n      Cardano.Instance.ConstrPlutusData.new(\r\n        Cardano.Instance.Int.new_i32(0),\r\n        fieldsNested\r\n      )\r\n    )\r\n  );\r\n\r\n  const datum = Cardano.Instance.PlutusData.new_constr_plutus_data(\r\n    Cardano.Instance.ConstrPlutusData.new(\r\n      Cardano.Instance.Int.new_i32(0),\r\n      fields\r\n    )\r\n  );\r\n\r\n  return datum;\r\n};\r\n","import Cardano from \"../serialization-lib\";\r\nimport * as Cardanoo from \"@emurgo/cardano-serialization-lib-asmjs\";\r\nimport ErrorTypes from \"./error.types\";\r\nimport { serializeSale, deserializeSale } from \"./datums\";\r\nimport { BUYER, MINT, SELLER } from \"./redeemers\";\r\nimport { contractAddress, contractScripts } from \"./validator\";\r\nimport {\r\n  assetsToValue,\r\n  createTxOutput,\r\n  finalizeTx,\r\n  initializeTx,\r\n  initializeTx10,\r\n  serializeTxUnspentOutput,\r\n  serializeTxUnspentOutput10,\r\n} from \"../transaction\";\r\nimport { fromHex, toHex } from \"../../utils/converter\";\r\nimport Wallet from \"cardano/wallet\";\r\n\r\nexport const MintAsset = async (\r\n  seller: {\r\n    address: BaseAddress,\r\n    utxos: [],\r\n  },\r\n  AssetName: String,\r\n  Quantity: String,\r\n  Author: String,\r\n  IPFS: String\r\n) => {\r\n  try {\r\n    const { txBuilder } = initializeTx10();\r\n    const utxos = seller.utxos.map((utxo) => serializeTxUnspentOutput10(utxo));\r\n\r\n    const nativeScripts = Cardanoo.NativeScripts.new();\r\n    const scriptPubkey = Cardanoo.NativeScript.new_script_pubkey(\r\n      Cardanoo.ScriptPubkey.new(seller.address.payment_cred().to_keyhash())\r\n    );\r\n\r\n    nativeScripts.add(scriptPubkey);\r\n\r\n    const policyId = Buffer.from(scriptPubkey.hash(0).to_bytes()).toString(\r\n      \"hex\"\r\n    );\r\n    const MintAssets = Cardanoo.MintAssets.new();\r\n    const assetName = Cardanoo.AssetName.new(Buffer.from(AssetName, \"utf8\"));\r\n    var assetNumber = Cardanoo.Int.new_i32(parseInt(Quantity));\r\n\r\n    MintAssets.insert(assetName, assetNumber);\r\n    assetNumber = Cardanoo.BigNum.from_str(Quantity);\r\n\r\n    const MultiAsset = Cardanoo.MultiAsset.new();\r\n    const Assets = Cardanoo.Assets.new();\r\n    Assets.insert(assetName, assetNumber);\r\n\r\n    MultiAsset.insert(scriptPubkey.hash(0), Assets);\r\n\r\n    // txBuilder.set_mint_asset(nativeScript, MintAssets);\r\n\r\n    txBuilder.add_mint_asset_and_output(\r\n      scriptPubkey,\r\n      assetName,\r\n      Cardanoo.Int.new_i32(Quantity),\r\n      Cardanoo.TransactionOutputBuilder.new()\r\n        .with_address(seller.address.to_address())\r\n        .next(),\r\n      Cardanoo.BigNum.from_str(\"1600000\")\r\n    );\r\n\r\n    let aux_data = Cardanoo.AuxiliaryData.new();\r\n    const generalMetadata = Cardanoo.GeneralTransactionMetadata.new();\r\n    generalMetadata.insert(\r\n      Cardanoo.BigNum.from_str(\"721\"),\r\n      Cardanoo.encode_json_str_to_metadatum(\r\n        JSON.stringify({\r\n          [policyId]: {\r\n            [AssetName]: {\r\n              image: `ipfs://${IPFS}`,\r\n              name: AssetName,\r\n              Quantity,\r\n              Author,\r\n            },\r\n          },\r\n        }),\r\n        1\r\n      )\r\n    );\r\n\r\n    aux_data.set_metadata(generalMetadata);\r\n    aux_data.set_native_scripts(nativeScripts);\r\n    txBuilder.set_auxiliary_data(aux_data);\r\n    const inputs = Cardanoo.TransactionUnspentOutputs.new();\r\n\r\n    utxos.forEach((utxo) => {\r\n      inputs.add(utxo);\r\n    });\r\n    txBuilder.add_inputs_from(inputs, 2);\r\n    // txBuilder.add_inputs_from(utxos, 2);\r\n\r\n    txBuilder.add_change_if_needed(seller.address.to_address());\r\n    const tx = txBuilder.build_tx();\r\n\r\n    let txVkeyWitnesses = await Wallet.signTx(toHex(tx.to_bytes()), true);\r\n\r\n    txVkeyWitnesses = Cardanoo.TransactionWitnessSet.from_bytes(\r\n      fromHex(txVkeyWitnesses)\r\n    );\r\n    txVkeyWitnesses.set_native_scripts(nativeScripts);\r\n\r\n    const signedTx = Cardanoo.Transaction.new(\r\n      tx.body(),\r\n      txVkeyWitnesses,\r\n      tx.auxiliary_data()\r\n    );\r\n    const txHash = await Wallet.submitTx(toHex(signedTx.to_bytes()));\r\n    return { txHash, policyId };\r\n  } catch (error) {\r\n    console.log(error, \"MintAsset\");\r\n  }\r\n};\r\nexport const listAsset = async (\r\n  datum,\r\n  seller: { address: BaseAddress, utxos: [] },\r\n  version\r\n) => {\r\n  try {\r\n    const { txBuilder, datums, outputs } = initializeTx();\r\n    const utxos = seller.utxos.map((utxo) => serializeTxUnspentOutput(utxo));\r\n\r\n    const lockAssetDatum = serializeSale(datum);\r\n    datums.add(lockAssetDatum);\r\n\r\n    outputs.add(\r\n      createTxOutput(\r\n        contractAddress(version),\r\n        assetsToValue([\r\n          {\r\n            unit: `${datum.cs}${datum.tn}`,\r\n            quantity: \"1\",\r\n          },\r\n          { unit: \"lovelace\", quantity: \"2000000\" },\r\n        ]),\r\n        { datum: lockAssetDatum }\r\n      )\r\n    );\r\n\r\n    const datumHash = toHex(\r\n      Cardano.Instance.hash_plutus_data(lockAssetDatum).to_bytes()\r\n    );\r\n\r\n    const txHash = await finalizeTx({\r\n      txBuilder,\r\n      datums,\r\n      utxos,\r\n      outputs,\r\n      changeAddress: seller.address,\r\n      metadata: deserializeSale(lockAssetDatum),\r\n    });\r\n    return {\r\n      datumHash,\r\n      txHash,\r\n    };\r\n  } catch (error) {\r\n    handleError(error, \"listAsset\");\r\n  }\r\n};\r\n\r\nexport const updateListing = async (\r\n  currentDatum,\r\n  newDatum,\r\n  seller: { address: BaseAddress, utxos: [] },\r\n  assetUtxo,\r\n  currentVersion,\r\n  latestVersion\r\n) => {\r\n  try {\r\n    const { txBuilder, datums, outputs } = initializeTx();\r\n    const utxos = seller.utxos.map((utxo) => serializeTxUnspentOutput(utxo));\r\n\r\n    const currentListingDatum = serializeSale(currentDatum);\r\n    datums.add(currentListingDatum);\r\n\r\n    const newListingDatum = serializeSale(newDatum);\r\n    datums.add(newListingDatum);\r\n\r\n    outputs.add(\r\n      createTxOutput(\r\n        contractAddress(latestVersion),\r\n        assetUtxo.output().amount(),\r\n        {\r\n          datum: newListingDatum,\r\n        }\r\n      )\r\n    );\r\n\r\n    const requiredSigners = Cardano.Instance.Ed25519KeyHashes.new();\r\n    requiredSigners.add(seller.address.payment_cred().to_keyhash());\r\n    txBuilder.set_required_signers(requiredSigners);\r\n\r\n    const datumHash = toHex(\r\n      Cardano.Instance.hash_plutus_data(newListingDatum).to_bytes()\r\n    );\r\n\r\n    const txHash = await finalizeTx({\r\n      txBuilder,\r\n      datums,\r\n      utxos,\r\n      outputs,\r\n      changeAddress: seller.address,\r\n      metadata: deserializeSale(newListingDatum),\r\n      assetUtxo,\r\n      plutusScripts: contractScripts(currentVersion),\r\n      action: SELLER,\r\n    });\r\n\r\n    return {\r\n      datumHash,\r\n      txHash,\r\n    };\r\n  } catch (error) {\r\n    handleError(error, \"updateListing\");\r\n  }\r\n};\r\n\r\nexport const cancelListing = async (\r\n  datum,\r\n  seller: { address: BaseAddress, utxos: [] },\r\n  assetUtxo,\r\n  version\r\n) => {\r\n  try {\r\n    const { txBuilder, datums, outputs } = initializeTx();\r\n    const utxos = seller.utxos.map((utxo) => serializeTxUnspentOutput(utxo));\r\n\r\n    const cancelListingDatum = serializeSale(datum);\r\n    datums.add(cancelListingDatum);\r\n\r\n    outputs.add(\r\n      createTxOutput(seller.address.to_address(), assetUtxo.output().amount())\r\n    );\r\n\r\n    const requiredSigners = Cardano.Instance.Ed25519KeyHashes.new();\r\n    requiredSigners.add(seller.address.payment_cred().to_keyhash());\r\n    txBuilder.set_required_signers(requiredSigners);\r\n\r\n    const txHash = await finalizeTx({\r\n      txBuilder,\r\n      datums,\r\n      utxos,\r\n      outputs,\r\n      changeAddress: seller.address,\r\n      assetUtxo,\r\n      plutusScripts: contractScripts(version),\r\n      action: SELLER,\r\n    });\r\n\r\n    return txHash;\r\n  } catch (error) {\r\n    handleError(error, \"cancelListing\");\r\n  }\r\n};\r\n\r\nexport const purchaseAsset = async (\r\n  datum,\r\n  buyer: { address: BaseAddress, utxos: [] },\r\n  beneficiaries: {\r\n    seller: BaseAddress,\r\n    artist: BaseAddress,\r\n    market: BaseAddress,\r\n  },\r\n  assetUtxo,\r\n  version\r\n) => {\r\n  try {\r\n    const { txBuilder, datums, outputs } = initializeTx();\r\n    const utxos = buyer.utxos.map((utxo) => serializeTxUnspentOutput(utxo));\r\n\r\n    const purchaseAssetDatum = serializeSale(datum);\r\n    datums.add(purchaseAssetDatum);\r\n\r\n    outputs.add(\r\n      createTxOutput(buyer.address.to_address(), assetUtxo.output().amount())\r\n    );\r\n\r\n    splitAmount(\r\n      beneficiaries,\r\n      {\r\n        price: datum.price,\r\n        royalties: datum.rp,\r\n      },\r\n      outputs\r\n    );\r\n\r\n    const requiredSigners = Cardano.Instance.Ed25519KeyHashes.new();\r\n    requiredSigners.add(buyer.address.payment_cred().to_keyhash());\r\n    txBuilder.set_required_signers(requiredSigners);\r\n\r\n    const txHash = await finalizeTx({\r\n      txBuilder,\r\n      utxos,\r\n      outputs,\r\n      datums,\r\n      changeAddress: buyer.address,\r\n      assetUtxo,\r\n      plutusScripts: contractScripts(version),\r\n      action: BUYER,\r\n    });\r\n\r\n    return txHash;\r\n  } catch (error) {\r\n    handleError(error, \"purchaseAsset\");\r\n  }\r\n};\r\n\r\nconst handleError = (error, source) => {\r\n  console.error(`Unexpected error in ${source}. [Message: ${error.message}]`);\r\n\r\n  switch (error.message) {\r\n    case \"INPUT_LIMIT_EXCEEDED\":\r\n      throw new Error(ErrorTypes.TRANSACTION_FAILED_SO_MANY_UTXOS);\r\n    case \"INPUTS_EXHAUSTED\":\r\n      throw new Error(ErrorTypes.TRANSACTION_FAILED_NOT_ENOUGH_FUNDS);\r\n    case \"MIN_UTXO_ERROR\":\r\n      throw new Error(ErrorTypes.TRANSACTION_FAILED_CHANGE_TOO_SMALL);\r\n    case \"MAX_SIZE_REACHED\":\r\n      throw new Error(ErrorTypes.TRANSACTION_FAILED_MAX_TX_SIZE_REACHED);\r\n    default:\r\n      if (error.message.search(\"NonOutputSupplimentaryDatums\") !== -1) {\r\n        throw new Error(ErrorTypes.TRANSACTION_FAILED_DATUMS_NOT_MATCHING);\r\n      } else if (error.message.search(\"MissingScriptWitnessesUTXOW\") !== -1) {\r\n        throw new Error(ErrorTypes.TRANSACTION_FAILED_WRONG_SCRIPT_CONTRACT);\r\n      } else if (error.message.search(\"OutputTooSmallUTxO\") !== -1) {\r\n        throw new Error(ErrorTypes.TRANSACTION_FAILED_ASSET_NOT_SPENDABLE);\r\n      }\r\n      throw error;\r\n  }\r\n};\r\n\r\nconst splitAmount = (\r\n  { seller, artist, market },\r\n  { price, royalties },\r\n  outputs\r\n) => {\r\n  const minimumAmount = 1000000;\r\n  const marketFeePercentage = 2 / 100;\r\n  const royaltyFeePercentage = royalties / 1000;\r\n  const royaltyFees = Math.max(royaltyFeePercentage * price, minimumAmount);\r\n  if (royalties > 0) {\r\n    outputs.add(\r\n      createTxOutput(\r\n        artist.to_address(),\r\n        assetsToValue([{ unit: \"lovelace\", quantity: `${royaltyFees}` }])\r\n      )\r\n    );\r\n  }\r\n\r\n  const marketFees = Math.max(marketFeePercentage * price, minimumAmount);\r\n  outputs.add(\r\n    createTxOutput(\r\n      market.to_address(),\r\n      assetsToValue([{ unit: \"lovelace\", quantity: `${marketFees}` }])\r\n    )\r\n  );\r\n\r\n  var netPrice = price - royaltyFeePercentage * price;\r\n  netPrice = netPrice - marketFeePercentage * price;\r\n\r\n  outputs.add(\r\n    createTxOutput(\r\n      seller.to_address(),\r\n      assetsToValue([\r\n        { unit: \"lovelace\", quantity: `${Math.max(netPrice, minimumAmount)}` },\r\n      ])\r\n    )\r\n  );\r\n};\r\n"],"sourceRoot":""}